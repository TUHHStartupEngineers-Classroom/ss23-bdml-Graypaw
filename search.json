[
  {
    "objectID": "content/01_journal/01_tidyverse.html",
    "href": "content/01_journal/01_tidyverse.html",
    "title": "Tidyverse",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh.\nThis is a .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "content/01_journal/01_tidyverse.html#header-2",
    "href": "content/01_journal/01_tidyverse.html#header-2",
    "title": "Tidyverse",
    "section": "\n2.1 Header 2",
    "text": "2.1 Header 2\nHeader 3\nHeader 4\nHeader 5\nHeader 6"
  },
  {
    "objectID": "content/01_journal/02_data_acquisition.html",
    "href": "content/01_journal/02_data_acquisition.html",
    "title": "Data Acquisition",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/03_data_wrangling.html",
    "href": "content/01_journal/03_data_wrangling.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/04_data_visualization.html",
    "href": "content/01_journal/04_data_visualization.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/02_notes/05_class_notes.html",
    "href": "content/02_notes/05_class_notes.html",
    "title": "Class Notes",
    "section": "",
    "text": "IMPORTANT: You can delete everything in here and start fresh. You might want to start by not deleting anything above this line until you know what that stuff is doing.\nThis is an .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header."
  },
  {
    "objectID": "content/03_other/06_links.html",
    "href": "content/03_other/06_links.html",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual .\n\n\n\n\nGoogle is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  },
  {
    "objectID": "content/03_other/06_links.html#r-and-r-studio",
    "href": "content/03_other/06_links.html#r-and-r-studio",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual ."
  },
  {
    "objectID": "content/03_other/06_links.html#additional-r-resources",
    "href": "content/03_other/06_links.html#additional-r-resources",
    "title": "Links",
    "section": "",
    "text": "Google is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Lab Journal",
    "section": "",
    "text": "This is a template example for lab journaling. Students in the data science courses at the Institute of Entrepreneurship will use this template to learn R for business analytics. Students can replace this text as they wish."
  },
  {
    "objectID": "index.html#challenge-1",
    "href": "index.html#challenge-1",
    "title": "My Lab Journal",
    "section": "Challenge 1",
    "text": "Challenge 1\nCheck https://tuhhstartupengineers-classroom.github.io/ss23-bdml-Graypaw/Chapter_1_Challenge.html"
  },
  {
    "objectID": "index.html#step-1---convert-stock-prices-to-a-standardized-format-daily-returns",
    "href": "index.html#step-1---convert-stock-prices-to-a-standardized-format-daily-returns",
    "title": "Session 6 - Challenge - Company Segmentation",
    "section": "Step 1 - Convert stock prices to a standardized format (daily returns)",
    "text": "Step 1 - Convert stock prices to a standardized format (daily returns)\nWhat you first need to do is get the data in a format that can be converted to a “user-item” style matrix. The challenge here is to connect the dots between what we have and what we need to do to format it properly.\nWe know that in order to compare the data, it needs to be standardized or normalized. Why? Because we cannot compare values (stock prices) that are of completely different magnitudes. In order to standardize, we will convert from adjusted stock price (dollar value) to daily returns (percent change from previous day). Here is the formula.\n\\[\nreturn_{daily} = \\frac{price_{i}-price_{i-1}}{price_{i-1}}\n\\]\nFirst, what do we have? We have stock prices for every stock in the SP 500 Index, which is the daily stock prices for over 500 stocks. The data set is over 1.2M observations.\n\nsp_500_prices_tbl %&gt;% glimpse()\n\nRows: 1,225,765\nColumns: 8\n$ symbol   &lt;chr&gt; \"MSFT\", \"MSFT\", \"MSFT\", \"MSFT\", \"MSFT\", \"MSFT\", \"MSFT\", \"MSFT…\n$ date     &lt;date&gt; 2009-01-02, 2009-01-05, 2009-01-06, 2009-01-07, 2009-01-08, …\n$ open     &lt;dbl&gt; 19.53, 20.20, 20.75, 20.19, 19.63, 20.17, 19.71, 19.52, 19.53…\n$ high     &lt;dbl&gt; 20.40, 20.67, 21.00, 20.29, 20.19, 20.30, 19.79, 19.99, 19.68…\n$ low      &lt;dbl&gt; 19.37, 20.06, 20.61, 19.48, 19.55, 19.41, 19.30, 19.52, 19.01…\n$ close    &lt;dbl&gt; 20.33, 20.52, 20.76, 19.51, 20.12, 19.52, 19.47, 19.82, 19.09…\n$ volume   &lt;dbl&gt; 50084000, 61475200, 58083400, 72709900, 70255400, 49815300, 5…\n$ adjusted &lt;dbl&gt; 15.86624, 16.01451, 16.20183, 15.22628, 15.70234, 15.23408, 1…\n\n\nYour first task is to convert to a tibble named sp_500_daily_returns_tbl by performing the following operations:\n\nSelect the symbol, date and adjusted columns\nFilter to dates beginning in the year 2018 and beyond.\nCompute a Lag of 1 day on the adjusted stock price. Be sure to group by symbol first, otherwise we will have lags computed using values from the previous stock in the data frame.\nRemove a NA values from the lagging operation\nCompute the difference between adjusted and the lag\nCompute the percentage difference by dividing the difference by that lag. Name this column pct_return.\nReturn only the symbol, date, and pct_return columns\nSave as a variable named sp_500_daily_returns_tbl\n\n\n# Apply your data transformation skills!\nsp_500_daily_returns_tbl &lt;- sp_500_prices_tbl[, c(\"symbol\", \"date\", \"adjusted\")]\nsp_500_daily_returns_tbl &lt;- filter(sp_500_daily_returns_tbl, year(as.Date(sp_500_daily_returns_tbl$date)) &gt;= 2018)\nsp_split &lt;- split(sp_500_daily_returns_tbl, sp_500_daily_returns_tbl$symbol)\nfor (df_name in names(sp_split)) {\n  sp_split[[df_name]] &lt;- sp_split[[df_name]] %&gt;% mutate(lag_adjusted = lag(adjusted)) %&gt;% na.omit()\n  sp_split[[df_name]] &lt;- sp_split[[df_name]] %&gt;% mutate(pct_return = (adjusted - lag_adjusted)/lag_adjusted)\n}\nsp_500_daily_returns_tbl &lt;- bind_rows(sp_split)\nsp_500_daily_returns_tbl &lt;- select(sp_500_daily_returns_tbl, symbol, date, pct_return)\n\n# Output: sp_500_daily_returns_tbl\nsp_500_daily_returns_tbl\n\n# A tibble: 141,340 × 3\n   symbol date       pct_return\n   &lt;chr&gt;  &lt;date&gt;          &lt;dbl&gt;\n 1 A      2018-01-03   0.0254  \n 2 A      2018-01-04  -0.00750 \n 3 A      2018-01-05   0.0160  \n 4 A      2018-01-08   0.00215 \n 5 A      2018-01-09   0.0246  \n 6 A      2018-01-10  -0.0137  \n 7 A      2018-01-11   0.000141\n 8 A      2018-01-12   0.0131  \n 9 A      2018-01-16  -0.00697 \n10 A      2018-01-17   0.0117  \n# ℹ 141,330 more rows"
  },
  {
    "objectID": "index.html#step-2---convert-to-user-item-format",
    "href": "index.html#step-2---convert-to-user-item-format",
    "title": "Session 6 - Challenge - Company Segmentation",
    "section": "Step 2 - Convert to User-Item Format",
    "text": "Step 2 - Convert to User-Item Format\nThe next step is to convert to a user-item format with the symbol in the first column and every other column the value of the daily returns (pct_return) for every stock at each date.\nWe’re going to import the correct results first (just in case you were not able to complete the last step).\n\nsp_500_daily_returns_tbl &lt;- read_rds(\"sp_500_daily_returns_tbl.rds\")\nsp_500_daily_returns_tbl\n\n# A tibble: 141,340 × 3\n   symbol date       pct_return\n   &lt;chr&gt;  &lt;date&gt;          &lt;dbl&gt;\n 1 MSFT   2018-01-03   0.00465 \n 2 MSFT   2018-01-04   0.00880 \n 3 MSFT   2018-01-05   0.0124  \n 4 MSFT   2018-01-08   0.00102 \n 5 MSFT   2018-01-09  -0.000680\n 6 MSFT   2018-01-10  -0.00453 \n 7 MSFT   2018-01-11   0.00296 \n 8 MSFT   2018-01-12   0.0173  \n 9 MSFT   2018-01-16  -0.0140  \n10 MSFT   2018-01-17   0.0203  \n# ℹ 141,330 more rows\n\n\nNow that we have the daily returns (percentage change from one day to the next), we can convert to a user-item format. The user in this case is the symbol (company), and the item in this case is the pct_return at each date.\n\nSpread the date column to get the values as percentage returns. Make sure to fill an NA values with zeros.\nSave the result as stock_date_matrix_tbl\n\n\n# Convert to User-Item Format\nstock_date_matrix_tbl &lt;- sp_500_daily_returns_tbl %&gt;% spread(date, pct_return, fill = 0)\n  \n# Output: stock_date_matrix_tbl\nstock_date_matrix_tbl\n\n# A tibble: 502 × 283\n   symbol `2018-01-03` `2018-01-04` `2018-01-05` `2018-01-08` `2018-01-09`\n   &lt;chr&gt;         &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n 1 A          0.0254       -0.00750     0.0160        0.00215     0.0246  \n 2 AAL       -0.0123        0.00630    -0.000380     -0.00988    -0.000959\n 3 AAP        0.00905       0.0369      0.0106       -0.00704    -0.00808 \n 4 AAPL      -0.000174      0.00465     0.0114       -0.00371    -0.000115\n 5 ABBV       0.0156       -0.00570     0.0174       -0.0160      0.00754 \n 6 ABC        0.00372      -0.00222     0.0121        0.0166      0.00640 \n 7 ABMD       0.0173        0.0175      0.0154        0.0271      0.00943 \n 8 ABT        0.00221      -0.00170     0.00289      -0.00288     0.00170 \n 9 ACN        0.00462       0.0118      0.00825       0.00799     0.00333 \n10 ADBE       0.0188        0.0120      0.0116       -0.00162     0.00897 \n# ℹ 492 more rows\n# ℹ 277 more variables: `2018-01-10` &lt;dbl&gt;, `2018-01-11` &lt;dbl&gt;,\n#   `2018-01-12` &lt;dbl&gt;, `2018-01-16` &lt;dbl&gt;, `2018-01-17` &lt;dbl&gt;,\n#   `2018-01-18` &lt;dbl&gt;, `2018-01-19` &lt;dbl&gt;, `2018-01-22` &lt;dbl&gt;,\n#   `2018-01-23` &lt;dbl&gt;, `2018-01-24` &lt;dbl&gt;, `2018-01-25` &lt;dbl&gt;,\n#   `2018-01-26` &lt;dbl&gt;, `2018-01-29` &lt;dbl&gt;, `2018-01-30` &lt;dbl&gt;,\n#   `2018-01-31` &lt;dbl&gt;, `2018-02-01` &lt;dbl&gt;, `2018-02-02` &lt;dbl&gt;, …"
  },
  {
    "objectID": "index.html#step-3---perform-k-means-clustering",
    "href": "index.html#step-3---perform-k-means-clustering",
    "title": "Session 6 - Challenge - Company Segmentation",
    "section": "Step 3 - Perform K-Means Clustering",
    "text": "Step 3 - Perform K-Means Clustering\nNext, we’ll perform K-Means clustering.\nWe’re going to import the correct results first (just in case you were not able to complete the last step).\n\nstock_date_matrix_tbl &lt;- read_rds(\"stock_date_matrix_tbl.rds\")\n\nBeginning with the stock_date_matrix_tbl, perform the following operations:\n\nDrop the non-numeric column, symbol\nPerform kmeans() with centers = 4 and nstart = 20\nSave the result as kmeans_obj\n\n\n# Create kmeans_obj for 4 centers\ntemp &lt;- stock_date_matrix_tbl %&gt;% select(-symbol)\nkmeans_obj &lt;- kmeans(temp, centers = 4, nstart = 20)\nkmeans_obj\n\nK-means clustering with 4 clusters of sizes 30, 71, 84, 317\n\nCluster means:\n    2018-01-03   2018-01-04   2018-01-05  2018-01-08    2018-01-09\n1  0.014549433  0.011343742 0.0006474687 0.005827603 -0.0061031977\n2  0.014025528  0.004891946 0.0092884855 0.008080790 -0.0003389287\n3 -0.003333954 -0.006912672 0.0012340690 0.005406745 -0.0089961936\n4  0.005217181  0.004542594 0.0065882996 0.001682355  0.0035926461\n     2018-01-10   2018-01-11   2018-01-12   2018-01-16  2018-01-17   2018-01-18\n1  0.0012472656  0.023712257  0.010296386 -0.014205000 0.008879761 -0.009114860\n2 -0.0020594364  0.009308274  0.009571419 -0.008449825 0.015404285  0.001998036\n3 -0.0120427739 -0.004826786 -0.005236483  0.001309974 0.007494267 -0.006708276\n4 -0.0003417889  0.011272867  0.008286783 -0.007601889 0.007489971 -0.001424046\n   2018-01-19  2018-01-22    2018-01-23   2018-01-24    2018-01-25   2018-01-26\n1 0.001324402 0.024772066 -0.0005949105 -0.006334400 -1.029610e-02 0.0060671176\n2 0.006715878 0.009735809  0.0093980814 -0.007636793 -4.868228e-03 0.0166806037\n3 0.004566404 0.006985181  0.0080806520 -0.003852982  5.819039e-03 0.0008990918\n4 0.007923882 0.004611634  0.0009158796  0.002736219  6.261335e-05 0.0112167041\n    2018-01-29   2018-01-30   2018-01-31    2018-02-01  2018-02-02  2018-02-05\n1 -0.015217440 -0.021314151  0.001732506  0.0088676780 -0.03741749 -0.03711698\n2 -0.005021227 -0.009723839  0.005783896  0.0021775377 -0.02295550 -0.03846852\n3 -0.011666174 -0.003053078  0.010838715 -0.0147069869 -0.01321817 -0.02624758\n4 -0.006083350 -0.011773883 -0.003893409 -0.0002198492 -0.01945987 -0.03929605\n    2018-02-06    2018-02-07  2018-02-08  2018-02-09  2018-02-12   2018-02-13\n1  0.013342351 -0.0190853955 -0.03955006 -0.00291801 0.022509484 -0.006038450\n2  0.025070219 -0.0074124405 -0.04115078  0.02162704 0.018492458  0.008702354\n3 -0.000769148 -0.0052130982 -0.02013127  0.01909034 0.005043885  0.003804489\n4  0.014327389  0.0006988956 -0.03645141  0.01201566 0.012262163  0.002250963\n    2018-02-14   2018-02-15    2018-02-16    2018-02-20   2018-02-21\n1  0.028709277 -0.005064078 -0.0050865513  0.0004252287 -0.016731442\n2  0.024552532  0.016512878 -0.0064207255  0.0060618583 -0.004441781\n3 -0.004153567  0.016542153  0.0050883535 -0.0117393604 -0.016373701\n4  0.017405799  0.009018172  0.0009879948 -0.0076134581 -0.002297952\n    2018-02-22 2018-02-23   2018-02-26   2018-02-27   2018-02-28   2018-03-01\n1  0.009769590 0.02115968 9.924278e-05 -0.014163508 -0.023712904  0.001114025\n2 -0.002997867 0.02195730 1.220083e-02 -0.009308126 -0.005461278 -0.014143419\n3  0.007334973 0.01800925 2.523189e-03 -0.016890593 -0.004953530 -0.000381493\n4 -0.001782200 0.01341795 8.558352e-03 -0.013163471 -0.012030574 -0.013488875\n   2018-03-02 2018-03-05    2018-03-06   2018-03-07  2018-03-08  2018-03-09\n1 0.007737213 0.01108851  0.0003806278 -0.007205835 0.001223280 0.021309965\n2 0.021342169 0.01379969  0.0087369561  0.007337585 0.008156522 0.017801101\n3 0.001200669 0.01370457 -0.0019166661 -0.002145171 0.007270226 0.004711574\n4 0.005346057 0.01038346  0.0061748492 -0.001323156 0.001313594 0.017891556\n     2018-03-12   2018-03-13    2018-03-14   2018-03-15   2018-03-16\n1 -0.0005388962 -0.008199908 -0.0017622280 -0.012297035 0.0129985324\n2  0.0027135945 -0.012076285  0.0002114269 -0.002123033 0.0008341013\n3  0.0031507710  0.001106390  0.0009870808 -0.002700715 0.0054389622\n4 -0.0035181932 -0.003675462 -0.0084294900 -0.001428887 0.0043333233\n    2018-03-19   2018-03-20    2018-03-21   2018-03-22   2018-03-23 2018-03-26\n1 -0.017670238  0.013784848  0.0337207010 -0.021459951 -0.007163383 0.01896047\n2 -0.017248805  0.004318024 -0.0017923612 -0.026251915 -0.025754376 0.03407693\n3 -0.007648673 -0.003879733 -0.0090580220 -0.003464591 -0.013739589 0.01267397\n4 -0.010398300  0.000171361  0.0004388795 -0.027250330 -0.019522841 0.02449549\n    2018-03-27    2018-03-28  2018-03-29  2018-04-02  2018-04-03  2018-04-04\n1 -0.013465892 -0.0233216532 0.023735936 -0.02377674 0.019605101 0.001227871\n2 -0.032635868 -0.0121534871 0.018762622 -0.02940422 0.012355715 0.015777681\n3  0.007715361  0.0112983042 0.004369175 -0.01422130 0.007764893 0.010279533\n4 -0.013135617 -0.0004245702 0.013363731 -0.02238548 0.012621133 0.012434839\n   2018-04-05   2018-04-06    2018-04-09   2018-04-10    2018-04-11\n1 0.019447924 -0.022406930  0.0025547209  0.038827519  0.0130939406\n2 0.001453854 -0.029807187  0.0072958976  0.025353351 -0.0056141513\n3 0.002828578 -0.007734639 -0.0001039607 -0.001881378 -0.0007348127\n4 0.007176211 -0.023302068  0.0013397648  0.015147638 -0.0067400406\n    2018-04-12   2018-04-13  2018-04-16  2018-04-17    2018-04-18   2018-04-19\n1  0.001740217  0.013155802 0.008616509 0.006042663  0.0206900471  0.001786194\n2  0.015962569 -0.007832302 0.004860507 0.022161608  0.0002988631 -0.018124119\n3 -0.010752601  0.005563910 0.008682951 0.007863409 -0.0046798570 -0.013599108\n4  0.008179894 -0.005095188 0.011016656 0.006195900  0.0032189057 -0.003267487\n    2018-04-20   2018-04-23  2018-04-24    2018-04-25  2018-04-26   2018-04-27\n1 -0.003468391  0.006591688 -0.01599992  0.0059983491 0.011457675 -0.009243902\n2 -0.010631547 -0.003682519 -0.01618772 -0.0050286856 0.020824552 -0.004572574\n3 -0.012187591  0.001157400  0.00221505  0.0002285739 0.010261824  0.011958287\n4 -0.005666901  0.002505648 -0.01123779  0.0039772566 0.003569482  0.003206567\n     2018-04-30    2018-05-01   2018-05-02   2018-05-03   2018-05-04\n1  5.650547e-05 -0.0050385450  0.008551843 -0.003354957 0.0002403534\n2 -4.215671e-03  0.0119120995 -0.003166279  0.004031093 0.0152252115\n3 -5.828280e-03  0.0007776130 -0.009884618  0.001865179 0.0115802919\n4 -1.188822e-02 -0.0005850741 -0.010327390 -0.005367388 0.0118618730\n     2018-05-07    2018-05-08  2018-05-09  2018-05-10   2018-05-11\n1 -0.0006381188  0.0103725962 0.019005395 0.003092002 -0.001898366\n2  0.0107081957  0.0042713777 0.018287598 0.012255246 -0.004284660\n3 -0.0003423209 -0.0117845845 0.002356665 0.008776411 -0.001332108\n4  0.0006844511  0.0007354292 0.006015187 0.008198444  0.003294055\n     2018-05-14   2018-05-15   2018-05-16   2018-05-17    2018-05-18\n1  0.0057983409  0.004290063  0.008291791  0.020700579 -0.0059074763\n2  0.0016992322 -0.004501408  0.008611112 -0.004584975 -0.0022359815\n3 -0.0055922557 -0.011670012 -0.002364305 -0.004893340 -0.0039987220\n4  0.0005690565 -0.003929441  0.006577711  0.001955032 -0.0005493316\n   2018-05-21   2018-05-22    2018-05-23    2018-05-24    2018-05-25\n1 0.008283126 -0.013478278 -0.0044105608 -1.261852e-02 -0.0266239832\n2 0.005922644 -0.003192814  0.0057628973  1.489904e-03  0.0006639455\n3 0.005779365  0.002482762  0.0085556910  1.298424e-03  0.0047986326\n4 0.005961593 -0.004840369  0.0006489749  8.611148e-05 -0.0012343964\n    2018-05-29  2018-05-30   2018-05-31   2018-06-01   2018-06-04   2018-06-05\n1 -0.001696881 0.028669361 -0.012173706  0.002155198 -0.012253263 -0.002154042\n2 -0.006059243 0.009546631 -0.001903148  0.022277656  0.003563116  0.007483896\n3  0.001238291 0.011695739 -0.007053274 -0.003547776  0.003162351 -0.005049502\n4 -0.015959552 0.012555582 -0.010942939  0.010095531  0.005981400  0.003198089\n    2018-06-06   2018-06-07   2018-06-08  2018-06-11   2018-06-12    2018-06-13\n1  0.003809198  0.016374668 -0.004469895 0.005602012 -0.005129724 -0.0031941768\n2  0.008494834 -0.013241385  0.004352640 0.002487955  0.008414511  0.0006958373\n3 -0.005781605  0.002795166  0.005472490 0.001419442  0.008011873 -0.0102443629\n4  0.011968862  0.001149033  0.005784347 0.001753974  0.001399618 -0.0055633906\n     2018-06-14   2018-06-15    2018-06-18    2018-06-19  2018-06-20\n1 -0.0051560680 -0.022707272  0.0173805699  0.0006035218 0.010461839\n2  0.0095731668 -0.001900661  0.0009221515 -0.0088464161 0.006518084\n3  0.0089727967  0.005189750 -0.0037548361  0.0055750955 0.004292090\n4  0.0009142176  0.001952892 -0.0026534461 -0.0061898455 0.001076239\n    2018-06-21   2018-06-22   2018-06-25   2018-06-26   2018-06-27   2018-06-28\n1 -0.022917019  0.024278987 -0.026779988  0.017510326  0.015372888 -0.003154605\n2 -0.010378518 -0.007791614 -0.025003868  0.003632608 -0.020827173  0.010604506\n3  0.003094840  0.008221106  0.009402708  0.000226482 -0.001854346  0.007254731\n4 -0.005383937  0.001021374 -0.011979354 -0.001118698 -0.010185976  0.002804796\n     2018-06-29   2018-07-02   2018-07-03   2018-07-05  2018-07-06  2018-07-09\n1  6.801777e-03 -0.016776871  0.009084328 -0.001488715 0.013008260  0.01913839\n2  3.736572e-03  0.007468319 -0.011619902  0.013982441 0.012671282  0.00729805\n3  6.340609e-04 -0.002681042  0.004025346  0.012383700 0.005028909 -0.01604752\n4 -6.855821e-05  0.001471821 -0.001898671  0.006614258 0.006908309  0.01402647\n   2018-07-10   2018-07-11   2018-07-12    2018-07-13   2018-07-16   2018-07-17\n1 0.003473632 -0.024131440 7.366942e-05  0.0050874219 -0.015230587 -0.001992870\n2 0.003275802 -0.008306789 1.727150e-02 -0.0023338092 -0.002482895  0.008792052\n3 0.006173772  0.002633196 7.831687e-04  0.0004614193 -0.004724125 -0.001728087\n4 0.001312620 -0.009738650 4.563560e-03  0.0012950176 -0.001679823  0.004588254\n    2018-07-18   2018-07-19   2018-07-20   2018-07-23    2018-07-24  2018-07-25\n1  0.001663189 -0.001796304 -0.003616946 -0.003431901  0.0104494824 0.008122618\n2  0.002761209 -0.004980070 -0.004154766  0.002027684 -0.0080874714 0.016187298\n3 -0.007769495  0.008153929 -0.005246509 -0.004892180 -0.0005005501 0.007607577\n4  0.005521811 -0.001518489 -0.002652620  0.001778067 -0.0004441636 0.007192060\n     2018-07-26   2018-07-27   2018-07-30   2018-07-31   2018-08-01\n1  0.0131985204  0.001280992  0.012986403 -0.002268616 -0.015730558\n2 -0.0006751857 -0.020919476 -0.021618702  0.002895817 -0.002711583\n3  0.0079688330 -0.005027542 -0.002331982  0.012574433 -0.002755748\n4  0.0029787150 -0.003446809 -0.003156086  0.008038429 -0.007249964\n    2018-08-02    2018-08-03   2018-08-06   2018-08-07    2018-08-08\n1 -0.002134323 -0.0073460616 0.0052397976  0.003959465 -0.0085479395\n2  0.014229673 -0.0002601396 0.0082356891  0.003361766  0.0003471306\n3  0.004132915  0.0134441240 0.0002851608 -0.003699128 -0.0047101273\n4  0.002993146  0.0051696868 0.0014640732  0.003157818 -0.0006984346\n     2018-08-09   2018-08-10    2018-08-13  2018-08-14   2018-08-15  2018-08-16\n1 -0.0108872145  0.007638768 -0.0144547914 0.004542780 -0.042438317 0.006339482\n2 -0.0008920641 -0.009182561 -0.0022671805 0.006780214 -0.015767129 0.004438533\n3  0.0015381073 -0.005940741  0.0008234634 0.004398117  0.008029299 0.009135530\n4 -0.0007957794 -0.008728654 -0.0054871905 0.010200628 -0.006691091 0.008967913\n    2018-08-17   2018-08-20   2018-08-21   2018-08-22   2018-08-23  2018-08-24\n1  0.003224037 8.421130e-03  0.008349307  0.013378383 -0.005292100 0.008073458\n2 -0.001760454 4.049175e-03  0.008199431  0.006730186  0.001981029 0.015124691\n3  0.007732354 2.692069e-07 -0.009589298 -0.006575943 -0.001255369 0.004500810\n4  0.006126832 5.942634e-03  0.005122876 -0.003894045 -0.003921203 0.003449513\n    2018-08-27    2018-08-28  2018-08-29   2018-08-30    2018-08-31\n1  0.009180901 -5.525657e-03 0.007257279 -0.002890487 -0.0073978491\n2  0.009845194  3.794339e-03 0.007306630 -0.006688627  0.0006588377\n3 -0.002951911  1.332308e-03 0.002524474 -0.002927028  0.0011652746\n4  0.007595955  4.536910e-06 0.003219045 -0.007957643  0.0014553869\n     2018-09-04   2018-09-05   2018-09-06   2018-09-07   2018-09-10\n1 -0.0073232978 -0.004506993 -0.019382860 -0.004880020 0.0006737391\n2 -0.0009675634 -0.018543501 -0.011209654 -0.004386366 0.0087879660\n3 -0.0024738521  0.010518901  0.005232278 -0.009005451 0.0056867858\n4 -0.0012439741  0.002183078 -0.000759536 -0.001954284 0.0029803154\n     2018-09-11   2018-09-12    2018-09-13   2018-09-14    2018-09-17\n1  0.0122762856  0.009381701 -2.306182e-06  0.004538664  0.0006103131\n2  0.0018295441 -0.002137449  6.462456e-03  0.001758224 -0.0163136879\n3 -0.0019538731  0.003579706  4.775531e-03 -0.005895538  0.0034210890\n4  0.0005049789  0.001161493  4.018751e-03  0.003053672 -0.0031778985\n    2018-09-18   2018-09-19   2018-09-20    2018-09-21   2018-09-24\n1  0.011631923  0.002892712 -0.004188770  0.0082752213  0.013828416\n2  0.010072334 -0.002499493  0.012692587 -0.0003286405  0.006489045\n3 -0.005822705 -0.012892316  0.006698837  0.0026245042 -0.014558807\n4  0.005551467  0.004069505  0.006322862  0.0003726642 -0.010072955\n     2018-09-25   2018-09-26    2018-09-27    2018-09-28   2018-10-01\n1  0.0079921453 -0.009821787 -0.0002961086  0.0005533699  0.013778724\n2 -0.0008218263 -0.002833221  0.0055217433  0.0020502699 -0.004922243\n3 -0.0056531970 -0.008520217  0.0010554973  0.0117954826 -0.004743913\n4 -0.0034740979 -0.002645426 -0.0009807794 -0.0007368244  0.001618323\n     2018-10-02   2018-10-03    2018-10-04   2018-10-05   2018-10-08\n1 -0.0008793832  0.013208412 -0.0075673719 -0.002222662 -0.004422415\n2 -0.0096354843  0.003528746 -0.0233264347 -0.017356286 -0.016146227\n3  0.0063449319 -0.010963752  0.0005911404  0.007115132  0.011777449\n4 -0.0021978236  0.001595167 -0.0056339596 -0.005892240  0.002315831\n    2018-10-09  2018-10-10  2018-10-11   2018-10-12    2018-10-15 2018-10-16\n1  0.011660485 -0.04102685 -0.03066850 0.0059181717 -0.0069465232 0.01198762\n2 -0.002245737 -0.04697040 -0.01005558 0.0285292180 -0.0109009681 0.03496553\n3  0.001382168 -0.01068745 -0.02451301 0.0009265891  0.0063396100 0.01495123\n4 -0.008888514 -0.02905836 -0.02220585 0.0079626327  0.0003925018 0.01900308\n     2018-10-17    2018-10-18   2018-10-19   2018-10-22   2018-10-23\n1 -0.0121314041 -0.0110406026 -0.013063143 -0.010377735 -0.029278040\n2 -0.0001182299 -0.0250782664 -0.012541599  0.003844884 -0.003859615\n3 -0.0014392965  0.0003157027  0.014528266 -0.009878428  0.002693487\n4 -0.0022031050 -0.0143254165 -0.004171677 -0.006903643 -0.006763992\n   2018-10-24   2018-10-25   2018-10-26   2018-10-29 2018-10-30   2018-10-31\n1 -0.04585749  0.015249528 -0.009554609 -0.024947273 0.02341653  0.006087733\n2 -0.05208563  0.028991360 -0.023718562 -0.018802822 0.03454404  0.021504480\n3  0.01353611 -0.003340079 -0.020372884  0.014181789 0.01125114 -0.011297427\n4 -0.03132646  0.015441294 -0.012819263  0.001596918 0.01998755  0.008027797\n   2018-11-01   2018-11-02   2018-11-05  2018-11-06  2018-11-07    2018-11-08\n1 0.010308997 -0.009730453  0.018923407 0.002004953 0.022724471 -0.0277091571\n2 0.032081398 -0.003883827 -0.005924196 0.005474840 0.027114895 -0.0034784146\n3 0.003747117 -0.009108626  0.013772235 0.008152953 0.008792495  0.0004581358\n4 0.015634660 -0.001293155  0.006938079 0.007426739 0.014704492  0.0004365969\n    2018-11-09   2018-11-12    2018-11-13   2018-11-14   2018-11-15\n1 -0.004971914 -0.029063167 -0.0251968257  0.003142088  0.020515330\n2 -0.024619687 -0.033687808  0.0041571717 -0.005272713  0.023355178\n3  0.005367340  0.001904854  0.0001916946 -0.004133400 -0.004406745\n4 -0.008675371 -0.015211256  0.0008174817 -0.007268626  0.008872325\n    2018-11-16   2018-11-19   2018-11-20   2018-11-21    2018-11-23 2018-11-26\n1  0.007680349 -0.006087903 -0.040522927  0.018658251 -3.653804e-02 0.02157185\n2 -0.005298491 -0.044615610 -0.007829112  0.012297653 -2.928696e-03 0.02792190\n3  0.010063612  0.001588685 -0.008086658 -0.006933761 -7.387090e-06 0.00222745\n4  0.002216731 -0.012261967 -0.018868549  0.007797251 -1.868033e-03 0.01391096\n    2018-11-27  2018-11-28    2018-11-29   2018-11-30  2018-12-03   2018-12-04\n1 -0.006230058 0.016374453  0.0053696702 -0.006236157 0.026350978 -0.035131989\n2  0.000669214 0.032255508 -0.0073804570  0.008241973 0.021707438 -0.044736643\n3  0.005847793 0.002822177  0.0002154275  0.011292338 0.003797532 -0.008022436\n4 -0.001218930 0.020257793 -0.0037995937  0.005229962 0.008915859 -0.034976107\n    2018-12-06   2018-12-07   2018-12-10   2018-12-11  2018-12-12   2018-12-13\n1 -0.025829610 -0.007277311 -0.022566657 -0.003490909  0.01204804 -0.002388297\n2  0.008023883 -0.037844459  0.009075633  0.001617522  0.01094937 -0.009546741\n3  0.009630455 -0.007000921 -0.000701633  0.004753714 -0.00950557  0.008867633\n4 -0.006218295 -0.023407900 -0.003215619 -0.003893997  0.00769762 -0.008218803\n    2018-12-14  2018-12-17   2018-12-18   2018-12-19   2018-12-20  2018-12-21\n1 -0.028984553 -0.01903142 -0.022103904 -0.013217782 -0.028551975 -0.01564321\n2 -0.020016222 -0.02540093  0.010933420 -0.029032982 -0.017370866 -0.03004544\n3 -0.006215472 -0.03181874 -0.002335696 -0.005963248 -0.009304501 -0.01104888\n4 -0.014658242 -0.01759075 -0.001704006 -0.015390412 -0.016571956 -0.01838267\n   2018-12-24 2018-12-26  2018-12-27    2018-12-28  2018-12-31   2019-01-02\n1 -0.04288499 0.07139516 0.003921202 -0.0097765403 0.006628301  0.019069103\n2 -0.02366252 0.06254006 0.010954290 -0.0021091840 0.008540171  0.003843006\n3 -0.03925786 0.02519597 0.005720476  0.0005493469 0.003374524 -0.017623973\n4 -0.02226213 0.04534322 0.008903106 -0.0019643956 0.009390790  0.002999051\n    2019-01-03 2019-01-04  2019-01-07  2019-01-08   2019-01-09  2019-01-10\n1 -0.007154041 0.04511775 0.020515467 0.011879849  0.021232497 0.007079545\n2 -0.042207626 0.04949310 0.021900070 0.011169862  0.017527869 0.006892676\n3  0.003428785 0.01352601 0.002960760 0.014579573 -0.004437992 0.014320030\n4 -0.020498572 0.03395158 0.009397651 0.009803304  0.006131962 0.004161268\n     2019-01-11    2019-01-14  2019-01-15    2019-01-16  2019-01-17  2019-01-18\n1 -0.0044939986 -5.779135e-05 0.004220701  0.0005469789 0.013001543 0.020885746\n2 -0.0000643815 -1.263161e-02 0.016148265 -0.0003493891 0.009778713 0.018933426\n3  0.0006439650 -7.487770e-03 0.011233657  0.0018849468 0.005550432 0.005066536\n4  0.0019697839 -2.211265e-03 0.004755527  0.0034638122 0.009621661 0.016372572\n    2019-01-22    2019-01-23   2019-01-24    2019-01-25   2019-01-28\n1 -0.026342440 -0.0139855530  0.002068247  0.0200460247 -0.015255646\n2 -0.022274543 -0.0051502604  0.025276525  0.0213786649 -0.011670435\n3 -0.003042516  0.0054318391 -0.002902421 -0.0007662691  0.003788257\n4 -0.013525856  0.0008376363  0.002910626  0.0104049820 -0.003409732\n    2019-01-29  2019-01-30    2019-01-31   2019-02-01  2019-02-04   2019-02-05\n1  0.006852493 0.020060173 -0.0004307433  0.008515918 0.006715036 -0.001705462\n2 -0.013352553 0.025220812  0.0100370290  0.008579466 0.006612912  0.007444096\n3  0.004292367 0.007180800  0.0144310699 -0.004675601 0.004866655  0.001337625\n4  0.003457064 0.007812059  0.0051356841  0.002655385 0.004837957  0.004876282\n     2019-02-06   2019-02-07    2019-02-08  2019-02-11    2019-02-12\n1 -0.0072253794 -0.032870943 -0.0073106553 0.009675432  0.0109777684\n2  0.0011515879 -0.016007614  0.0108905276 0.002164051  0.0187379927\n3 -0.0032362265  0.005879985  0.0041796637 0.001155150 -0.0007469276\n4 -0.0007242068 -0.005505920  0.0003808557 0.002443940  0.0144575364\n   2019-02-13    2019-02-14  2019-02-15\n1 0.018636127  0.0069304497 0.016988955\n2 0.002882583  0.0008287979 0.003344893\n3 0.001301848 -0.0018576514 0.006505341\n4 0.003986743 -0.0036341950 0.013290681\n\nClustering vector:\n  [1] 4 2 4 2 4 4 2 4 4 2 2 4 4 4 2 3 3 3 4 4 4 3 4 4 2 4 2 4 4 4 2 2 2 4 4 4 4\n [38] 3 2 2 2 4 4 4 1 1 4 4 4 3 4 3 2 3 2 4 3 4 4 4 4 4 4 4 4 4 4 1 4 4 4 4 4 4\n [75] 4 4 4 3 4 3 4 4 4 4 4 4 3 2 4 4 4 4 4 3 4 4 4 4 3 3 4 4 4 4 4 3 4 3 4 4 4\n[112] 1 4 4 3 4 4 2 2 4 4 4 4 4 4 1 1 3 4 4 4 4 4 4 4 4 4 4 4 3 4 4 3 4 3 3 4 1\n[149] 4 4 2 4 4 3 4 3 4 4 4 1 3 3 3 3 4 4 3 3 2 3 4 4 3 4 1 4 2 4 1 4 3 2 4 4 4\n[186] 4 4 1 4 4 4 4 4 4 3 1 2 4 4 4 4 3 4 4 2 2 4 2 4 4 4 4 4 1 4 4 4 4 3 4 1 1\n[223] 4 4 4 4 4 4 1 2 4 4 3 4 4 4 3 4 4 4 2 4 2 2 4 2 2 4 4 2 4 4 3 2 4 4 4 4 4\n[260] 4 4 4 4 4 4 4 3 4 2 3 3 2 3 1 4 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 3 4 2 4 3 4\n[297] 4 2 3 3 4 4 2 3 2 4 4 3 4 4 2 4 3 4 4 4 4 3 4 1 4 1 4 2 2 4 4 4 2 2 4 1 4\n[334] 4 3 4 2 3 4 2 4 4 1 3 4 2 4 4 2 4 4 4 3 1 4 4 4 1 4 4 4 3 3 4 4 3 4 4 4 4\n[371] 4 3 3 4 4 3 4 3 4 4 3 1 4 4 1 2 4 2 4 4 3 4 4 2 4 4 4 4 4 4 4 4 4 4 3 4 4\n[408] 4 4 4 3 1 3 4 2 3 3 4 3 4 4 2 4 4 2 4 4 2 3 4 3 4 4 4 4 4 4 4 4 4 2 4 4 4\n[445] 3 2 2 2 2 4 2 2 4 3 4 4 4 4 4 4 2 4 4 2 4 4 4 1 4 3 4 2 2 3 3 4 4 4 2 3 3\n[482] 4 4 4 3 1 4 4 4 3 2 1 3 2 1 4 4 4 4 4 4 4\n\nWithin cluster sum of squares by cluster:\n[1]  1.588895  7.009809  2.554867 18.051976\n (between_SS / total_SS =  13.1 %)\n\nAvailable components:\n\n[1] \"cluster\"      \"centers\"      \"totss\"        \"withinss\"     \"tot.withinss\"\n[6] \"betweenss\"    \"size\"         \"iter\"         \"ifault\"      \n\n\nUse glance() to get the tot.withinss.\n\n# Apply glance() to get the tot.withinss\ntot_withinss &lt;- glance(kmeans_obj)$tot.withinss\ntot_withinss\n\n[1] 29.20555"
  },
  {
    "objectID": "index.html#step-4---find-the-optimal-value-of-k",
    "href": "index.html#step-4---find-the-optimal-value-of-k",
    "title": "Session 6 - Challenge - Company Segmentation",
    "section": "Step 4 - Find the optimal value of K",
    "text": "Step 4 - Find the optimal value of K\nNow that we are familiar with the process for calculating kmeans(), let’s use purrr to iterate over many values of “k” using the centers argument.\nWe’ll use this custom function called kmeans_mapper():\n\nkmeans_mapper &lt;- function(center = 3) {\n    stock_date_matrix_tbl %&gt;%\n        select(-symbol) %&gt;%\n        kmeans(centers = center, nstart = 20)\n}\n\nApply the kmeans_mapper() and glance() functions iteratively using purrr.\n\nCreate a tibble containing column called centers that go from 1 to 30\nAdd a column named k_means with the kmeans_mapper() output. Use mutate() to add the column and map() to map centers to the kmeans_mapper() function.\nAdd a column named glance with the glance() output. Use mutate() and map() again to iterate over the column of k_means.\nSave the output as k_means_mapped_tbl\n\n\n# Use purrr to map\nk_means_mapped_tbl &lt;- tibble(centers = 1:30)\nk_means_mapped_tbl &lt;- k_means_mapped_tbl %&gt;% mutate(k_means = map(centers, kmeans_mapper))\nk_means_mapped_tbl &lt;- k_means_mapped_tbl %&gt;% mutate(glance = map(k_means, glance))\n# Output: k_means_mapped_tbl \nk_means_mapped_tbl\n\n# A tibble: 30 × 3\n   centers k_means  glance          \n     &lt;int&gt; &lt;list&gt;   &lt;list&gt;          \n 1       1 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n 2       2 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n 3       3 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n 4       4 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n 5       5 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n 6       6 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n 7       7 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n 8       8 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n 9       9 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n10      10 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n# ℹ 20 more rows\n\n\nNext, let’s visualize the “tot.withinss” from the glance output as a Scree Plot.\n\nBegin with the k_means_mapped_tbl\nUnnest the glance column\nPlot the centers column (x-axis) versus the tot.withinss column (y-axis) using geom_point() and geom_line()\nAdd a title “Scree Plot” and feel free to style it with your favorite theme\n\n\n# Visualize Scree Plot\nglance_column &lt;- unnest(k_means_mapped_tbl, cols = glance)\nggplot(glance_column, aes(x = centers, y = tot.withinss)) +\n  geom_point() +\n  geom_line() +\n  xlab(\"Centers\") +\n  ylab(\"Total Within-Cluster Sum of Squares\") +\n  ggtitle(\"Scree Plot\")\n\n\n\n\n\n\n\n\nWe can see that the Scree Plot becomes linear (constant rate of change) between 5 and 10 centers for K."
  },
  {
    "objectID": "index.html#step-5---apply-umap",
    "href": "index.html#step-5---apply-umap",
    "title": "Session 6 - Challenge - Company Segmentation",
    "section": "Step 5 - Apply UMAP",
    "text": "Step 5 - Apply UMAP\nNext, let’s plot the UMAP 2D visualization to help us investigate cluster assignments.\nWe’re going to import the correct results first (just in case you were not able to complete the last step).\n\nk_means_mapped_tbl &lt;- read_rds(\"k_means_mapped_tbl.rds\")\n\nFirst, let’s apply the umap() function to the stock_date_matrix_tbl, which contains our user-item matrix in tibble format.\n\nStart with stock_date_matrix_tbl\nDe-select the symbol column\nUse the umap() function storing the output as umap_results\n\n\n# Apply UMAP\ntemp &lt;- stock_date_matrix_tbl %&gt;% select(-symbol)\n\n# Store results as: umap_results \numap_results &lt;- temp %&gt;% umap()\n\nNext, we want to combine the layout from the umap_results with the symbol column from the stock_date_matrix_tbl.\n\nStart with umap_results$layout\nConvert from a matrix data type to a tibble with as_tibble()\nBind the columns of the umap tibble with the symbol column from the stock_date_matrix_tbl.\nSave the results as umap_results_tbl.\n\n\n# Convert umap results to tibble with symbols\nlayout &lt;- umap_results$layout\nlayout_tibble &lt;- layout %&gt;% as_tibble()\n\nWarning: The `x` argument of `as_tibble.matrix()` must have unique column names if\n`.name_repair` is omitted as of tibble 2.0.0.\nℹ Using compatibility `.name_repair`.\n\numap_results_tbl &lt;- layout_tibble %&gt;% bind_cols(stock_date_matrix_tbl$symbol)\n\nNew names:\n• `` -&gt; `...3`\n\n# Output: umap_results_tbl\numap_results_tbl\n\n# A tibble: 502 × 3\n       V1      V2 ...3 \n    &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;\n 1 -1.51   1.54   A    \n 2 -0.918  2.30   AAL  \n 3  0.458 -0.0903 AAP  \n 4 -3.07   2.25   AAPL \n 5 -1.16  -0.492  ABBV \n 6 -0.354 -0.732  ABC  \n 7 -3.29   2.23   ABMD \n 8 -1.49   0.953  ABT  \n 9 -2.01   1.10   ACN  \n10 -3.39   2.30   ADBE \n# ℹ 492 more rows\n\n\nFinally, let’s make a quick visualization of the umap_results_tbl.\n\nPipe the umap_results_tbl into ggplot() mapping the columns to x-axis and y-axis\nAdd a geom_point() geometry with an alpha = 0.5\nApply theme_tq() and add a title “UMAP Projection”\n\n\n# Visualize UMAP results\numap_results_tbl %&gt;% ggplot(aes(x = V1, y = V2)) +\n                              geom_point(alpha = 0.5) +\n                              theme_tq() +\n                              ggtitle(\"UMAP Projection\")\n\n\n\n\n\n\n\n\nWe can now see that we have some clusters. However, we still need to combine the K-Means clusters and the UMAP 2D representation."
  },
  {
    "objectID": "index.html#step-6---combine-k-means-and-umap",
    "href": "index.html#step-6---combine-k-means-and-umap",
    "title": "Session 6 - Challenge - Company Segmentation",
    "section": "Step 6 - Combine K-Means and UMAP",
    "text": "Step 6 - Combine K-Means and UMAP\nNext, we combine the K-Means clusters and the UMAP 2D representation\nWe’re going to import the correct results first (just in case you were not able to complete the last step).\n\nk_means_mapped_tbl &lt;- read_rds(\"k_means_mapped_tbl.rds\")\numap_results_tbl   &lt;- read_rds(\"umap_results_tbl.rds\")\n\nFirst, pull out the K-Means for 10 Centers. Use this since beyond this value the Scree Plot flattens. Have a look at the business case to recall how that works.\n\n# Get the k_means_obj from the 10th center\nten_centers_kmeans &lt;- k_means_mapped_tbl$k_means[k_means_mapped_tbl$centers == 10]\n\n# Store as k_means_obj\nk_means_obj &lt;- ten_centers_kmeans[[1]]\n\nNext, we’ll combine the clusters from the k_means_obj with the umap_results_tbl.\n\nBegin with the k_means_obj\nAugment the k_means_obj with the stock_date_matrix_tbl to get the clusters added to the end of the tibble\nSelect just the symbol and .cluster columns\nLeft join the result with the umap_results_tbl by the symbol column\nLeft join the result with the result of sp_500_index_tbl %&gt;% select(symbol, company, sector) by the symbol column.\nStore the output as umap_kmeans_results_tbl\n\n\n# Use your dplyr & broom skills to combine the k_means_obj with the umap_results_tbl\ncluster_tibble &lt;- as_tibble(k_means_obj$cluster)\naugmented_tibble &lt;- bind_cols(stock_date_matrix_tbl, cluster_tibble)\naugmented_tibble &lt;- select(augmented_tibble, symbol, value)\njoined_tibble &lt;- left_join(augmented_tibble, umap_results_tbl, by = \"symbol\")\ntemp_sp_500 &lt;- sp_500_index_tbl %&gt;% select(symbol, company, sector)\numap_kmeans_results_tbl &lt;- left_join(temp_sp_500, joined_tibble, by = \"symbol\")\n\n# Output: umap_kmeans_results_tbl \numap_kmeans_results_tbl\n\n    symbol                                             company\n1     MSFT                               Microsoft Corporation\n2     AAPL                                          Apple Inc.\n3     AMZN                                     Amazon.com Inc.\n4    BRK.B                     Berkshire Hathaway Inc. Class B\n5       FB                               Facebook Inc. Class A\n6      JNJ                                   Johnson & Johnson\n7      JPM                                JPMorgan Chase & Co.\n8     GOOG                               Alphabet Inc. Class C\n9    GOOGL                               Alphabet Inc. Class A\n10     XOM                             Exxon Mobil Corporation\n11     BAC                                Bank of America Corp\n12     UNH                     UnitedHealth Group Incorporated\n13       V                                   Visa Inc. Class A\n14      PG                            Procter & Gamble Company\n15     PFE                                         Pfizer Inc.\n16    INTC                                   Intel Corporation\n17     CVX                                 Chevron Corporation\n18      VZ                         Verizon Communications Inc.\n19    CSCO                                  Cisco Systems Inc.\n20       T                                           AT&T Inc.\n21      BA                                      Boeing Company\n22      HD                                     Home Depot Inc.\n23     WFC                               Wells Fargo & Company\n24     MRK                                    Merck & Co. Inc.\n25      MA                     Mastercard Incorporated Class A\n26      KO                                   Coca-Cola Company\n27   CMCSA                         Comcast Corporation Class A\n28     DIS                                 Walt Disney Company\n29     PEP                                        PepsiCo Inc.\n30       C                                      Citigroup Inc.\n31    NFLX                                        Netflix Inc.\n32     WMT                                        Walmart Inc.\n33     MCD                              McDonald's Corporation\n34     ABT                                 Abbott Laboratories\n35    ORCL                                  Oracle Corporation\n36      PM                    Philip Morris International Inc.\n37    ADBE                                          Adobe Inc.\n38     IBM         International Business Machines Corporation\n39     UNP                           Union Pacific Corporation\n40    DWDP                                      DowDuPont Inc.\n41     MDT                                       Medtronic plc\n42    ABBV                                         AbbVie Inc.\n43     MMM                                          3M Company\n44     CRM                                 salesforce.com inc.\n45    AMGN                                          Amgen Inc.\n46    AVGO                                       Broadcom Inc.\n47     LLY                               Eli Lilly and Company\n48     HON                        Honeywell International Inc.\n49    PYPL                                 PayPal Holdings Inc\n50     NKE                                   NIKE Inc. Class B\n51     UTX                     United Technologies Corporation\n52     TXN                      Texas Instruments Incorporated\n53     TMO                       Thermo Fisher Scientific Inc.\n54     ACN                               Accenture Plc Class A\n55    NVDA                                  NVIDIA Corporation\n56    COST                        Costco Wholesale Corporation\n57     LIN                                           Linde plc\n58      MO                                    Altria Group Inc\n59     CVS                              CVS Health Corporation\n60    BKNG                               Booking Holdings Inc.\n61     NEE                                 NextEra Energy Inc.\n62      GE                            General Electric Company\n63    SBUX                               Starbucks Corporation\n64    GILD                                Gilead Sciences Inc.\n65     BMY                        Bristol-Myers Squibb Company\n66     LOW                               Lowe's Companies Inc.\n67     COP                                      ConocoPhillips\n68    ANTM                                         Anthem Inc.\n69     CAT                                    Caterpillar Inc.\n70     AMT                          American Tower Corporation\n71     USB                                        U.S. Bancorp\n72     UPS                  United Parcel Service Inc. Class B\n73     LMT                         Lockheed Martin Corporation\n74     AXP                            American Express Company\n75      CI                                   Cigna Corporation\n76    MDLZ                 Mondelez International Inc. Class A\n77      GS                            Goldman Sachs Group Inc.\n78     DHR                                 Danaher Corporation\n79    BIIB                                         Biogen Inc.\n80     BDX                        Becton Dickinson and Company\n81     ADP                      Automatic Data Processing Inc.\n82    CELG                                 Celgene Corporation\n83    QCOM                               QUALCOMM Incorporated\n84     CME                              CME Group Inc. Class A\n85     TJX                                   TJX Companies Inc\n86    ISRG                             Intuitive Surgical Inc.\n87     DUK                             Duke Energy Corporation\n88    CHTR                 Charter Communications Inc. Class A\n89     SLB                                     Schlumberger NV\n90      CB                                       Chubb Limited\n91    INTU                                         Intuit Inc.\n92     WBA                        Walgreens Boots Alliance Inc\n93     CSX                                     CSX Corporation\n94     EOG                                  EOG Resources Inc.\n95     SYK                                 Stryker Corporation\n96     PNC                   PNC Financial Services Group Inc.\n97      CL                           Colgate-Palmolive Company\n98     SPG                           Simon Property Group Inc.\n99    SCHW                          Charles Schwab Corporation\n100    BSX                       Boston Scientific Corporation\n101      D                                 Dominion Energy Inc\n102     MS                                      Morgan Stanley\n103   FOXA               Twenty-First Century Fox Inc. Class A\n104    BLK                                      BlackRock Inc.\n105    RTN                                    Raytheon Company\n106    OXY                    Occidental Petroleum Corporation\n107     GM                              General Motors Company\n108     DE                                     Deere & Company\n109     SO                                    Southern Company\n110    NSC                        Norfolk Southern Corporation\n111    NOC                        Northrop Grumman Corporation\n112   SPGI                                     S&P Global Inc.\n113    CCI                     Crown Castle International Corp\n114     GD                        General Dynamics Corporation\n115     BK                 Bank of New York Mellon Corporation\n116   VRTX                 Vertex Pharmaceuticals Incorporated\n117     MU                              Micron Technology Inc.\n118    EXC                                  Exelon Corporation\n119    MMC                     Marsh & McLennan Companies Inc.\n120    ZTS                                 Zoetis Inc. Class A\n121    MPC                      Marathon Petroleum Corporation\n122    PLD                                       Prologis Inc.\n123    MET                                        MetLife Inc.\n124    ITW                            Illinois Tool Works Inc.\n125    AGN                                        Allergan plc\n126   ILMN                                       Illumina Inc.\n127    FDX                                   FedEx Corporation\n128    ICE                      Intercontinental Exchange Inc.\n129    EMR                                Emerson Electric Co.\n130    HUM                                         Humana Inc.\n131   CTSH  Cognizant Technology Solutions Corporation Class A\n132    AON                                             Aon plc\n133    ECL                                         Ecolab Inc.\n134    PGR                             Progressive Corporation\n135    KMB                          Kimberly-Clark Corporation\n136    PSX                                         Phillips 66\n137    PRU                           Prudential Financial Inc.\n138    ADI                                 Analog Devices Inc.\n139    BBT                                    BB&T Corporation\n140    AEP                American Electric Power Company Inc.\n141    COF                   Capital One Financial Corporation\n142     WM                               Waste Management Inc.\n143    HCA                                  HCA Healthcare Inc\n144   AMAT                              Applied Materials Inc.\n145    TGT                                  Target Corporation\n146    APD                     Air Products and Chemicals Inc.\n147    AFL                                  Aflac Incorporated\n148    AIG                   American International Group Inc.\n149     EW                    Edwards Lifesciences Corporation\n150    HPQ                                             HP Inc.\n151    BAX                           Baxter International Inc.\n152    SHW                            Sherwin-Williams Company\n153    VLO                           Valero Energy Corporation\n154    FIS         Fidelity National Information Services Inc.\n155    KMI                           Kinder Morgan Inc Class P\n156   ROST                                    Ross Stores Inc.\n157   ADSK                                       Autodesk Inc.\n158    MAR                 Marriott International Inc. Class A\n159     EL                 Estee Lauder Companies Inc. Class A\n160   FISV                                         Fiserv Inc.\n161    TRV                            Travelers Companies Inc.\n162    ETN                                     Eaton Corp. Plc\n163   EQIX                                        Equinix Inc.\n164   ATVI                            Activision Blizzard Inc.\n165      F                                  Ford Motor Company\n166   EBAY                                           eBay Inc.\n167    WMB                             Williams Companies Inc.\n168   REGN                      Regeneron Pharmaceuticals Inc.\n169     EA                                Electronic Arts Inc.\n170    ALL                                Allstate Corporation\n171    JCI                  Johnson Controls International plc\n172    SYY                                   Sysco Corporation\n173    ROP                             Roper Technologies Inc.\n174    DAL                                Delta Air Lines Inc.\n175    RHT                                        Red Hat Inc.\n176     DG                          Dollar General Corporation\n177    SRE                                       Sempra Energy\n178   ORLY                            O'Reilly Automotive Inc.\n179    PSA                                      Public Storage\n180   XLNX                                         Xilinx Inc.\n181    STI                                 SunTrust Banks Inc.\n182    YUM                                    Yum! Brands Inc.\n183    LUV                              Southwest Airlines Co.\n184    KHC                                 Kraft Heinz Company\n185   WELL                                      Welltower Inc.\n186    STZ                   Constellation Brands Inc. Class A\n187   ALXN                        Alexion Pharmaceuticals Inc.\n188    TEL                                TE Connectivity Ltd.\n189   LRCX                            Lam Research Corporation\n190    PEG                 Public Service Enterprise Group Inc\n191    VFC                                    V.F. Corporation\n192    MCO                                 Moody's Corporation\n193    HAL                                 Halliburton Company\n194    LYB                        LyondellBasell Industries NV\n195    GLW                                         Corning Inc\n196    OKE                                          ONEOK Inc.\n197    APH                        Amphenol Corporation Class A\n198    XEL                                    Xcel Energy Inc.\n199    AVB                          AvalonBay Communities Inc.\n200    MCK                                McKesson Corporation\n201    EQR                                  Equity Residential\n202    GIS                                  General Mills Inc.\n203    STT                            State Street Corporation\n204    CNC                                 Centene Corporation\n205    PPG                                 PPG Industries Inc.\n206     IR                                  Ingersoll-Rand Plc\n207    ZBH                         Zimmer Biomet Holdings Inc.\n208      A                           Agilent Technologies Inc.\n209    MTB                                M&T Bank Corporation\n210    PXD                   Pioneer Natural Resources Company\n211    CXO                               Concho Resources Inc.\n212    DFS                         Discover Financial Services\n213     ED                            Consolidated Edison Inc.\n214    HLT                       Hilton Worldwide Holdings Inc\n215    FOX               Twenty-First Century Fox Inc. Class B\n216   PAYX                                        Paychex Inc.\n217    FTV                                       Fortive Corp.\n218   PCAR                                          PACCAR Inc\n219    DLR                           Digital Realty Trust Inc.\n220   TROW                                 T. Rowe Price Group\n221    ADM                      Archer-Daniels-Midland Company\n222     KR                                          Kroger Co.\n223    CMI                                        Cummins Inc.\n224   DLTR                                    Dollar Tree Inc.\n225    AZO                                       AutoZone Inc.\n226    WEC                                WEC Energy Group Inc\n227   MNST                        Monster Beverage Corporation\n228    APC                      Anadarko Petroleum Corporation\n229  CCL.U                                Carnival Corporation\n230    VTR                                         Ventas Inc.\n231    HPE                      Hewlett Packard Enterprise Co.\n232     PH                         Parker-Hannifin Corporation\n233    IQV                                  IQVIA Holdings Inc\n234    MSI                             Motorola Solutions Inc.\n235   TWTR                                        Twitter Inc.\n236   WLTW         Willis Towers Watson Public Limited Company\n237     ES                                   Eversource Energy\n238    PPL                                     PPL Corporation\n239    ROK                            Rockwell Automation Inc.\n240    DTE                                  DTE Energy Company\n241    SYF                                 Synchrony Financial\n242   APTV                                           Aptiv PLC\n243   MCHP                   Microchip Technology Incorporated\n244    TDG                        TransDigm Group Incorporated\n245   SBAC                    SBA Communications Corp. Class A\n246    SWK                         Stanley Black & Decker Inc.\n247    AMD                         Advanced Micro Devices Inc.\n248   NTRS                          Northern Trust Corporation\n249      O                           Realty Income Corporation\n250   VRSK                                Verisk Analytics Inc\n251    BXP                              Boston Properties Inc.\n252    UAL                    United Continental Holdings Inc.\n253    RCL                        Royal Caribbean Cruises Ltd.\n254    CLX                                      Clorox Company\n255    FLT                          FleetCor Technologies Inc.\n256    EIX                                Edison International\n257    GPN                                Global Payments Inc.\n258    HRS                                  Harris Corporation\n259     IP                         International Paper Company\n260     FE                                   FirstEnergy Corp.\n261     WY                                Weyerhaeuser Company\n262   INFO                                     IHS Markit Ltd.\n263   CERN                                  Cerner Corporation\n264   VRSN                                       VeriSign Inc.\n265    NUE                                   Nucor Corporation\n266    BLL                                    Ball Corporation\n267   ALGN                               Align Technology Inc.\n268    TSN                            Tyson Foods Inc. Class A\n269    AMP                           Ameriprise Financial Inc.\n270    KEY                                             KeyCorp\n271    DXC                                  DXC Technology Co.\n272    ESS                           Essex Property Trust Inc.\n273   IDXX                             IDEXX Laboratories Inc.\n274    AME                                         AMETEK Inc.\n275   FITB                                 Fifth Third Bancorp\n276    WAT                                  Waters Corporation\n277   FAST                                    Fastenal Company\n278    FCX                               Freeport-McMoRan Inc.\n279    AWK                   American Water Works Company Inc.\n280    NEM                          Newmont Mining Corporation\n281   CTAS                                  Cintas Corporation\n282    CFG                       Citizens Financial Group Inc.\n283   ULTA                                     Ulta Beauty Inc\n284    HIG              Hartford Financial Services Group Inc.\n285    FRC                                 First Republic Bank\n286    CBS                             CBS Corporation Class B\n287    RSG                              Republic Services Inc.\n288   KLAC                              KLA-Tencor Corporation\n289    AEE                                  Ameren Corporation\n290    MTD                   Mettler-Toledo International Inc.\n291    OMC                                   Omnicom Group Inc\n292    CAH                                Cardinal Health Inc.\n293     RF                       Regions Financial Corporation\n294   NTAP                                         NetApp Inc.\n295    LLL                                 L3 Technologies Inc\n296    MYL                                          Mylan N.V.\n297   ABMD                                        ABIOMED Inc.\n298   FANG                             Diamondback Energy Inc.\n299    ETR                                 Entergy Corporation\n300   EVRG                                         Evergy Inc.\n301   CBRE                             CBRE Group Inc. Class A\n302   MXIM                      Maxim Integrated Products Inc.\n303    CHD                            Church & Dwight Co. Inc.\n304    GPC                               Genuine Parts Company\n305    MKC                    McCormick & Company Incorporated\n306    TSS                          Total System Services Inc.\n307   MSCI                                   MSCI Inc. Class A\n308     LH          Laboratory Corporation of America Holdings\n309    HSY                                     Hershey Company\n310    CNP                             CenterPoint Energy Inc.\n311   EXPE                                  Expedia Group Inc.\n312   KEYS                           Keysight Technologies Inc\n313   HBAN                  Huntington Bancshares Incorporated\n314   SNPS                                       Synopsys Inc.\n315    CMS                              CMS Energy Corporation\n316    CMG                         Chipotle Mexican Grill Inc.\n317   SWKS                             Skyworks Solutions Inc.\n318    VMC                            Vulcan Materials Company\n319   SYMC                                Symantec Corporation\n320    HCP                                            HCP Inc.\n321   CDNS                         Cadence Design Systems Inc.\n322   INCY                                  Incyte Corporation\n323   ANSS                                          ANSYS Inc.\n324    MRO                            Marathon Oil Corporation\n325    HES                                    Hess Corporation\n326    AJG                           Arthur J. Gallagher & Co.\n327    MGM                           MGM Resorts International\n328    GWW                                  W.W. Grainger Inc.\n329      K                                     Kellogg Company\n330    AAL                        American Airlines Group Inc.\n331    LEN                          Lennar Corporation Class A\n332    ARE                Alexandria Real Estate Equities Inc.\n333    RMD                                         ResMed Inc.\n334    BBY                                   Best Buy Co. Inc.\n335    CMA                               Comerica Incorporated\n336    WCG                          WellCare Health Plans Inc.\n337    DRI                             Darden Restaurants Inc.\n338    ABC                       AmerisourceBergen Corporation\n339    WDC                         Western Digital Corporation\n340    HST                          Host Hotels & Resorts Inc.\n341    DHI                                    D.R. Horton Inc.\n342   CTXS                                 Citrix Systems Inc.\n343    TXT                                        Textron Inc.\n344   ANET                                Arista Networks Inc.\n345    COO                               Cooper Companies Inc.\n346    DOV                                   Dover Corporation\n347    PFG                      Principal Financial Group Inc.\n348    TFX                               Teleflex Incorporated\n349    DVN                            Devon Energy Corporation\n350    IFF             International Flavors & Fragrances Inc.\n351    LNC                        Lincoln National Corporation\n352    XYL                                          Xylem Inc.\n353   BHGE                   Baker Hughes a GE Company Class A\n354    EFX                                        Equifax Inc.\n355     CE                                Celanese Corporation\n356    CTL                                    CenturyLink Inc.\n357      L                                   Loews Corporation\n358   SIVB                                 SVB Financial Group\n359     IT                                        Gartner Inc.\n360   CINF                    Cincinnati Financial Corporation\n361   EXPD         Expeditors International of Washington Inc.\n362   CHRW                        C.H. Robinson Worldwide Inc.\n363    APA                                  Apache Corporation\n364    EXR                            Extra Space Storage Inc.\n365   HOLX                                        Hologic Inc.\n366    AAP                             Advance Auto Parts Inc.\n367    NRG                                     NRG Energy Inc.\n368    UDR                                            UDR Inc.\n369   ETFC                       E*TRADE Financial Corporation\n370    VAR                         Varian Medical Systems Inc.\n371   WYNN                                Wynn Resorts Limited\n372    CAG                                 Conagra Brands Inc.\n373   FTNT                                       Fortinet Inc.\n374    STX                              Seagate Technology PLC\n375    DGX                      Quest Diagnostics Incorporated\n376    MLM                      Martin Marietta Materials Inc.\n377   TSCO                              Tractor Supply Company\n378    VNO                                Vornado Realty Trust\n379    MAA              Mid-America Apartment Communities Inc.\n380    HRL                            Hormel Foods Corporation\n381     BR                 Broadridge Financial Solutions Inc.\n382    SJM                                J.M. Smucker Company\n383    EMN                            Eastman Chemical Company\n384    UHS              Universal Health Services Inc. Class B\n385   NCLH                 Norwegian Cruise Line Holdings Ltd.\n386    MAS                                   Masco Corporation\n387   AKAM                            Akamai Technologies Inc.\n388    ATO                            Atmos Energy Corporation\n389    TAP                Molson Coors Brewing Company Class B\n390    MOS                                      Mosaic Company\n391    FMC                                     FMC Corporation\n392    NOV                         National Oilwell Varco Inc.\n393    REG                         Regency Centers Corporation\n394    URI                                 United Rentals Inc.\n395    COG                         Cabot Oil & Gas Corporation\n396    AES                                     AES Corporation\n397    KSS                                  Kohl's Corporation\n398    KMX                                         CarMax Inc.\n399    KSU                                Kansas City Southern\n400   CPRT                                         Copart Inc.\n401    NBL                                   Noble Energy Inc.\n402    RJF                        Raymond James Financial Inc.\n403   TTWO                  Take-Two Interactive Software Inc.\n404    DRE                             Duke Realty Corporation\n405    LNT                                 Alliant Energy Corp\n406   CBOE                             Cboe Global Markets Inc\n407   FFIV                                    F5 Networks Inc.\n408   JKHY                        Jack Henry & Associates Inc.\n409     LW                           Lamb Weston Holdings Inc.\n410    PKI                                    PerkinElmer Inc.\n411    TPR                                       Tapestry Inc.\n412   VIAB                                 Viacom Inc. Class B\n413    FTI                                      TechnipFMC Plc\n414    HAS                                         Hasbro Inc.\n415   NDAQ                                         Nasdaq Inc.\n416    IRM                                  Iron Mountain Inc.\n417    PNW                   Pinnacle West Capital Corporation\n418    WRK                                    WestRock Company\n419  DISCK                              Discovery Inc. Class C\n420    BEN                             Franklin Resources Inc.\n421    TIF                                       Tiffany & Co.\n422    FRT                     Federal Realty Investment Trust\n423     NI                                        NiSource Inc\n424   JBHT                   J.B. Hunt Transport Services Inc.\n425   ZION                           Zions Bancorporation N.A.\n426     CF                         CF Industries Holdings Inc.\n427   XRAY                                DENTSPLY SIRONA Inc.\n428   HSIC                                   Henry Schein Inc.\n429    HII                  Huntington Ingalls Industries Inc.\n430   JNPR                               Juniper Networks Inc.\n431    HFC                           HollyFrontier Corporation\n432   NLSN                                Nielsen Holdings Plc\n433    PKG                    Packaging Corporation of America\n434    AVY                          Avery Dennison Corporation\n435    IPG                 Interpublic Group of Companies Inc.\n436    SNA                                Snap-on Incorporated\n437    WHR                               Whirlpool Corporation\n438     RE                               Everest Re Group Ltd.\n439    ALB                               Albemarle Corporation\n440    MHK                              Mohawk Industries Inc.\n441    BWA                                     BorgWarner Inc.\n442   ALLE                                        Allegion PLC\n443   GRMN                                         Garmin Ltd.\n444    PVH                                           PVH Corp.\n445    TMK                               Torchmark Corporation\n446    LKQ                                     LKQ Corporation\n447    ADS                   Alliance Data Systems Corporation\n448   BF.B                    Brown-Forman Corporation Class B\n449    RHI                      Robert Half International Inc.\n450    JEC                       Jacobs Engineering Group Inc.\n451    ALK                               Alaska Air Group Inc.\n452   QRVO                                          Qorvo Inc.\n453     WU                               Western Union Company\n454    UNM                                          Unum Group\n455    SLG                               SL Green Realty Corp.\n456    AIV Apartment Investment and Management Company Class A\n457    IVZ                                        Invesco Ltd.\n458      M                                          Macy's Inc\n459   ARNC                                        Arconic Inc.\n460    KIM                            Kimco Realty Corporation\n461    DVA                                         DaVita Inc.\n462    NWL                                   Newell Brands Inc\n463    AOS                             A. O. Smith Corporation\n464    XEC                                  Cimarex Energy Co.\n465   NKTR                                 Nektar Therapeutics\n466   FLIR                                   FLIR Systems Inc.\n467    PHM                                     PulteGroup Inc.\n468     RL                    Ralph Lauren Corporation Class A\n469   DISH                    DISH Network Corporation Class A\n470    PNR                                         Pentair plc\n471     FL                                    Foot Locker Inc.\n472    HBI                                    Hanesbrands Inc.\n473    XRX                                   Xerox Corporation\n474   FBHS                 Fortune Brands Home & Security Inc.\n475    SEE                              Sealed Air Corporation\n476   CPRI                              Capri Holdings Limited\n477    CPB                               Campbell Soup Company\n478   PBCT                      People's United Financial Inc.\n479     LB                                       L Brands Inc.\n480    FLS                               Flowserve Corporation\n481     HP                              Helmerich & Payne Inc.\n482    HOG                                Harley-Davidson Inc.\n483   PRGO                                     Perrigo Co. Plc\n484    JEF                      Jefferies Financial Group Inc.\n485    ROL                                        Rollins Inc.\n486    LEG                        Leggett & Platt Incorporated\n487    AMG                      Affiliated Managers Group Inc.\n488   TRIP                                    TripAdvisor Inc.\n489   IPGP                           IPG Photonics Corporation\n490    GPS                                            Gap Inc.\n491    PWR                                Quanta Services Inc.\n492    AIZ                                       Assurant Inc.\n493    JWN                                      Nordstrom Inc.\n494    FLR                                   Fluor Corporation\n495    BHF                          Brighthouse Financial Inc.\n496   COTY                                   Coty Inc. Class A\n497    HRB                                      H&R Block Inc.\n498   NWSA                            News Corporation Class A\n499    MAT                                         Mattel Inc.\n500    MAC                                    Macerich Company\n501  DISCA                              Discovery Inc. Class A\n502     GT                      Goodyear Tire & Rubber Company\n503    UAA                           Under Armour Inc. Class A\n504     UA                           Under Armour Inc. Class C\n505    NWS                            News Corporation Class B\n506 ECA-CA                                  Encana Corporation\n                    sector value           V1           V2\n1   Information Technology     9  0.260716116  3.167688761\n2   Information Technology     9  0.013019718  3.087163882\n3   Consumer Discretionary     9  0.460764224  3.414474621\n4               Financials    NA           NA           NA\n5   Communication Services     9  0.262769444  3.318719821\n6              Health Care     7 -0.648425906 -0.109705952\n7               Financials     8 -1.973083168 -1.885560562\n8   Communication Services     9  0.338977763  3.245992796\n9   Communication Services     9  0.211700494  3.386919837\n10                  Energy     1  4.426345202  2.122714313\n11              Financials     8 -2.035066651 -2.051645670\n12             Health Care     7  0.134997412  0.271085482\n13  Information Technology     9  0.152990911  2.889022928\n14        Consumer Staples     4  1.612086339 -2.070474400\n15             Health Care     7 -0.817806322 -0.070099053\n16  Information Technology     9 -1.013674771  3.152859940\n17                  Energy     1  4.489362784  1.968473742\n18  Communication Services     4  0.905830858 -1.615640606\n19  Information Technology     9 -0.200322237  2.844653883\n20  Communication Services     5  0.370517971 -1.478170524\n21             Industrials     2 -1.316563611  1.655709539\n22  Consumer Discretionary     2  0.868526276  0.311004065\n23              Financials     8 -1.783400183 -2.216529171\n24             Health Care     7 -0.756695456 -0.431425018\n25  Information Technology     9  0.604526735  3.110396307\n26        Consumer Staples     4  1.104510716 -1.590511219\n27  Communication Services     5 -0.598031592 -1.035641700\n28  Communication Services     5 -0.359426761 -1.120442092\n29        Consumer Staples     4  1.473395222 -1.938486405\n30              Financials     8 -2.005877628 -1.884302851\n31  Communication Services     9  0.513065126  3.591720807\n32        Consumer Staples     5  0.771180291 -0.698652533\n33  Consumer Discretionary     7  0.153968931 -0.340488893\n34             Health Care     7 -0.261747910  1.348139109\n35  Information Technology     7 -1.183039306  1.088808877\n36        Consumer Staples     5  1.362908248 -2.002610841\n37  Information Technology     9  0.570259402  3.431888821\n38  Information Technology     7 -0.388009409  0.616610077\n39             Industrials     2 -1.964921167  0.561281219\n40               Materials     2 -2.385325224  2.088240293\n41             Health Care     7 -0.332982157  1.180081822\n42             Health Care     7 -0.965193504 -0.019313988\n43             Industrials     2 -2.513285255  1.350138634\n44  Information Technology     9  0.746370181  3.396749116\n45             Health Care     5 -0.596967637 -0.039941876\n46  Information Technology     9 -0.976900231  1.939406482\n47             Health Care     7 -0.878268341 -0.245995008\n48             Industrials     7 -1.250984493  0.988721598\n49  Information Technology     9  0.384368968  3.108680147\n50  Consumer Discretionary     7 -0.641148591  1.237317684\n51             Industrials     2 -2.330720959  0.836135520\n52  Information Technology     9 -1.123766564  3.277368403\n53             Health Care     7 -0.855490928  1.751303845\n54  Information Technology     7  0.059800141  1.630353706\n55  Information Technology     9  0.819065792  3.523857158\n56        Consumer Staples     7  0.642728414 -0.422430092\n57               Materials     7 -1.003341835  0.209137909\n58        Consumer Staples     5  1.382569351 -1.897533205\n59             Health Care     5 -0.343455359 -0.528378459\n60  Consumer Discretionary     7  0.001225988  2.219279668\n61               Utilities     4  2.921042026 -3.299034764\n62             Industrials     5 -1.698118450 -0.916447108\n63  Consumer Discretionary     7 -0.654096185  0.470789394\n64             Health Care     5 -0.558474490 -0.301503522\n65             Health Care     7 -0.781895777  0.323526355\n66  Consumer Discretionary    10  0.859991887  0.750313841\n67                  Energy     1  4.724834378  2.088373787\n68             Health Care     7  0.185351196  0.290922037\n69             Industrials     2 -2.606834781  1.787195931\n70             Real Estate     4  3.043037413 -6.242286385\n71              Financials     8 -1.342077219 -1.585615335\n72             Industrials     2 -1.517632147  0.170258431\n73             Industrials     7 -3.377515969  1.400602012\n74              Financials     8 -1.619240648 -1.827869403\n75             Health Care     7  0.088050850  0.173376795\n76        Consumer Staples     5  1.314649700 -1.768836443\n77              Financials     8 -2.049889584 -1.863748423\n78             Health Care     7 -0.609311573  1.228986682\n79             Health Care     5 -0.700309360 -0.074762732\n80             Health Care     7 -0.417071000  1.277290529\n81  Information Technology     7  0.472963478  1.982851119\n82             Health Care     5 -0.403804456 -0.446515120\n83  Information Technology     2 -1.355406990  1.566924418\n84              Financials     7 -1.040317160 -0.945632296\n85  Consumer Discretionary    10  1.103110608  0.111045042\n86             Health Care     9  0.599510179  3.138640833\n87               Utilities     4  3.228701507 -2.846020996\n88  Communication Services     5 -0.557349964 -0.866029671\n89                  Energy     1  4.611487579  2.135032908\n90              Financials     7 -1.254248938 -0.878108644\n91  Information Technology     9  0.810551165  3.126093869\n92        Consumer Staples     5  0.271408454 -0.578991383\n93             Industrials     2 -1.912967496  0.646034710\n94                  Energy     1  4.926824476  2.067834887\n95             Health Care     7 -0.394118564  1.154971143\n96              Financials     8 -1.837607927 -2.496788803\n97        Consumer Staples     4  1.634566895 -2.114694490\n98             Real Estate     4  3.229959578 -6.870658030\n99              Financials     8 -2.079748036 -2.234214092\n100            Health Care     7 -0.499415751  1.439419212\n101              Utilities     4  3.273865805 -3.007834849\n102             Financials     8 -2.047536169 -2.063809476\n103 Communication Services     5 -0.113511493 -0.978101469\n104             Financials     8 -2.174226327 -2.148238237\n105            Industrials     7 -3.344754837  1.365802433\n106                 Energy     1  4.488350602  1.924728489\n107 Consumer Discretionary     2 -1.897605868 -1.151163823\n108            Industrials     2 -2.569375646  1.753377003\n109              Utilities     4  3.217563524 -2.950188181\n110            Industrials     2 -1.849765533  0.656042703\n111            Industrials     7 -3.344923575  1.373865919\n112             Financials     7  0.422594661  2.192877931\n113            Real Estate     4  3.044829942 -6.105020946\n114            Industrials     7 -3.280984152  1.369038928\n115             Financials     8 -2.202829135 -2.255043043\n116            Health Care     9 -0.099506171  2.913853108\n117 Information Technology     9 -1.486535979  3.540096490\n118              Utilities     4  2.888808738 -3.187490837\n119             Financials     7 -1.085615826 -0.596996531\n120            Health Care     7 -0.524674783  1.395801665\n121                 Energy     1  4.020006898  1.873623371\n122            Real Estate     4  2.999581100 -6.506396504\n123             Financials     8 -2.388172503 -1.762520180\n124            Industrials     2 -2.549171970  1.363478911\n125            Health Care     5 -1.403048175 -1.278850548\n126            Health Care     9  0.363306142  3.016128773\n127            Industrials     2 -1.746340470  0.297981193\n128             Financials     7 -1.115379306 -1.016651872\n129            Industrials     2 -2.283670121  1.429349995\n130            Health Care     7  0.161559524  0.226507640\n131 Information Technology     7  0.141324190  1.855912947\n132             Financials     7 -1.194885755 -0.535598653\n133              Materials     7 -0.371247322  0.500175341\n134             Financials     7 -1.333713705 -0.584287052\n135       Consumer Staples     4  2.151387645 -2.431752266\n136                 Energy     1  4.137920685  1.910898026\n137             Financials     8 -2.381672038 -1.727246393\n138 Information Technology     9 -1.173994861  3.227446115\n139             Financials     8 -1.832363314 -2.607162023\n140              Utilities     4  3.180439107 -2.900004363\n141             Financials     8 -1.851745060 -1.895898850\n142            Industrials     7 -0.191712816 -0.376444672\n143            Health Care     7 -0.251343477 -0.035711579\n144 Information Technology     9 -1.333985555  3.433646842\n145 Consumer Discretionary    10  1.247923586 -0.096789874\n146              Materials     2 -1.440327394  1.295433076\n147             Financials     7 -1.328328082 -0.924760080\n148             Financials     8 -1.691014492 -1.159020929\n149            Health Care     9  0.289622649  2.733548576\n150 Information Technology     2 -0.918958869  2.821011802\n151            Health Care     7 -0.182204830  1.118384201\n152              Materials     2 -1.354746039  0.906175531\n153                 Energy     1  3.958392630  1.884429365\n154 Information Technology     7  0.187377800  1.369585631\n155                 Energy     1  4.345715995  1.776654213\n156 Consumer Discretionary    10  1.205875948  0.021639285\n157 Information Technology     9  0.613375746  3.405376667\n158 Consumer Discretionary     7 -0.501354306  2.058943109\n159       Consumer Staples     7 -0.078919420  1.071045845\n160 Information Technology     7  0.301878975  1.186993287\n161             Financials     7 -1.371860642 -0.827333699\n162            Industrials     2 -2.218126333  1.572503162\n163            Real Estate     4  2.911251637 -6.445178270\n164 Communication Services     9  0.237635466  3.160881047\n165 Consumer Discretionary     2 -1.797744654 -0.963155514\n166 Consumer Discretionary     7 -1.520318117  1.113618856\n167                 Energy     1  4.480435524  1.774042441\n168            Health Care     5 -0.423463567  0.965507435\n169 Communication Services     9  0.623096093  3.381358885\n170             Financials     7 -1.429917576 -0.699140821\n171            Industrials     2 -1.799804019  0.379991585\n172       Consumer Staples     7  0.109394983 -0.576653755\n173            Industrials     7 -2.418225963  1.374198177\n174            Industrials     2 -2.833692098  0.382449816\n175 Information Technology    10  0.197619812  0.650237871\n176 Consumer Discretionary    10  1.121168098 -0.101779502\n177              Utilities     4  3.007629422 -3.343697480\n178 Consumer Discretionary    10  0.781893760  0.061717717\n179            Real Estate     4  3.117777771 -6.763143460\n180 Information Technology     9 -1.178608865  3.347567899\n181             Financials     8 -1.878569973 -2.879758647\n182 Consumer Discretionary     7  0.117720995  0.620430772\n183            Industrials     2 -2.795356544  0.387218342\n184       Consumer Staples     5  1.696836753 -1.925120458\n185            Real Estate     4  3.326229495 -7.080550458\n186       Consumer Staples     7 -0.178048953  0.507475588\n187            Health Care     9 -0.042989804  2.959843720\n188 Information Technology     2 -1.711730772  2.363493914\n189 Information Technology     9 -1.422805067  3.470834999\n190              Utilities     4  3.087217469 -3.082424766\n191 Consumer Discretionary    10 -0.042047993  1.077692529\n192             Financials     7  0.349620313  2.175462336\n193                 Energy     1  4.682920544  2.200468667\n194              Materials     2 -2.378372871  2.359495806\n195 Information Technology     2 -1.902993327  1.773600188\n196                 Energy     1  4.549735981  1.942551887\n197 Information Technology     7 -1.166195006  1.834273781\n198              Utilities     4  2.954498122 -2.797910977\n199            Real Estate     4  3.046338154 -6.659368778\n200            Health Care     5 -0.434332509 -0.709724314\n201            Real Estate     4  2.923089403 -6.660341992\n202       Consumer Staples     4  1.894820856 -1.949303726\n203             Financials     8 -2.211369527 -2.147166224\n204            Health Care     7  0.348521295  0.329189185\n205              Materials     2 -1.623117345  1.434364699\n206            Industrials     2 -1.942734224  1.096033725\n207            Health Care     7 -0.230345046  1.152870777\n208            Health Care     7 -0.763967690  1.653807837\n209             Financials     8 -2.018231091 -2.670504163\n210                 Energy     1  4.926273705  2.071563157\n211                 Energy     1  4.886369129  1.995001010\n212             Financials     8 -1.631716796 -1.956851778\n213              Utilities     4  3.183319178 -3.046682472\n214 Consumer Discretionary     7 -0.387993386  1.966691979\n215 Communication Services     5 -0.127204353 -0.995352626\n216 Information Technology     7 -0.068618770  0.554966199\n217            Industrials     2 -1.873884274  1.388216598\n218            Industrials     2 -2.586337452  1.559908919\n219            Real Estate     4  2.982020148 -6.606738192\n220             Financials     8 -2.149214579 -2.000695633\n221       Consumer Staples     5  0.236964255 -0.855263365\n222       Consumer Staples    10  0.816459285 -0.643142077\n223            Industrials     2 -2.560927111  1.615208671\n224 Consumer Discretionary    10  0.722236608 -0.291416162\n225 Consumer Discretionary    10  0.758564889 -0.130277574\n226              Utilities     4  2.861396428 -3.146764261\n227       Consumer Staples     7 -0.028390349  0.781949135\n228                 Energy     1  5.024808064  2.090990196\n229 Consumer Discretionary    NA           NA           NA\n230            Real Estate     4  3.254732354 -7.026957460\n231 Information Technology     9 -0.943460973  2.606919001\n232            Industrials     2 -2.514091783  1.711281951\n233            Health Care     7 -0.565486843  1.880716342\n234 Information Technology     7  0.506248455  1.579093455\n235 Communication Services     9  0.283155915  3.324320140\n236             Financials     7 -1.200944331 -0.474153537\n237              Utilities     4  3.072189663 -2.754475001\n238              Utilities     4  3.254154727 -2.840144535\n239            Industrials     2 -2.275157072  1.562460556\n240              Utilities     4  3.192071962 -2.949711136\n241             Financials     8 -1.586338544 -2.251089465\n242 Consumer Discretionary     2 -2.038163613  2.016695536\n243 Information Technology     9 -1.004266156  3.251099894\n244            Industrials     2 -1.736397774  1.585466320\n245            Real Estate     4  3.027895517 -6.061797451\n246            Industrials     2 -2.352701364  1.178599719\n247 Information Technology     9  0.756062222  3.503804574\n248             Financials     8 -2.121135846 -2.046270221\n249            Real Estate     4  3.209801465 -6.625701190\n250            Industrials     7  0.066064748  0.947533166\n251            Real Estate     4  2.982975181 -6.798027768\n252            Industrials     2 -2.814213910  0.272525863\n253 Consumer Discretionary     2 -0.522855609  2.135227011\n254       Consumer Staples     4  2.028915373 -2.322446256\n255 Information Technology     7  0.420381299  2.345080377\n256              Utilities     4  3.362669109 -2.971425515\n257 Information Technology     9  0.570494958  2.892378808\n258            Industrials     7 -3.189687911  1.475786784\n259              Materials     2 -2.513561169  1.136212864\n260              Utilities     4  3.017953345 -2.840788612\n261            Real Estate     5  2.776425245 -6.850187881\n262            Industrials     7  0.090842574  1.515054227\n263            Health Care     5 -0.177096077  0.999328602\n264 Information Technology     7  0.615322629  2.753586542\n265              Materials     2 -1.798909884  1.151731889\n266              Materials     7 -0.822504143  0.630548180\n267            Health Care     9  0.687374873  3.357910034\n268       Consumer Staples     4  1.620196092 -2.140140525\n269             Financials     8 -2.342550046 -1.741947927\n270             Financials     8 -1.901564088 -2.913446688\n271 Information Technology     7  0.329599347  1.536997724\n272            Real Estate     4  2.940762120 -6.588761501\n273            Health Care     9  0.162133529  3.106159984\n274            Industrials     2 -2.140777062  1.579891429\n275             Financials     8 -1.928064776 -2.845947341\n276            Health Care     7 -0.895836522  1.725946918\n277            Industrials     7 -0.897545953  0.712088979\n278              Materials     1 -2.576215185  2.042725431\n279              Utilities     4  2.852219749 -3.125138718\n280              Materials     7  0.013380558  0.007635552\n281            Industrials     7 -0.047464231  1.295827267\n282             Financials     8 -1.819917620 -2.888234798\n283 Consumer Discretionary    10  0.137217571  0.763530890\n284             Financials     7 -1.500313820 -0.903006246\n285             Financials     8 -1.734480785 -2.575634862\n286 Communication Services     5 -0.525565970 -1.289867681\n287            Industrials     7 -0.062384547 -0.341517590\n288 Information Technology     9 -1.398844477  3.477178818\n289              Utilities     4  2.967209164 -3.116074349\n290            Health Care     7 -0.837821841  1.776717894\n291 Communication Services     5 -0.605936998 -1.076887686\n292            Health Care     5 -0.429603676 -0.683601947\n293             Financials     8 -1.881054003 -2.905133857\n294 Information Technology     9  0.157181973  2.821098854\n295            Industrials     7 -3.266936944  1.341155496\n296            Health Care     2 -1.826373277 -1.523834201\n297            Health Care     9  0.436162931  3.101311474\n298                 Energy     1  4.944103214  1.998427026\n299              Utilities     4  3.109321788 -3.029101348\n300              Utilities     4  3.179722836 -3.159665379\n301            Real Estate     2 -1.527849472  1.871235557\n302 Information Technology     9 -1.092948409  3.325992255\n303       Consumer Staples     4  2.167493693 -2.443785924\n304 Consumer Discretionary     7  0.576104742 -0.293756764\n305       Consumer Staples     4  1.860950681 -1.992582771\n306 Information Technology     7  0.304749643  2.625510507\n307             Financials     7  0.477427392  2.264056147\n308            Health Care     5 -0.211815405 -0.293357329\n309       Consumer Staples     4  2.088787595 -2.129412829\n310              Utilities     4  2.939739525 -2.989842162\n311 Consumer Discretionary     7  0.043604874  1.582919401\n312 Information Technology     9  0.245921836  2.143791172\n313             Financials     8 -1.829627949 -2.714215467\n314 Information Technology     9  0.720262601  3.111887119\n315              Utilities     4  3.065215878 -2.939364556\n316 Consumer Discretionary    10  0.497370367  0.371130372\n317 Information Technology     9 -1.042689318  3.379078742\n318              Materials     2 -0.719290096  0.776476977\n319 Information Technology     7 -0.949296410  1.204022551\n320            Real Estate     4  3.218036182 -7.008022207\n321 Information Technology     9  0.521366605  3.173530493\n322            Health Care     9 -0.285301065  2.735908580\n323 Information Technology     9  0.590847429  3.202590370\n324                 Energy     1  5.018361866  2.162239433\n325                 Energy     1  4.894706833  1.917035080\n326             Financials     7 -1.046876355 -0.428675982\n327 Consumer Discretionary     2 -1.953551877  1.713565689\n328            Industrials     7 -1.084885392  0.762613683\n329       Consumer Staples     4  1.961794765 -2.011579679\n330            Industrials     2 -2.697539923  0.455160763\n331 Consumer Discretionary     2 -2.284159971  0.110195804\n332            Real Estate     4  2.824857484 -6.766293973\n333            Health Care     7 -0.494973055  1.443566842\n334 Consumer Discretionary    10  1.048860532  0.443322184\n335             Financials     8 -1.969114453 -2.718733777\n336            Health Care     7  0.252720438  0.309657184\n337 Consumer Discretionary     7 -0.445983139  0.011772810\n338            Health Care     5 -0.505640554 -0.659460966\n339 Information Technology     9 -1.351430646  2.964095907\n340            Real Estate     7  2.883934857 -6.800370654\n341 Consumer Discretionary     2 -2.264692687  0.084123013\n342 Information Technology     7  0.180229026  0.754974772\n343            Industrials     2 -2.210354503  1.581990532\n344 Information Technology     9  0.639220773  3.327946242\n345            Health Care     7 -0.529289702  1.384777289\n346            Industrials     2 -1.949543955  1.111489609\n347             Financials     8 -2.397100216 -1.746897951\n348            Health Care     7 -0.575749571  1.408918541\n349                 Energy     1  4.925279951  2.039342895\n350              Materials     7  0.155062493 -0.559641679\n351             Financials     8 -2.447894870 -1.748731328\n352            Industrials     2 -2.295643901  1.467907374\n353                 Energy     1  4.577305005  2.068951921\n354            Industrials     7 -0.446635571 -0.201165328\n355              Materials     2 -2.010851549  1.958548228\n356 Communication Services     5  0.503885366 -1.492801213\n357             Financials     7 -1.234160893 -1.177049738\n358             Financials     8 -2.064168181 -2.682854016\n359 Information Technology     7  0.535178571  1.222889727\n360             Financials     7 -1.256298565 -0.724240400\n361            Industrials     2 -1.605814583  0.988738709\n362            Industrials     7 -0.775640728  0.560789392\n363                 Energy     1  4.773463827  1.967013819\n364            Real Estate     4  3.115034430 -6.613795565\n365            Health Care     7 -0.485375444  1.250509138\n366 Consumer Discretionary    10  0.739034384 -0.031979809\n367              Utilities     7  2.728681779 -2.921476746\n368            Real Estate     4  2.941252283 -6.551597785\n369             Financials     8 -1.990819346 -2.362807413\n370            Health Care     7 -0.957262423  1.709098808\n371 Consumer Discretionary     2 -1.973568932  1.739378621\n372       Consumer Staples     4  1.555906578 -1.707383721\n373 Information Technology     9  0.696463795  2.963781546\n374 Information Technology     9 -1.296116174  2.807471003\n375            Health Care     7 -0.095396146 -0.155467042\n376              Materials     2 -0.594220480  0.820119296\n377 Consumer Discretionary    10  0.898545001  0.267917983\n378            Real Estate     4  2.854449316 -6.854256431\n379            Real Estate     4  2.973564532 -6.593559883\n380       Consumer Staples     4  1.773293609 -2.017794921\n381 Information Technology     7  0.276138526  1.522641097\n382       Consumer Staples     4  1.975906180 -2.003289560\n383              Materials     2 -2.150295963  2.128219656\n384            Health Care     5 -0.224041953 -0.409947273\n385 Consumer Discretionary     2 -0.534869205  2.053304941\n386            Industrials     2 -1.690308559  0.874260721\n387 Information Technology     9  0.420808496  2.232363883\n388              Utilities     4  2.751497128 -2.890271529\n389       Consumer Staples     5  1.233743047 -1.565415549\n390              Materials     2 -2.328432823  2.268830200\n391              Materials     2 -2.315044829  2.099702426\n392                 Energy     1  4.727440129  2.171658110\n393            Real Estate     4  3.202222946 -6.893049295\n394            Industrials     2 -2.415342221  1.860902783\n395                 Energy     5  4.241418174  1.757744091\n396              Utilities     4  3.056360836 -3.196733948\n397 Consumer Discretionary    10  1.293044845 -0.119159893\n398 Consumer Discretionary     2  0.585093024  0.015514705\n399            Industrials     2 -1.781318071  0.518172170\n400            Industrials     7  0.012437799  1.932307265\n401                 Energy     1  5.127774192  2.096879168\n402             Financials     8 -1.984813655 -2.197495996\n403 Communication Services     9  0.486374408  3.402826872\n404            Real Estate     4  2.973325423 -6.378937063\n405              Utilities     4  2.955646443 -2.925386749\n406             Financials     7 -1.094446954 -1.044948739\n407 Information Technology     9  0.361996073  1.985805493\n408 Information Technology     7  0.414278703  1.457288421\n409       Consumer Staples     7  0.183601917 -0.308971526\n410            Health Care     7 -0.804176315  1.854638352\n411 Consumer Discretionary    10 -0.296064497  1.863608344\n412 Communication Services     5 -0.513786792 -1.368708651\n413                 Energy     1  4.682964373  2.152065409\n414 Consumer Discretionary     7 -0.383943703  1.528884721\n415             Financials     7 -1.122708864 -1.201049952\n416            Real Estate     4  3.113656193 -6.595682257\n417              Utilities     4  2.920084337 -3.029226311\n418              Materials     2 -2.497219157  1.117567240\n419 Communication Services     5 -0.495815709 -1.261736207\n420             Financials     8 -1.841701302 -2.018507553\n421 Consumer Discretionary    10 -1.161066873  2.219975935\n422            Real Estate     4  3.089034521 -6.822432648\n423              Utilities     4  3.194351027 -2.871942762\n424            Industrials     2 -1.506250801  0.513886362\n425             Financials     8 -1.898967369 -2.837895029\n426              Materials     2 -2.121871153  2.334640406\n427            Health Care     5 -0.557788963  0.749694383\n428            Health Care     5 -0.663335510  0.774608558\n429            Industrials     7 -3.306330519  1.250838294\n430 Information Technology     7 -0.179195920  1.948395744\n431                 Energy     1  4.020165442  1.876037662\n432            Industrials     5 -1.337678159 -1.695877102\n433              Materials     2 -2.507483441  1.171483161\n434              Materials     2 -1.845147210  1.167861131\n435 Communication Services     5 -0.678634782 -1.047904555\n436            Industrials     2 -1.342164877  1.165116823\n437 Consumer Discretionary     2 -1.484756899  0.582591472\n438             Financials     7 -1.316530962 -0.897558998\n439              Materials     2 -2.345959496  1.853096456\n440 Consumer Discretionary     2 -1.626586797  0.761403250\n441 Consumer Discretionary     2 -2.299458127  2.019106362\n442            Industrials     2 -2.060945800  0.858504223\n443 Consumer Discretionary     7 -0.188280562  0.695314345\n444 Consumer Discretionary    10 -1.455182777  2.045010407\n445             Financials     8 -1.665368996 -1.262709583\n446 Consumer Discretionary     2 -2.331395655  0.994904620\n447 Information Technology     2 -1.056284516  0.923359008\n448       Consumer Staples    NA           NA           NA\n449            Industrials     2  0.390887895  2.521613959\n450            Industrials     2 -1.889625938  1.414742903\n451            Industrials     2 -2.778028281  0.396301737\n452 Information Technology     9 -1.080261571  3.351043256\n453 Information Technology     7  0.022849472  0.670098942\n454             Financials     8 -2.431834891 -1.727869219\n455            Real Estate     4  2.824873150 -6.752579019\n456            Real Estate     4  3.022944826 -6.586059996\n457             Financials     8 -1.874904255 -1.955835196\n458 Consumer Discretionary    10  1.290385055 -0.040123912\n459            Industrials     2 -2.301233556  0.841953923\n460            Real Estate     4  3.188250184 -6.919701105\n461            Health Care     5 -0.132653538  0.052854686\n462 Consumer Discretionary     2 -1.901868405  0.358255129\n463            Industrials     2 -1.991668468  1.392254228\n464                 Energy     1  4.920799879  2.001695206\n465            Health Care     3 -0.519281513  1.716820018\n466 Information Technology     7 -0.306820044  2.514297910\n467 Consumer Discretionary     2 -2.328930520  0.047934615\n468 Consumer Discretionary    10 -1.286832569  2.240678120\n469 Communication Services     5 -0.669112346 -1.291759415\n470            Industrials     2 -2.363789208  1.407295359\n471 Consumer Discretionary    10  0.844495983  0.477626536\n472 Consumer Discretionary    10 -1.929305208 -2.832201771\n473 Information Technology     2 -0.973114347  0.741919669\n474            Industrials     2 -1.624879571  0.789747282\n475              Materials     2 -0.832247866 -0.146513260\n476 Consumer Discretionary    10 -1.437608997  2.012856848\n477       Consumer Staples     4  2.060378700 -2.043506933\n478             Financials     8 -1.539664682 -2.507223859\n479 Consumer Discretionary    10  1.188459607 -0.150346301\n480            Industrials     2 -2.331970743  1.525199494\n481                 Energy     1  4.758667029  2.001989344\n482 Consumer Discretionary     2 -2.323576642 -1.621659083\n483            Health Care     5 -1.267464900 -1.494524307\n484             Financials     8 -1.699796895 -1.683864839\n485            Industrials     7  0.192204094  0.992569061\n486 Consumer Discretionary     2 -1.572159469  0.835437894\n487             Financials     8 -1.908899440 -2.046106577\n488 Communication Services     9  0.337681280  2.750033263\n489 Information Technology     9 -1.588168614  2.458877173\n490 Consumer Discretionary    10  1.262026877 -0.053703745\n491            Industrials     2 -2.137950607  1.593139686\n492             Financials     7 -1.507842739 -0.912193600\n493 Consumer Discretionary    10  1.280423169 -0.122796257\n494            Industrials     2 -1.916419988  1.730939912\n495             Financials     8 -2.346584472 -1.784762599\n496       Consumer Staples     6  0.581277004  1.566461724\n497 Consumer Discretionary     7 -0.437590322  0.432311672\n498 Communication Services     7 -0.932605919  1.173438041\n499 Consumer Discretionary     6  0.526190605  2.007827757\n500            Real Estate     4  3.189281676 -6.796635394\n501 Communication Services     5 -0.503471690 -1.269616717\n502 Consumer Discretionary     2 -2.252811098  2.128081191\n503 Consumer Discretionary     6  0.007891104  1.805829809\n504 Consumer Discretionary     6  0.045872782  1.754849556\n505 Communication Services     7 -0.840719068  1.062459745\n506                 Energy    NA           NA           NA\n\n\nPlot the K-Means and UMAP results.\n\nBegin with the umap_kmeans_results_tbl\nUse ggplot() mapping V1, V2 and color = .cluster\nAdd the geom_point() geometry with alpha = 0.5\nApply colors as you desire (e.g. scale_color_manual(values = palette_light() %&gt;% rep(3)))\n\n\n# Visualize the combined K-Means and UMAP results\nggplot(umap_kmeans_results_tbl, aes(x = V1, y = V2, color = value)) +\n  geom_point(alpha = 0.5)\n\nWarning: Removed 4 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\nCongratulations! You are done with the 1st challenge!"
  },
  {
    "objectID": "Chapter_1_Challenge.html",
    "href": "Chapter_1_Challenge.html",
    "title": "Session 6 - Challenge - Company Segmentation",
    "section": "",
    "text": "Your organization wants to know which companies are similar to each other to help in identifying potential customers of a SAAS software solution (e.g. Salesforce CRM or equivalent) in various segments of the market. The Sales Department is very interested in this analysis, which will help them more easily penetrate various market segments.\nYou will be using stock prices in this analysis. You come up with a method to classify companies based on how their stocks trade using their daily stock returns (percentage movement from one day to the next). This analysis will help your organization determine which companies are related to each other (competitors and have similar attributes).\nYou can analyze the stock prices using what you’ve learned in the unsupervised learning tools including K-Means and UMAP. You will use a combination of kmeans() to find groups and umap() to visualize similarity of daily stock returns."
  },
  {
    "objectID": "Chapter_1_Challenge.html#step-1---convert-stock-prices-to-a-standardized-format-daily-returns",
    "href": "Chapter_1_Challenge.html#step-1---convert-stock-prices-to-a-standardized-format-daily-returns",
    "title": "Session 6 - Challenge - Company Segmentation",
    "section": "Step 1 - Convert stock prices to a standardized format (daily returns)",
    "text": "Step 1 - Convert stock prices to a standardized format (daily returns)\nWhat you first need to do is get the data in a format that can be converted to a “user-item” style matrix. The challenge here is to connect the dots between what we have and what we need to do to format it properly.\nWe know that in order to compare the data, it needs to be standardized or normalized. Why? Because we cannot compare values (stock prices) that are of completely different magnitudes. In order to standardize, we will convert from adjusted stock price (dollar value) to daily returns (percent change from previous day). Here is the formula.\n\\[\nreturn_{daily} = \\frac{price_{i}-price_{i-1}}{price_{i-1}}\n\\]\nFirst, what do we have? We have stock prices for every stock in the SP 500 Index, which is the daily stock prices for over 500 stocks. The data set is over 1.2M observations.\n\nsp_500_prices_tbl %&gt;% glimpse()\n\nRows: 1,225,765\nColumns: 8\n$ symbol   &lt;chr&gt; \"MSFT\", \"MSFT\", \"MSFT\", \"MSFT\", \"MSFT\", \"MSFT\", \"MSFT\", \"MSFT…\n$ date     &lt;date&gt; 2009-01-02, 2009-01-05, 2009-01-06, 2009-01-07, 2009-01-08, …\n$ open     &lt;dbl&gt; 19.53, 20.20, 20.75, 20.19, 19.63, 20.17, 19.71, 19.52, 19.53…\n$ high     &lt;dbl&gt; 20.40, 20.67, 21.00, 20.29, 20.19, 20.30, 19.79, 19.99, 19.68…\n$ low      &lt;dbl&gt; 19.37, 20.06, 20.61, 19.48, 19.55, 19.41, 19.30, 19.52, 19.01…\n$ close    &lt;dbl&gt; 20.33, 20.52, 20.76, 19.51, 20.12, 19.52, 19.47, 19.82, 19.09…\n$ volume   &lt;dbl&gt; 50084000, 61475200, 58083400, 72709900, 70255400, 49815300, 5…\n$ adjusted &lt;dbl&gt; 15.86624, 16.01451, 16.20183, 15.22628, 15.70234, 15.23408, 1…\n\n\nYour first task is to convert to a tibble named sp_500_daily_returns_tbl by performing the following operations:\n\nSelect the symbol, date and adjusted columns\nFilter to dates beginning in the year 2018 and beyond.\nCompute a Lag of 1 day on the adjusted stock price. Be sure to group by symbol first, otherwise we will have lags computed using values from the previous stock in the data frame.\nRemove a NA values from the lagging operation\nCompute the difference between adjusted and the lag\nCompute the percentage difference by dividing the difference by that lag. Name this column pct_return.\nReturn only the symbol, date, and pct_return columns\nSave as a variable named sp_500_daily_returns_tbl\n\n\n# Apply your data transformation skills!\nsp_500_daily_returns_tbl &lt;- sp_500_prices_tbl[, c(\"symbol\", \"date\", \"adjusted\")]\nsp_500_daily_returns_tbl &lt;- filter(sp_500_daily_returns_tbl, year(as.Date(sp_500_daily_returns_tbl$date)) &gt;= 2018)\nsp_split &lt;- split(sp_500_daily_returns_tbl, sp_500_daily_returns_tbl$symbol)\nfor (df_name in names(sp_split)) {\n  sp_split[[df_name]] &lt;- sp_split[[df_name]] %&gt;% mutate(lag_adjusted = lag(adjusted)) %&gt;% na.omit()\n  sp_split[[df_name]] &lt;- sp_split[[df_name]] %&gt;% mutate(pct_return = (adjusted - lag_adjusted)/lag_adjusted)\n}\nsp_500_daily_returns_tbl &lt;- bind_rows(sp_split)\nsp_500_daily_returns_tbl &lt;- select(sp_500_daily_returns_tbl, symbol, date, pct_return)\n\n# Output: sp_500_daily_returns_tbl\nsp_500_daily_returns_tbl\n\n# A tibble: 141,340 × 3\n   symbol date       pct_return\n   &lt;chr&gt;  &lt;date&gt;          &lt;dbl&gt;\n 1 A      2018-01-03   0.0254  \n 2 A      2018-01-04  -0.00750 \n 3 A      2018-01-05   0.0160  \n 4 A      2018-01-08   0.00215 \n 5 A      2018-01-09   0.0246  \n 6 A      2018-01-10  -0.0137  \n 7 A      2018-01-11   0.000141\n 8 A      2018-01-12   0.0131  \n 9 A      2018-01-16  -0.00697 \n10 A      2018-01-17   0.0117  \n# ℹ 141,330 more rows"
  },
  {
    "objectID": "Chapter_1_Challenge.html#step-2---convert-to-user-item-format",
    "href": "Chapter_1_Challenge.html#step-2---convert-to-user-item-format",
    "title": "Session 6 - Challenge - Company Segmentation",
    "section": "Step 2 - Convert to User-Item Format",
    "text": "Step 2 - Convert to User-Item Format\nThe next step is to convert to a user-item format with the symbol in the first column and every other column the value of the daily returns (pct_return) for every stock at each date.\nWe’re going to import the correct results first (just in case you were not able to complete the last step).\n\nsp_500_daily_returns_tbl &lt;- read_rds(\"sp_500_daily_returns_tbl.rds\")\nsp_500_daily_returns_tbl\n\n# A tibble: 141,340 × 3\n   symbol date       pct_return\n   &lt;chr&gt;  &lt;date&gt;          &lt;dbl&gt;\n 1 MSFT   2018-01-03   0.00465 \n 2 MSFT   2018-01-04   0.00880 \n 3 MSFT   2018-01-05   0.0124  \n 4 MSFT   2018-01-08   0.00102 \n 5 MSFT   2018-01-09  -0.000680\n 6 MSFT   2018-01-10  -0.00453 \n 7 MSFT   2018-01-11   0.00296 \n 8 MSFT   2018-01-12   0.0173  \n 9 MSFT   2018-01-16  -0.0140  \n10 MSFT   2018-01-17   0.0203  \n# ℹ 141,330 more rows\n\n\nNow that we have the daily returns (percentage change from one day to the next), we can convert to a user-item format. The user in this case is the symbol (company), and the item in this case is the pct_return at each date.\n\nSpread the date column to get the values as percentage returns. Make sure to fill an NA values with zeros.\nSave the result as stock_date_matrix_tbl\n\n\n# Convert to User-Item Format\nstock_date_matrix_tbl &lt;- sp_500_daily_returns_tbl %&gt;% spread(date, pct_return, fill = 0)\n  \n# Output: stock_date_matrix_tbl\nstock_date_matrix_tbl\n\n# A tibble: 502 × 283\n   symbol `2018-01-03` `2018-01-04` `2018-01-05` `2018-01-08` `2018-01-09`\n   &lt;chr&gt;         &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n 1 A          0.0254       -0.00750     0.0160        0.00215     0.0246  \n 2 AAL       -0.0123        0.00630    -0.000380     -0.00988    -0.000959\n 3 AAP        0.00905       0.0369      0.0106       -0.00704    -0.00808 \n 4 AAPL      -0.000174      0.00465     0.0114       -0.00371    -0.000115\n 5 ABBV       0.0156       -0.00570     0.0174       -0.0160      0.00754 \n 6 ABC        0.00372      -0.00222     0.0121        0.0166      0.00640 \n 7 ABMD       0.0173        0.0175      0.0154        0.0271      0.00943 \n 8 ABT        0.00221      -0.00170     0.00289      -0.00288     0.00170 \n 9 ACN        0.00462       0.0118      0.00825       0.00799     0.00333 \n10 ADBE       0.0188        0.0120      0.0116       -0.00162     0.00897 \n# ℹ 492 more rows\n# ℹ 277 more variables: `2018-01-10` &lt;dbl&gt;, `2018-01-11` &lt;dbl&gt;,\n#   `2018-01-12` &lt;dbl&gt;, `2018-01-16` &lt;dbl&gt;, `2018-01-17` &lt;dbl&gt;,\n#   `2018-01-18` &lt;dbl&gt;, `2018-01-19` &lt;dbl&gt;, `2018-01-22` &lt;dbl&gt;,\n#   `2018-01-23` &lt;dbl&gt;, `2018-01-24` &lt;dbl&gt;, `2018-01-25` &lt;dbl&gt;,\n#   `2018-01-26` &lt;dbl&gt;, `2018-01-29` &lt;dbl&gt;, `2018-01-30` &lt;dbl&gt;,\n#   `2018-01-31` &lt;dbl&gt;, `2018-02-01` &lt;dbl&gt;, `2018-02-02` &lt;dbl&gt;, …"
  },
  {
    "objectID": "Chapter_1_Challenge.html#step-3---perform-k-means-clustering",
    "href": "Chapter_1_Challenge.html#step-3---perform-k-means-clustering",
    "title": "Session 6 - Challenge - Company Segmentation",
    "section": "Step 3 - Perform K-Means Clustering",
    "text": "Step 3 - Perform K-Means Clustering\nNext, we’ll perform K-Means clustering.\nWe’re going to import the correct results first (just in case you were not able to complete the last step).\n\nstock_date_matrix_tbl &lt;- read_rds(\"stock_date_matrix_tbl.rds\")\n\nBeginning with the stock_date_matrix_tbl, perform the following operations:\n\nDrop the non-numeric column, symbol\nPerform kmeans() with centers = 4 and nstart = 20\nSave the result as kmeans_obj\n\n\n# Create kmeans_obj for 4 centers\ntemp &lt;- stock_date_matrix_tbl %&gt;% select(-symbol)\nkmeans_obj &lt;- kmeans(temp, centers = 4, nstart = 20)\nkmeans_obj\n\nK-means clustering with 4 clusters of sizes 84, 30, 317, 71\n\nCluster means:\n    2018-01-03   2018-01-04   2018-01-05  2018-01-08    2018-01-09\n1 -0.003333954 -0.006912672 0.0012340690 0.005406745 -0.0089961936\n2  0.014549433  0.011343742 0.0006474687 0.005827603 -0.0061031977\n3  0.005217181  0.004542594 0.0065882996 0.001682355  0.0035926461\n4  0.014025528  0.004891946 0.0092884855 0.008080790 -0.0003389287\n     2018-01-10   2018-01-11   2018-01-12   2018-01-16  2018-01-17   2018-01-18\n1 -0.0120427739 -0.004826786 -0.005236483  0.001309974 0.007494267 -0.006708276\n2  0.0012472656  0.023712257  0.010296386 -0.014205000 0.008879761 -0.009114860\n3 -0.0003417889  0.011272867  0.008286783 -0.007601889 0.007489971 -0.001424046\n4 -0.0020594364  0.009308274  0.009571419 -0.008449825 0.015404285  0.001998036\n   2018-01-19  2018-01-22    2018-01-23   2018-01-24    2018-01-25   2018-01-26\n1 0.004566404 0.006985181  0.0080806520 -0.003852982  5.819039e-03 0.0008990918\n2 0.001324402 0.024772066 -0.0005949105 -0.006334400 -1.029610e-02 0.0060671176\n3 0.007923882 0.004611634  0.0009158796  0.002736219  6.261335e-05 0.0112167041\n4 0.006715878 0.009735809  0.0093980814 -0.007636793 -4.868228e-03 0.0166806037\n    2018-01-29   2018-01-30   2018-01-31    2018-02-01  2018-02-02  2018-02-05\n1 -0.011666174 -0.003053078  0.010838715 -0.0147069869 -0.01321817 -0.02624758\n2 -0.015217440 -0.021314151  0.001732506  0.0088676780 -0.03741749 -0.03711698\n3 -0.006083350 -0.011773883 -0.003893409 -0.0002198492 -0.01945987 -0.03929605\n4 -0.005021227 -0.009723839  0.005783896  0.0021775377 -0.02295550 -0.03846852\n    2018-02-06    2018-02-07  2018-02-08  2018-02-09  2018-02-12   2018-02-13\n1 -0.000769148 -0.0052130982 -0.02013127  0.01909034 0.005043885  0.003804489\n2  0.013342351 -0.0190853955 -0.03955006 -0.00291801 0.022509484 -0.006038450\n3  0.014327389  0.0006988956 -0.03645141  0.01201566 0.012262163  0.002250963\n4  0.025070219 -0.0074124405 -0.04115078  0.02162704 0.018492458  0.008702354\n    2018-02-14   2018-02-15    2018-02-16    2018-02-20   2018-02-21\n1 -0.004153567  0.016542153  0.0050883535 -0.0117393604 -0.016373701\n2  0.028709277 -0.005064078 -0.0050865513  0.0004252287 -0.016731442\n3  0.017405799  0.009018172  0.0009879948 -0.0076134581 -0.002297952\n4  0.024552532  0.016512878 -0.0064207255  0.0060618583 -0.004441781\n    2018-02-22 2018-02-23   2018-02-26   2018-02-27   2018-02-28   2018-03-01\n1  0.007334973 0.01800925 2.523189e-03 -0.016890593 -0.004953530 -0.000381493\n2  0.009769590 0.02115968 9.924278e-05 -0.014163508 -0.023712904  0.001114025\n3 -0.001782200 0.01341795 8.558352e-03 -0.013163471 -0.012030574 -0.013488875\n4 -0.002997867 0.02195730 1.220083e-02 -0.009308126 -0.005461278 -0.014143419\n   2018-03-02 2018-03-05    2018-03-06   2018-03-07  2018-03-08  2018-03-09\n1 0.001200669 0.01370457 -0.0019166661 -0.002145171 0.007270226 0.004711574\n2 0.007737213 0.01108851  0.0003806278 -0.007205835 0.001223280 0.021309965\n3 0.005346057 0.01038346  0.0061748492 -0.001323156 0.001313594 0.017891556\n4 0.021342169 0.01379969  0.0087369561  0.007337585 0.008156522 0.017801101\n     2018-03-12   2018-03-13    2018-03-14   2018-03-15   2018-03-16\n1  0.0031507710  0.001106390  0.0009870808 -0.002700715 0.0054389622\n2 -0.0005388962 -0.008199908 -0.0017622280 -0.012297035 0.0129985324\n3 -0.0035181932 -0.003675462 -0.0084294900 -0.001428887 0.0043333233\n4  0.0027135945 -0.012076285  0.0002114269 -0.002123033 0.0008341013\n    2018-03-19   2018-03-20    2018-03-21   2018-03-22   2018-03-23 2018-03-26\n1 -0.007648673 -0.003879733 -0.0090580220 -0.003464591 -0.013739589 0.01267397\n2 -0.017670238  0.013784848  0.0337207010 -0.021459951 -0.007163383 0.01896047\n3 -0.010398300  0.000171361  0.0004388795 -0.027250330 -0.019522841 0.02449549\n4 -0.017248805  0.004318024 -0.0017923612 -0.026251915 -0.025754376 0.03407693\n    2018-03-27    2018-03-28  2018-03-29  2018-04-02  2018-04-03  2018-04-04\n1  0.007715361  0.0112983042 0.004369175 -0.01422130 0.007764893 0.010279533\n2 -0.013465892 -0.0233216532 0.023735936 -0.02377674 0.019605101 0.001227871\n3 -0.013135617 -0.0004245702 0.013363731 -0.02238548 0.012621133 0.012434839\n4 -0.032635868 -0.0121534871 0.018762622 -0.02940422 0.012355715 0.015777681\n   2018-04-05   2018-04-06    2018-04-09   2018-04-10    2018-04-11\n1 0.002828578 -0.007734639 -0.0001039607 -0.001881378 -0.0007348127\n2 0.019447924 -0.022406930  0.0025547209  0.038827519  0.0130939406\n3 0.007176211 -0.023302068  0.0013397648  0.015147638 -0.0067400406\n4 0.001453854 -0.029807187  0.0072958976  0.025353351 -0.0056141513\n    2018-04-12   2018-04-13  2018-04-16  2018-04-17    2018-04-18   2018-04-19\n1 -0.010752601  0.005563910 0.008682951 0.007863409 -0.0046798570 -0.013599108\n2  0.001740217  0.013155802 0.008616509 0.006042663  0.0206900471  0.001786194\n3  0.008179894 -0.005095188 0.011016656 0.006195900  0.0032189057 -0.003267487\n4  0.015962569 -0.007832302 0.004860507 0.022161608  0.0002988631 -0.018124119\n    2018-04-20   2018-04-23  2018-04-24    2018-04-25  2018-04-26   2018-04-27\n1 -0.012187591  0.001157400  0.00221505  0.0002285739 0.010261824  0.011958287\n2 -0.003468391  0.006591688 -0.01599992  0.0059983491 0.011457675 -0.009243902\n3 -0.005666901  0.002505648 -0.01123779  0.0039772566 0.003569482  0.003206567\n4 -0.010631547 -0.003682519 -0.01618772 -0.0050286856 0.020824552 -0.004572574\n     2018-04-30    2018-05-01   2018-05-02   2018-05-03   2018-05-04\n1 -5.828280e-03  0.0007776130 -0.009884618  0.001865179 0.0115802919\n2  5.650547e-05 -0.0050385450  0.008551843 -0.003354957 0.0002403534\n3 -1.188822e-02 -0.0005850741 -0.010327390 -0.005367388 0.0118618730\n4 -4.215671e-03  0.0119120995 -0.003166279  0.004031093 0.0152252115\n     2018-05-07    2018-05-08  2018-05-09  2018-05-10   2018-05-11\n1 -0.0003423209 -0.0117845845 0.002356665 0.008776411 -0.001332108\n2 -0.0006381188  0.0103725962 0.019005395 0.003092002 -0.001898366\n3  0.0006844511  0.0007354292 0.006015187 0.008198444  0.003294055\n4  0.0107081957  0.0042713777 0.018287598 0.012255246 -0.004284660\n     2018-05-14   2018-05-15   2018-05-16   2018-05-17    2018-05-18\n1 -0.0055922557 -0.011670012 -0.002364305 -0.004893340 -0.0039987220\n2  0.0057983409  0.004290063  0.008291791  0.020700579 -0.0059074763\n3  0.0005690565 -0.003929441  0.006577711  0.001955032 -0.0005493316\n4  0.0016992322 -0.004501408  0.008611112 -0.004584975 -0.0022359815\n   2018-05-21   2018-05-22    2018-05-23    2018-05-24    2018-05-25\n1 0.005779365  0.002482762  0.0085556910  1.298424e-03  0.0047986326\n2 0.008283126 -0.013478278 -0.0044105608 -1.261852e-02 -0.0266239832\n3 0.005961593 -0.004840369  0.0006489749  8.611148e-05 -0.0012343964\n4 0.005922644 -0.003192814  0.0057628973  1.489904e-03  0.0006639455\n    2018-05-29  2018-05-30   2018-05-31   2018-06-01   2018-06-04   2018-06-05\n1  0.001238291 0.011695739 -0.007053274 -0.003547776  0.003162351 -0.005049502\n2 -0.001696881 0.028669361 -0.012173706  0.002155198 -0.012253263 -0.002154042\n3 -0.015959552 0.012555582 -0.010942939  0.010095531  0.005981400  0.003198089\n4 -0.006059243 0.009546631 -0.001903148  0.022277656  0.003563116  0.007483896\n    2018-06-06   2018-06-07   2018-06-08  2018-06-11   2018-06-12    2018-06-13\n1 -0.005781605  0.002795166  0.005472490 0.001419442  0.008011873 -0.0102443629\n2  0.003809198  0.016374668 -0.004469895 0.005602012 -0.005129724 -0.0031941768\n3  0.011968862  0.001149033  0.005784347 0.001753974  0.001399618 -0.0055633906\n4  0.008494834 -0.013241385  0.004352640 0.002487955  0.008414511  0.0006958373\n     2018-06-14   2018-06-15    2018-06-18    2018-06-19  2018-06-20\n1  0.0089727967  0.005189750 -0.0037548361  0.0055750955 0.004292090\n2 -0.0051560680 -0.022707272  0.0173805699  0.0006035218 0.010461839\n3  0.0009142176  0.001952892 -0.0026534461 -0.0061898455 0.001076239\n4  0.0095731668 -0.001900661  0.0009221515 -0.0088464161 0.006518084\n    2018-06-21   2018-06-22   2018-06-25   2018-06-26   2018-06-27   2018-06-28\n1  0.003094840  0.008221106  0.009402708  0.000226482 -0.001854346  0.007254731\n2 -0.022917019  0.024278987 -0.026779988  0.017510326  0.015372888 -0.003154605\n3 -0.005383937  0.001021374 -0.011979354 -0.001118698 -0.010185976  0.002804796\n4 -0.010378518 -0.007791614 -0.025003868  0.003632608 -0.020827173  0.010604506\n     2018-06-29   2018-07-02   2018-07-03   2018-07-05  2018-07-06  2018-07-09\n1  6.340609e-04 -0.002681042  0.004025346  0.012383700 0.005028909 -0.01604752\n2  6.801777e-03 -0.016776871  0.009084328 -0.001488715 0.013008260  0.01913839\n3 -6.855821e-05  0.001471821 -0.001898671  0.006614258 0.006908309  0.01402647\n4  3.736572e-03  0.007468319 -0.011619902  0.013982441 0.012671282  0.00729805\n   2018-07-10   2018-07-11   2018-07-12    2018-07-13   2018-07-16   2018-07-17\n1 0.006173772  0.002633196 7.831687e-04  0.0004614193 -0.004724125 -0.001728087\n2 0.003473632 -0.024131440 7.366942e-05  0.0050874219 -0.015230587 -0.001992870\n3 0.001312620 -0.009738650 4.563560e-03  0.0012950176 -0.001679823  0.004588254\n4 0.003275802 -0.008306789 1.727150e-02 -0.0023338092 -0.002482895  0.008792052\n    2018-07-18   2018-07-19   2018-07-20   2018-07-23    2018-07-24  2018-07-25\n1 -0.007769495  0.008153929 -0.005246509 -0.004892180 -0.0005005501 0.007607577\n2  0.001663189 -0.001796304 -0.003616946 -0.003431901  0.0104494824 0.008122618\n3  0.005521811 -0.001518489 -0.002652620  0.001778067 -0.0004441636 0.007192060\n4  0.002761209 -0.004980070 -0.004154766  0.002027684 -0.0080874714 0.016187298\n     2018-07-26   2018-07-27   2018-07-30   2018-07-31   2018-08-01\n1  0.0079688330 -0.005027542 -0.002331982  0.012574433 -0.002755748\n2  0.0131985204  0.001280992  0.012986403 -0.002268616 -0.015730558\n3  0.0029787150 -0.003446809 -0.003156086  0.008038429 -0.007249964\n4 -0.0006751857 -0.020919476 -0.021618702  0.002895817 -0.002711583\n    2018-08-02    2018-08-03   2018-08-06   2018-08-07    2018-08-08\n1  0.004132915  0.0134441240 0.0002851608 -0.003699128 -0.0047101273\n2 -0.002134323 -0.0073460616 0.0052397976  0.003959465 -0.0085479395\n3  0.002993146  0.0051696868 0.0014640732  0.003157818 -0.0006984346\n4  0.014229673 -0.0002601396 0.0082356891  0.003361766  0.0003471306\n     2018-08-09   2018-08-10    2018-08-13  2018-08-14   2018-08-15  2018-08-16\n1  0.0015381073 -0.005940741  0.0008234634 0.004398117  0.008029299 0.009135530\n2 -0.0108872145  0.007638768 -0.0144547914 0.004542780 -0.042438317 0.006339482\n3 -0.0007957794 -0.008728654 -0.0054871905 0.010200628 -0.006691091 0.008967913\n4 -0.0008920641 -0.009182561 -0.0022671805 0.006780214 -0.015767129 0.004438533\n    2018-08-17   2018-08-20   2018-08-21   2018-08-22   2018-08-23  2018-08-24\n1  0.007732354 2.692069e-07 -0.009589298 -0.006575943 -0.001255369 0.004500810\n2  0.003224037 8.421130e-03  0.008349307  0.013378383 -0.005292100 0.008073458\n3  0.006126832 5.942634e-03  0.005122876 -0.003894045 -0.003921203 0.003449513\n4 -0.001760454 4.049175e-03  0.008199431  0.006730186  0.001981029 0.015124691\n    2018-08-27    2018-08-28  2018-08-29   2018-08-30    2018-08-31\n1 -0.002951911  1.332308e-03 0.002524474 -0.002927028  0.0011652746\n2  0.009180901 -5.525657e-03 0.007257279 -0.002890487 -0.0073978491\n3  0.007595955  4.536910e-06 0.003219045 -0.007957643  0.0014553869\n4  0.009845194  3.794339e-03 0.007306630 -0.006688627  0.0006588377\n     2018-09-04   2018-09-05   2018-09-06   2018-09-07   2018-09-10\n1 -0.0024738521  0.010518901  0.005232278 -0.009005451 0.0056867858\n2 -0.0073232978 -0.004506993 -0.019382860 -0.004880020 0.0006737391\n3 -0.0012439741  0.002183078 -0.000759536 -0.001954284 0.0029803154\n4 -0.0009675634 -0.018543501 -0.011209654 -0.004386366 0.0087879660\n     2018-09-11   2018-09-12    2018-09-13   2018-09-14    2018-09-17\n1 -0.0019538731  0.003579706  4.775531e-03 -0.005895538  0.0034210890\n2  0.0122762856  0.009381701 -2.306182e-06  0.004538664  0.0006103131\n3  0.0005049789  0.001161493  4.018751e-03  0.003053672 -0.0031778985\n4  0.0018295441 -0.002137449  6.462456e-03  0.001758224 -0.0163136879\n    2018-09-18   2018-09-19   2018-09-20    2018-09-21   2018-09-24\n1 -0.005822705 -0.012892316  0.006698837  0.0026245042 -0.014558807\n2  0.011631923  0.002892712 -0.004188770  0.0082752213  0.013828416\n3  0.005551467  0.004069505  0.006322862  0.0003726642 -0.010072955\n4  0.010072334 -0.002499493  0.012692587 -0.0003286405  0.006489045\n     2018-09-25   2018-09-26    2018-09-27    2018-09-28   2018-10-01\n1 -0.0056531970 -0.008520217  0.0010554973  0.0117954826 -0.004743913\n2  0.0079921453 -0.009821787 -0.0002961086  0.0005533699  0.013778724\n3 -0.0034740979 -0.002645426 -0.0009807794 -0.0007368244  0.001618323\n4 -0.0008218263 -0.002833221  0.0055217433  0.0020502699 -0.004922243\n     2018-10-02   2018-10-03    2018-10-04   2018-10-05   2018-10-08\n1  0.0063449319 -0.010963752  0.0005911404  0.007115132  0.011777449\n2 -0.0008793832  0.013208412 -0.0075673719 -0.002222662 -0.004422415\n3 -0.0021978236  0.001595167 -0.0056339596 -0.005892240  0.002315831\n4 -0.0096354843  0.003528746 -0.0233264347 -0.017356286 -0.016146227\n    2018-10-09  2018-10-10  2018-10-11   2018-10-12    2018-10-15 2018-10-16\n1  0.001382168 -0.01068745 -0.02451301 0.0009265891  0.0063396100 0.01495123\n2  0.011660485 -0.04102685 -0.03066850 0.0059181717 -0.0069465232 0.01198762\n3 -0.008888514 -0.02905836 -0.02220585 0.0079626327  0.0003925018 0.01900308\n4 -0.002245737 -0.04697040 -0.01005558 0.0285292180 -0.0109009681 0.03496553\n     2018-10-17    2018-10-18   2018-10-19   2018-10-22   2018-10-23\n1 -0.0014392965  0.0003157027  0.014528266 -0.009878428  0.002693487\n2 -0.0121314041 -0.0110406026 -0.013063143 -0.010377735 -0.029278040\n3 -0.0022031050 -0.0143254165 -0.004171677 -0.006903643 -0.006763992\n4 -0.0001182299 -0.0250782664 -0.012541599  0.003844884 -0.003859615\n   2018-10-24   2018-10-25   2018-10-26   2018-10-29 2018-10-30   2018-10-31\n1  0.01353611 -0.003340079 -0.020372884  0.014181789 0.01125114 -0.011297427\n2 -0.04585749  0.015249528 -0.009554609 -0.024947273 0.02341653  0.006087733\n3 -0.03132646  0.015441294 -0.012819263  0.001596918 0.01998755  0.008027797\n4 -0.05208563  0.028991360 -0.023718562 -0.018802822 0.03454404  0.021504480\n   2018-11-01   2018-11-02   2018-11-05  2018-11-06  2018-11-07    2018-11-08\n1 0.003747117 -0.009108626  0.013772235 0.008152953 0.008792495  0.0004581358\n2 0.010308997 -0.009730453  0.018923407 0.002004953 0.022724471 -0.0277091571\n3 0.015634660 -0.001293155  0.006938079 0.007426739 0.014704492  0.0004365969\n4 0.032081398 -0.003883827 -0.005924196 0.005474840 0.027114895 -0.0034784146\n    2018-11-09   2018-11-12    2018-11-13   2018-11-14   2018-11-15\n1  0.005367340  0.001904854  0.0001916946 -0.004133400 -0.004406745\n2 -0.004971914 -0.029063167 -0.0251968257  0.003142088  0.020515330\n3 -0.008675371 -0.015211256  0.0008174817 -0.007268626  0.008872325\n4 -0.024619687 -0.033687808  0.0041571717 -0.005272713  0.023355178\n    2018-11-16   2018-11-19   2018-11-20   2018-11-21    2018-11-23 2018-11-26\n1  0.010063612  0.001588685 -0.008086658 -0.006933761 -7.387090e-06 0.00222745\n2  0.007680349 -0.006087903 -0.040522927  0.018658251 -3.653804e-02 0.02157185\n3  0.002216731 -0.012261967 -0.018868549  0.007797251 -1.868033e-03 0.01391096\n4 -0.005298491 -0.044615610 -0.007829112  0.012297653 -2.928696e-03 0.02792190\n    2018-11-27  2018-11-28    2018-11-29   2018-11-30  2018-12-03   2018-12-04\n1  0.005847793 0.002822177  0.0002154275  0.011292338 0.003797532 -0.008022436\n2 -0.006230058 0.016374453  0.0053696702 -0.006236157 0.026350978 -0.035131989\n3 -0.001218930 0.020257793 -0.0037995937  0.005229962 0.008915859 -0.034976107\n4  0.000669214 0.032255508 -0.0073804570  0.008241973 0.021707438 -0.044736643\n    2018-12-06   2018-12-07   2018-12-10   2018-12-11  2018-12-12   2018-12-13\n1  0.009630455 -0.007000921 -0.000701633  0.004753714 -0.00950557  0.008867633\n2 -0.025829610 -0.007277311 -0.022566657 -0.003490909  0.01204804 -0.002388297\n3 -0.006218295 -0.023407900 -0.003215619 -0.003893997  0.00769762 -0.008218803\n4  0.008023883 -0.037844459  0.009075633  0.001617522  0.01094937 -0.009546741\n    2018-12-14  2018-12-17   2018-12-18   2018-12-19   2018-12-20  2018-12-21\n1 -0.006215472 -0.03181874 -0.002335696 -0.005963248 -0.009304501 -0.01104888\n2 -0.028984553 -0.01903142 -0.022103904 -0.013217782 -0.028551975 -0.01564321\n3 -0.014658242 -0.01759075 -0.001704006 -0.015390412 -0.016571956 -0.01838267\n4 -0.020016222 -0.02540093  0.010933420 -0.029032982 -0.017370866 -0.03004544\n   2018-12-24 2018-12-26  2018-12-27    2018-12-28  2018-12-31   2019-01-02\n1 -0.03925786 0.02519597 0.005720476  0.0005493469 0.003374524 -0.017623973\n2 -0.04288499 0.07139516 0.003921202 -0.0097765403 0.006628301  0.019069103\n3 -0.02226213 0.04534322 0.008903106 -0.0019643956 0.009390790  0.002999051\n4 -0.02366252 0.06254006 0.010954290 -0.0021091840 0.008540171  0.003843006\n    2019-01-03 2019-01-04  2019-01-07  2019-01-08   2019-01-09  2019-01-10\n1  0.003428785 0.01352601 0.002960760 0.014579573 -0.004437992 0.014320030\n2 -0.007154041 0.04511775 0.020515467 0.011879849  0.021232497 0.007079545\n3 -0.020498572 0.03395158 0.009397651 0.009803304  0.006131962 0.004161268\n4 -0.042207626 0.04949310 0.021900070 0.011169862  0.017527869 0.006892676\n     2019-01-11    2019-01-14  2019-01-15    2019-01-16  2019-01-17  2019-01-18\n1  0.0006439650 -7.487770e-03 0.011233657  0.0018849468 0.005550432 0.005066536\n2 -0.0044939986 -5.779135e-05 0.004220701  0.0005469789 0.013001543 0.020885746\n3  0.0019697839 -2.211265e-03 0.004755527  0.0034638122 0.009621661 0.016372572\n4 -0.0000643815 -1.263161e-02 0.016148265 -0.0003493891 0.009778713 0.018933426\n    2019-01-22    2019-01-23   2019-01-24    2019-01-25   2019-01-28\n1 -0.003042516  0.0054318391 -0.002902421 -0.0007662691  0.003788257\n2 -0.026342440 -0.0139855530  0.002068247  0.0200460247 -0.015255646\n3 -0.013525856  0.0008376363  0.002910626  0.0104049820 -0.003409732\n4 -0.022274543 -0.0051502604  0.025276525  0.0213786649 -0.011670435\n    2019-01-29  2019-01-30    2019-01-31   2019-02-01  2019-02-04   2019-02-05\n1  0.004292367 0.007180800  0.0144310699 -0.004675601 0.004866655  0.001337625\n2  0.006852493 0.020060173 -0.0004307433  0.008515918 0.006715036 -0.001705462\n3  0.003457064 0.007812059  0.0051356841  0.002655385 0.004837957  0.004876282\n4 -0.013352553 0.025220812  0.0100370290  0.008579466 0.006612912  0.007444096\n     2019-02-06   2019-02-07    2019-02-08  2019-02-11    2019-02-12\n1 -0.0032362265  0.005879985  0.0041796637 0.001155150 -0.0007469276\n2 -0.0072253794 -0.032870943 -0.0073106553 0.009675432  0.0109777684\n3 -0.0007242068 -0.005505920  0.0003808557 0.002443940  0.0144575364\n4  0.0011515879 -0.016007614  0.0108905276 0.002164051  0.0187379927\n   2019-02-13    2019-02-14  2019-02-15\n1 0.001301848 -0.0018576514 0.006505341\n2 0.018636127  0.0069304497 0.016988955\n3 0.003986743 -0.0036341950 0.013290681\n4 0.002882583  0.0008287979 0.003344893\n\nClustering vector:\n  [1] 3 4 3 4 3 3 4 3 3 4 4 3 3 3 4 1 1 1 3 3 3 1 3 3 4 3 4 3 3 3 4 4 4 3 3 3 3\n [38] 1 4 4 4 3 3 3 2 2 3 3 3 1 3 1 4 1 4 3 1 3 3 3 3 3 3 3 3 3 3 2 3 3 3 3 3 3\n [75] 3 3 3 1 3 1 3 3 3 3 3 3 1 4 3 3 3 3 3 1 3 3 3 3 1 1 3 3 3 3 3 1 3 1 3 3 3\n[112] 2 3 3 1 3 3 4 4 3 3 3 3 3 3 2 2 1 3 3 3 3 3 3 3 3 3 3 3 1 3 3 1 3 1 1 3 2\n[149] 3 3 4 3 3 1 3 1 3 3 3 2 1 1 1 1 3 3 1 1 4 1 3 3 1 3 2 3 4 3 2 3 1 4 3 3 3\n[186] 3 3 2 3 3 3 3 3 3 1 2 4 3 3 3 3 1 3 3 4 4 3 4 3 3 3 3 3 2 3 3 3 3 1 3 2 2\n[223] 3 3 3 3 3 3 2 4 3 3 1 3 3 3 1 3 3 3 4 3 4 4 3 4 4 3 3 4 3 3 1 4 3 3 3 3 3\n[260] 3 3 3 3 3 3 3 1 3 4 1 1 4 1 2 3 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 3 4 3 1 3\n[297] 3 4 1 1 3 3 4 1 4 3 3 1 3 3 4 3 1 3 3 3 3 1 3 2 3 2 3 4 4 3 3 3 4 4 3 2 3\n[334] 3 1 3 4 1 3 4 3 3 2 1 3 4 3 3 4 3 3 3 1 2 3 3 3 2 3 3 3 1 1 3 3 1 3 3 3 3\n[371] 3 1 1 3 3 1 3 1 3 3 1 2 3 3 2 4 3 4 3 3 1 3 3 4 3 3 3 3 3 3 3 3 3 3 1 3 3\n[408] 3 3 3 1 2 1 3 4 1 1 3 1 3 3 4 3 3 4 3 3 4 1 3 1 3 3 3 3 3 3 3 3 3 4 3 3 3\n[445] 1 4 4 4 4 3 4 4 3 1 3 3 3 3 3 3 4 3 3 4 3 3 3 2 3 1 3 4 4 1 1 3 3 3 4 1 1\n[482] 3 3 3 1 2 3 3 3 1 4 2 1 4 2 3 3 3 3 3 3 3\n\nWithin cluster sum of squares by cluster:\n[1]  2.554867  1.588895 18.051976  7.009809\n (between_SS / total_SS =  13.1 %)\n\nAvailable components:\n\n[1] \"cluster\"      \"centers\"      \"totss\"        \"withinss\"     \"tot.withinss\"\n[6] \"betweenss\"    \"size\"         \"iter\"         \"ifault\"      \n\n\nUse glance() to get the tot.withinss.\n\n# Apply glance() to get the tot.withinss\ntot_withinss &lt;- glance(kmeans_obj)$tot.withinss\ntot_withinss\n\n[1] 29.20555"
  },
  {
    "objectID": "Chapter_1_Challenge.html#step-4---find-the-optimal-value-of-k",
    "href": "Chapter_1_Challenge.html#step-4---find-the-optimal-value-of-k",
    "title": "Session 6 - Challenge - Company Segmentation",
    "section": "Step 4 - Find the optimal value of K",
    "text": "Step 4 - Find the optimal value of K\nNow that we are familiar with the process for calculating kmeans(), let’s use purrr to iterate over many values of “k” using the centers argument.\nWe’ll use this custom function called kmeans_mapper():\n\nkmeans_mapper &lt;- function(center = 3) {\n    stock_date_matrix_tbl %&gt;%\n        select(-symbol) %&gt;%\n        kmeans(centers = center, nstart = 20)\n}\n\nApply the kmeans_mapper() and glance() functions iteratively using purrr.\n\nCreate a tibble containing column called centers that go from 1 to 30\nAdd a column named k_means with the kmeans_mapper() output. Use mutate() to add the column and map() to map centers to the kmeans_mapper() function.\nAdd a column named glance with the glance() output. Use mutate() and map() again to iterate over the column of k_means.\nSave the output as k_means_mapped_tbl\n\n\n# Use purrr to map\nk_means_mapped_tbl &lt;- tibble(centers = 1:30)\nk_means_mapped_tbl &lt;- k_means_mapped_tbl %&gt;% mutate(k_means = map(centers, kmeans_mapper))\nk_means_mapped_tbl &lt;- k_means_mapped_tbl %&gt;% mutate(glance = map(k_means, glance))\n# Output: k_means_mapped_tbl \nk_means_mapped_tbl\n\n# A tibble: 30 × 3\n   centers k_means  glance          \n     &lt;int&gt; &lt;list&gt;   &lt;list&gt;          \n 1       1 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n 2       2 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n 3       3 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n 4       4 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n 5       5 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n 6       6 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n 7       7 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n 8       8 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n 9       9 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n10      10 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;\n# ℹ 20 more rows\n\n\nNext, let’s visualize the “tot.withinss” from the glance output as a Scree Plot.\n\nBegin with the k_means_mapped_tbl\nUnnest the glance column\nPlot the centers column (x-axis) versus the tot.withinss column (y-axis) using geom_point() and geom_line()\nAdd a title “Scree Plot” and feel free to style it with your favorite theme\n\n\n# Visualize Scree Plot\nglance_column &lt;- unnest(k_means_mapped_tbl, cols = glance)\nggplot(glance_column, aes(x = centers, y = tot.withinss)) +\n  geom_point() +\n  geom_line() +\n  xlab(\"Centers\") +\n  ylab(\"Total Within-Cluster Sum of Squares\") +\n  ggtitle(\"Scree Plot\")\n\n\n\n\n\n\n\n\nWe can see that the Scree Plot becomes linear (constant rate of change) between 5 and 10 centers for K."
  },
  {
    "objectID": "Chapter_1_Challenge.html#step-5---apply-umap",
    "href": "Chapter_1_Challenge.html#step-5---apply-umap",
    "title": "Session 6 - Challenge - Company Segmentation",
    "section": "Step 5 - Apply UMAP",
    "text": "Step 5 - Apply UMAP\nNext, let’s plot the UMAP 2D visualization to help us investigate cluster assignments.\nWe’re going to import the correct results first (just in case you were not able to complete the last step).\n\nk_means_mapped_tbl &lt;- read_rds(\"k_means_mapped_tbl.rds\")\n\nFirst, let’s apply the umap() function to the stock_date_matrix_tbl, which contains our user-item matrix in tibble format.\n\nStart with stock_date_matrix_tbl\nDe-select the symbol column\nUse the umap() function storing the output as umap_results\n\n\n# Apply UMAP\ntemp &lt;- stock_date_matrix_tbl %&gt;% select(-symbol)\n\n# Store results as: umap_results \numap_results &lt;- temp %&gt;% umap()\n\nNext, we want to combine the layout from the umap_results with the symbol column from the stock_date_matrix_tbl.\n\nStart with umap_results$layout\nConvert from a matrix data type to a tibble with as_tibble()\nBind the columns of the umap tibble with the symbol column from the stock_date_matrix_tbl.\nSave the results as umap_results_tbl.\n\n\n# Convert umap results to tibble with symbols\nlayout &lt;- umap_results$layout\nlayout_tibble &lt;- layout %&gt;% as_tibble()\numap_results_tbl &lt;- layout_tibble %&gt;% bind_cols(stock_date_matrix_tbl$symbol)\n\n# Output: umap_results_tbl\numap_results_tbl\n\n# A tibble: 502 × 3\n        V1      V2 ...3 \n     &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;\n 1 -1.88    0.253  A    \n 2  0.0300  1.40   AAL  \n 3  0.258  -1.01   AAP  \n 4 -2.89   -0.324  AAPL \n 5  0.601   0.0962 ABBV \n 6  1.02   -0.0906 ABC  \n 7 -2.89   -1.02   ABMD \n 8 -1.06   -0.198  ABT  \n 9 -1.87   -0.265  ACN  \n10 -3.05   -0.864  ADBE \n# ℹ 492 more rows\n\n\nFinally, let’s make a quick visualization of the umap_results_tbl.\n\nPipe the umap_results_tbl into ggplot() mapping the columns to x-axis and y-axis\nAdd a geom_point() geometry with an alpha = 0.5\nApply theme_tq() and add a title “UMAP Projection”\n\n\n# Visualize UMAP results\numap_results_tbl %&gt;% ggplot(aes(x = V1, y = V2)) +\n                              geom_point(alpha = 0.5) +\n                              theme_tq() +\n                              ggtitle(\"UMAP Projection\")\n\n\n\n\n\n\n\n\nWe can now see that we have some clusters. However, we still need to combine the K-Means clusters and the UMAP 2D representation."
  },
  {
    "objectID": "Chapter_1_Challenge.html#step-6---combine-k-means-and-umap",
    "href": "Chapter_1_Challenge.html#step-6---combine-k-means-and-umap",
    "title": "Session 6 - Challenge - Company Segmentation",
    "section": "Step 6 - Combine K-Means and UMAP",
    "text": "Step 6 - Combine K-Means and UMAP\nNext, we combine the K-Means clusters and the UMAP 2D representation\nWe’re going to import the correct results first (just in case you were not able to complete the last step).\n\nk_means_mapped_tbl &lt;- read_rds(\"k_means_mapped_tbl.rds\")\numap_results_tbl   &lt;- read_rds(\"umap_results_tbl.rds\")\n\nFirst, pull out the K-Means for 10 Centers. Use this since beyond this value the Scree Plot flattens. Have a look at the business case to recall how that works.\n\n# Get the k_means_obj from the 10th center\nten_centers_kmeans &lt;- k_means_mapped_tbl$k_means[k_means_mapped_tbl$centers == 10]\n\n# Store as k_means_obj\nk_means_obj &lt;- ten_centers_kmeans[[1]]\n\nNext, we’ll combine the clusters from the k_means_obj with the umap_results_tbl.\n\nBegin with the k_means_obj\nAugment the k_means_obj with the stock_date_matrix_tbl to get the clusters added to the end of the tibble\nSelect just the symbol and .cluster columns\nLeft join the result with the umap_results_tbl by the symbol column\nLeft join the result with the result of sp_500_index_tbl %&gt;% select(symbol, company, sector) by the symbol column.\nStore the output as umap_kmeans_results_tbl\n\n\n# Use your dplyr & broom skills to combine the k_means_obj with the umap_results_tbl\ncluster_tibble &lt;- as_tibble(k_means_obj$cluster)\naugmented_tibble &lt;- bind_cols(stock_date_matrix_tbl, cluster_tibble)\naugmented_tibble &lt;- select(augmented_tibble, symbol, value)\njoined_tibble &lt;- left_join(augmented_tibble, umap_results_tbl, by = \"symbol\")\ntemp_sp_500 &lt;- sp_500_index_tbl %&gt;% select(symbol, company, sector)\numap_kmeans_results_tbl &lt;- left_join(temp_sp_500, joined_tibble, by = \"symbol\")\n\n# Output: umap_kmeans_results_tbl \numap_kmeans_results_tbl\n\n    symbol                                             company\n1     MSFT                               Microsoft Corporation\n2     AAPL                                          Apple Inc.\n3     AMZN                                     Amazon.com Inc.\n4    BRK.B                     Berkshire Hathaway Inc. Class B\n5       FB                               Facebook Inc. Class A\n6      JNJ                                   Johnson & Johnson\n7      JPM                                JPMorgan Chase & Co.\n8     GOOG                               Alphabet Inc. Class C\n9    GOOGL                               Alphabet Inc. Class A\n10     XOM                             Exxon Mobil Corporation\n11     BAC                                Bank of America Corp\n12     UNH                     UnitedHealth Group Incorporated\n13       V                                   Visa Inc. Class A\n14      PG                            Procter & Gamble Company\n15     PFE                                         Pfizer Inc.\n16    INTC                                   Intel Corporation\n17     CVX                                 Chevron Corporation\n18      VZ                         Verizon Communications Inc.\n19    CSCO                                  Cisco Systems Inc.\n20       T                                           AT&T Inc.\n21      BA                                      Boeing Company\n22      HD                                     Home Depot Inc.\n23     WFC                               Wells Fargo & Company\n24     MRK                                    Merck & Co. Inc.\n25      MA                     Mastercard Incorporated Class A\n26      KO                                   Coca-Cola Company\n27   CMCSA                         Comcast Corporation Class A\n28     DIS                                 Walt Disney Company\n29     PEP                                        PepsiCo Inc.\n30       C                                      Citigroup Inc.\n31    NFLX                                        Netflix Inc.\n32     WMT                                        Walmart Inc.\n33     MCD                              McDonald's Corporation\n34     ABT                                 Abbott Laboratories\n35    ORCL                                  Oracle Corporation\n36      PM                    Philip Morris International Inc.\n37    ADBE                                          Adobe Inc.\n38     IBM         International Business Machines Corporation\n39     UNP                           Union Pacific Corporation\n40    DWDP                                      DowDuPont Inc.\n41     MDT                                       Medtronic plc\n42    ABBV                                         AbbVie Inc.\n43     MMM                                          3M Company\n44     CRM                                 salesforce.com inc.\n45    AMGN                                          Amgen Inc.\n46    AVGO                                       Broadcom Inc.\n47     LLY                               Eli Lilly and Company\n48     HON                        Honeywell International Inc.\n49    PYPL                                 PayPal Holdings Inc\n50     NKE                                   NIKE Inc. Class B\n51     UTX                     United Technologies Corporation\n52     TXN                      Texas Instruments Incorporated\n53     TMO                       Thermo Fisher Scientific Inc.\n54     ACN                               Accenture Plc Class A\n55    NVDA                                  NVIDIA Corporation\n56    COST                        Costco Wholesale Corporation\n57     LIN                                           Linde plc\n58      MO                                    Altria Group Inc\n59     CVS                              CVS Health Corporation\n60    BKNG                               Booking Holdings Inc.\n61     NEE                                 NextEra Energy Inc.\n62      GE                            General Electric Company\n63    SBUX                               Starbucks Corporation\n64    GILD                                Gilead Sciences Inc.\n65     BMY                        Bristol-Myers Squibb Company\n66     LOW                               Lowe's Companies Inc.\n67     COP                                      ConocoPhillips\n68    ANTM                                         Anthem Inc.\n69     CAT                                    Caterpillar Inc.\n70     AMT                          American Tower Corporation\n71     USB                                        U.S. Bancorp\n72     UPS                  United Parcel Service Inc. Class B\n73     LMT                         Lockheed Martin Corporation\n74     AXP                            American Express Company\n75      CI                                   Cigna Corporation\n76    MDLZ                 Mondelez International Inc. Class A\n77      GS                            Goldman Sachs Group Inc.\n78     DHR                                 Danaher Corporation\n79    BIIB                                         Biogen Inc.\n80     BDX                        Becton Dickinson and Company\n81     ADP                      Automatic Data Processing Inc.\n82    CELG                                 Celgene Corporation\n83    QCOM                               QUALCOMM Incorporated\n84     CME                              CME Group Inc. Class A\n85     TJX                                   TJX Companies Inc\n86    ISRG                             Intuitive Surgical Inc.\n87     DUK                             Duke Energy Corporation\n88    CHTR                 Charter Communications Inc. Class A\n89     SLB                                     Schlumberger NV\n90      CB                                       Chubb Limited\n91    INTU                                         Intuit Inc.\n92     WBA                        Walgreens Boots Alliance Inc\n93     CSX                                     CSX Corporation\n94     EOG                                  EOG Resources Inc.\n95     SYK                                 Stryker Corporation\n96     PNC                   PNC Financial Services Group Inc.\n97      CL                           Colgate-Palmolive Company\n98     SPG                           Simon Property Group Inc.\n99    SCHW                          Charles Schwab Corporation\n100    BSX                       Boston Scientific Corporation\n101      D                                 Dominion Energy Inc\n102     MS                                      Morgan Stanley\n103   FOXA               Twenty-First Century Fox Inc. Class A\n104    BLK                                      BlackRock Inc.\n105    RTN                                    Raytheon Company\n106    OXY                    Occidental Petroleum Corporation\n107     GM                              General Motors Company\n108     DE                                     Deere & Company\n109     SO                                    Southern Company\n110    NSC                        Norfolk Southern Corporation\n111    NOC                        Northrop Grumman Corporation\n112   SPGI                                     S&P Global Inc.\n113    CCI                     Crown Castle International Corp\n114     GD                        General Dynamics Corporation\n115     BK                 Bank of New York Mellon Corporation\n116   VRTX                 Vertex Pharmaceuticals Incorporated\n117     MU                              Micron Technology Inc.\n118    EXC                                  Exelon Corporation\n119    MMC                     Marsh & McLennan Companies Inc.\n120    ZTS                                 Zoetis Inc. Class A\n121    MPC                      Marathon Petroleum Corporation\n122    PLD                                       Prologis Inc.\n123    MET                                        MetLife Inc.\n124    ITW                            Illinois Tool Works Inc.\n125    AGN                                        Allergan plc\n126   ILMN                                       Illumina Inc.\n127    FDX                                   FedEx Corporation\n128    ICE                      Intercontinental Exchange Inc.\n129    EMR                                Emerson Electric Co.\n130    HUM                                         Humana Inc.\n131   CTSH  Cognizant Technology Solutions Corporation Class A\n132    AON                                             Aon plc\n133    ECL                                         Ecolab Inc.\n134    PGR                             Progressive Corporation\n135    KMB                          Kimberly-Clark Corporation\n136    PSX                                         Phillips 66\n137    PRU                           Prudential Financial Inc.\n138    ADI                                 Analog Devices Inc.\n139    BBT                                    BB&T Corporation\n140    AEP                American Electric Power Company Inc.\n141    COF                   Capital One Financial Corporation\n142     WM                               Waste Management Inc.\n143    HCA                                  HCA Healthcare Inc\n144   AMAT                              Applied Materials Inc.\n145    TGT                                  Target Corporation\n146    APD                     Air Products and Chemicals Inc.\n147    AFL                                  Aflac Incorporated\n148    AIG                   American International Group Inc.\n149     EW                    Edwards Lifesciences Corporation\n150    HPQ                                             HP Inc.\n151    BAX                           Baxter International Inc.\n152    SHW                            Sherwin-Williams Company\n153    VLO                           Valero Energy Corporation\n154    FIS         Fidelity National Information Services Inc.\n155    KMI                           Kinder Morgan Inc Class P\n156   ROST                                    Ross Stores Inc.\n157   ADSK                                       Autodesk Inc.\n158    MAR                 Marriott International Inc. Class A\n159     EL                 Estee Lauder Companies Inc. Class A\n160   FISV                                         Fiserv Inc.\n161    TRV                            Travelers Companies Inc.\n162    ETN                                     Eaton Corp. Plc\n163   EQIX                                        Equinix Inc.\n164   ATVI                            Activision Blizzard Inc.\n165      F                                  Ford Motor Company\n166   EBAY                                           eBay Inc.\n167    WMB                             Williams Companies Inc.\n168   REGN                      Regeneron Pharmaceuticals Inc.\n169     EA                                Electronic Arts Inc.\n170    ALL                                Allstate Corporation\n171    JCI                  Johnson Controls International plc\n172    SYY                                   Sysco Corporation\n173    ROP                             Roper Technologies Inc.\n174    DAL                                Delta Air Lines Inc.\n175    RHT                                        Red Hat Inc.\n176     DG                          Dollar General Corporation\n177    SRE                                       Sempra Energy\n178   ORLY                            O'Reilly Automotive Inc.\n179    PSA                                      Public Storage\n180   XLNX                                         Xilinx Inc.\n181    STI                                 SunTrust Banks Inc.\n182    YUM                                    Yum! Brands Inc.\n183    LUV                              Southwest Airlines Co.\n184    KHC                                 Kraft Heinz Company\n185   WELL                                      Welltower Inc.\n186    STZ                   Constellation Brands Inc. Class A\n187   ALXN                        Alexion Pharmaceuticals Inc.\n188    TEL                                TE Connectivity Ltd.\n189   LRCX                            Lam Research Corporation\n190    PEG                 Public Service Enterprise Group Inc\n191    VFC                                    V.F. Corporation\n192    MCO                                 Moody's Corporation\n193    HAL                                 Halliburton Company\n194    LYB                        LyondellBasell Industries NV\n195    GLW                                         Corning Inc\n196    OKE                                          ONEOK Inc.\n197    APH                        Amphenol Corporation Class A\n198    XEL                                    Xcel Energy Inc.\n199    AVB                          AvalonBay Communities Inc.\n200    MCK                                McKesson Corporation\n201    EQR                                  Equity Residential\n202    GIS                                  General Mills Inc.\n203    STT                            State Street Corporation\n204    CNC                                 Centene Corporation\n205    PPG                                 PPG Industries Inc.\n206     IR                                  Ingersoll-Rand Plc\n207    ZBH                         Zimmer Biomet Holdings Inc.\n208      A                           Agilent Technologies Inc.\n209    MTB                                M&T Bank Corporation\n210    PXD                   Pioneer Natural Resources Company\n211    CXO                               Concho Resources Inc.\n212    DFS                         Discover Financial Services\n213     ED                            Consolidated Edison Inc.\n214    HLT                       Hilton Worldwide Holdings Inc\n215    FOX               Twenty-First Century Fox Inc. Class B\n216   PAYX                                        Paychex Inc.\n217    FTV                                       Fortive Corp.\n218   PCAR                                          PACCAR Inc\n219    DLR                           Digital Realty Trust Inc.\n220   TROW                                 T. Rowe Price Group\n221    ADM                      Archer-Daniels-Midland Company\n222     KR                                          Kroger Co.\n223    CMI                                        Cummins Inc.\n224   DLTR                                    Dollar Tree Inc.\n225    AZO                                       AutoZone Inc.\n226    WEC                                WEC Energy Group Inc\n227   MNST                        Monster Beverage Corporation\n228    APC                      Anadarko Petroleum Corporation\n229  CCL.U                                Carnival Corporation\n230    VTR                                         Ventas Inc.\n231    HPE                      Hewlett Packard Enterprise Co.\n232     PH                         Parker-Hannifin Corporation\n233    IQV                                  IQVIA Holdings Inc\n234    MSI                             Motorola Solutions Inc.\n235   TWTR                                        Twitter Inc.\n236   WLTW         Willis Towers Watson Public Limited Company\n237     ES                                   Eversource Energy\n238    PPL                                     PPL Corporation\n239    ROK                            Rockwell Automation Inc.\n240    DTE                                  DTE Energy Company\n241    SYF                                 Synchrony Financial\n242   APTV                                           Aptiv PLC\n243   MCHP                   Microchip Technology Incorporated\n244    TDG                        TransDigm Group Incorporated\n245   SBAC                    SBA Communications Corp. Class A\n246    SWK                         Stanley Black & Decker Inc.\n247    AMD                         Advanced Micro Devices Inc.\n248   NTRS                          Northern Trust Corporation\n249      O                           Realty Income Corporation\n250   VRSK                                Verisk Analytics Inc\n251    BXP                              Boston Properties Inc.\n252    UAL                    United Continental Holdings Inc.\n253    RCL                        Royal Caribbean Cruises Ltd.\n254    CLX                                      Clorox Company\n255    FLT                          FleetCor Technologies Inc.\n256    EIX                                Edison International\n257    GPN                                Global Payments Inc.\n258    HRS                                  Harris Corporation\n259     IP                         International Paper Company\n260     FE                                   FirstEnergy Corp.\n261     WY                                Weyerhaeuser Company\n262   INFO                                     IHS Markit Ltd.\n263   CERN                                  Cerner Corporation\n264   VRSN                                       VeriSign Inc.\n265    NUE                                   Nucor Corporation\n266    BLL                                    Ball Corporation\n267   ALGN                               Align Technology Inc.\n268    TSN                            Tyson Foods Inc. Class A\n269    AMP                           Ameriprise Financial Inc.\n270    KEY                                             KeyCorp\n271    DXC                                  DXC Technology Co.\n272    ESS                           Essex Property Trust Inc.\n273   IDXX                             IDEXX Laboratories Inc.\n274    AME                                         AMETEK Inc.\n275   FITB                                 Fifth Third Bancorp\n276    WAT                                  Waters Corporation\n277   FAST                                    Fastenal Company\n278    FCX                               Freeport-McMoRan Inc.\n279    AWK                   American Water Works Company Inc.\n280    NEM                          Newmont Mining Corporation\n281   CTAS                                  Cintas Corporation\n282    CFG                       Citizens Financial Group Inc.\n283   ULTA                                     Ulta Beauty Inc\n284    HIG              Hartford Financial Services Group Inc.\n285    FRC                                 First Republic Bank\n286    CBS                             CBS Corporation Class B\n287    RSG                              Republic Services Inc.\n288   KLAC                              KLA-Tencor Corporation\n289    AEE                                  Ameren Corporation\n290    MTD                   Mettler-Toledo International Inc.\n291    OMC                                   Omnicom Group Inc\n292    CAH                                Cardinal Health Inc.\n293     RF                       Regions Financial Corporation\n294   NTAP                                         NetApp Inc.\n295    LLL                                 L3 Technologies Inc\n296    MYL                                          Mylan N.V.\n297   ABMD                                        ABIOMED Inc.\n298   FANG                             Diamondback Energy Inc.\n299    ETR                                 Entergy Corporation\n300   EVRG                                         Evergy Inc.\n301   CBRE                             CBRE Group Inc. Class A\n302   MXIM                      Maxim Integrated Products Inc.\n303    CHD                            Church & Dwight Co. Inc.\n304    GPC                               Genuine Parts Company\n305    MKC                    McCormick & Company Incorporated\n306    TSS                          Total System Services Inc.\n307   MSCI                                   MSCI Inc. Class A\n308     LH          Laboratory Corporation of America Holdings\n309    HSY                                     Hershey Company\n310    CNP                             CenterPoint Energy Inc.\n311   EXPE                                  Expedia Group Inc.\n312   KEYS                           Keysight Technologies Inc\n313   HBAN                  Huntington Bancshares Incorporated\n314   SNPS                                       Synopsys Inc.\n315    CMS                              CMS Energy Corporation\n316    CMG                         Chipotle Mexican Grill Inc.\n317   SWKS                             Skyworks Solutions Inc.\n318    VMC                            Vulcan Materials Company\n319   SYMC                                Symantec Corporation\n320    HCP                                            HCP Inc.\n321   CDNS                         Cadence Design Systems Inc.\n322   INCY                                  Incyte Corporation\n323   ANSS                                          ANSYS Inc.\n324    MRO                            Marathon Oil Corporation\n325    HES                                    Hess Corporation\n326    AJG                           Arthur J. Gallagher & Co.\n327    MGM                           MGM Resorts International\n328    GWW                                  W.W. Grainger Inc.\n329      K                                     Kellogg Company\n330    AAL                        American Airlines Group Inc.\n331    LEN                          Lennar Corporation Class A\n332    ARE                Alexandria Real Estate Equities Inc.\n333    RMD                                         ResMed Inc.\n334    BBY                                   Best Buy Co. Inc.\n335    CMA                               Comerica Incorporated\n336    WCG                          WellCare Health Plans Inc.\n337    DRI                             Darden Restaurants Inc.\n338    ABC                       AmerisourceBergen Corporation\n339    WDC                         Western Digital Corporation\n340    HST                          Host Hotels & Resorts Inc.\n341    DHI                                    D.R. Horton Inc.\n342   CTXS                                 Citrix Systems Inc.\n343    TXT                                        Textron Inc.\n344   ANET                                Arista Networks Inc.\n345    COO                               Cooper Companies Inc.\n346    DOV                                   Dover Corporation\n347    PFG                      Principal Financial Group Inc.\n348    TFX                               Teleflex Incorporated\n349    DVN                            Devon Energy Corporation\n350    IFF             International Flavors & Fragrances Inc.\n351    LNC                        Lincoln National Corporation\n352    XYL                                          Xylem Inc.\n353   BHGE                   Baker Hughes a GE Company Class A\n354    EFX                                        Equifax Inc.\n355     CE                                Celanese Corporation\n356    CTL                                    CenturyLink Inc.\n357      L                                   Loews Corporation\n358   SIVB                                 SVB Financial Group\n359     IT                                        Gartner Inc.\n360   CINF                    Cincinnati Financial Corporation\n361   EXPD         Expeditors International of Washington Inc.\n362   CHRW                        C.H. Robinson Worldwide Inc.\n363    APA                                  Apache Corporation\n364    EXR                            Extra Space Storage Inc.\n365   HOLX                                        Hologic Inc.\n366    AAP                             Advance Auto Parts Inc.\n367    NRG                                     NRG Energy Inc.\n368    UDR                                            UDR Inc.\n369   ETFC                       E*TRADE Financial Corporation\n370    VAR                         Varian Medical Systems Inc.\n371   WYNN                                Wynn Resorts Limited\n372    CAG                                 Conagra Brands Inc.\n373   FTNT                                       Fortinet Inc.\n374    STX                              Seagate Technology PLC\n375    DGX                      Quest Diagnostics Incorporated\n376    MLM                      Martin Marietta Materials Inc.\n377   TSCO                              Tractor Supply Company\n378    VNO                                Vornado Realty Trust\n379    MAA              Mid-America Apartment Communities Inc.\n380    HRL                            Hormel Foods Corporation\n381     BR                 Broadridge Financial Solutions Inc.\n382    SJM                                J.M. Smucker Company\n383    EMN                            Eastman Chemical Company\n384    UHS              Universal Health Services Inc. Class B\n385   NCLH                 Norwegian Cruise Line Holdings Ltd.\n386    MAS                                   Masco Corporation\n387   AKAM                            Akamai Technologies Inc.\n388    ATO                            Atmos Energy Corporation\n389    TAP                Molson Coors Brewing Company Class B\n390    MOS                                      Mosaic Company\n391    FMC                                     FMC Corporation\n392    NOV                         National Oilwell Varco Inc.\n393    REG                         Regency Centers Corporation\n394    URI                                 United Rentals Inc.\n395    COG                         Cabot Oil & Gas Corporation\n396    AES                                     AES Corporation\n397    KSS                                  Kohl's Corporation\n398    KMX                                         CarMax Inc.\n399    KSU                                Kansas City Southern\n400   CPRT                                         Copart Inc.\n401    NBL                                   Noble Energy Inc.\n402    RJF                        Raymond James Financial Inc.\n403   TTWO                  Take-Two Interactive Software Inc.\n404    DRE                             Duke Realty Corporation\n405    LNT                                 Alliant Energy Corp\n406   CBOE                             Cboe Global Markets Inc\n407   FFIV                                    F5 Networks Inc.\n408   JKHY                        Jack Henry & Associates Inc.\n409     LW                           Lamb Weston Holdings Inc.\n410    PKI                                    PerkinElmer Inc.\n411    TPR                                       Tapestry Inc.\n412   VIAB                                 Viacom Inc. Class B\n413    FTI                                      TechnipFMC Plc\n414    HAS                                         Hasbro Inc.\n415   NDAQ                                         Nasdaq Inc.\n416    IRM                                  Iron Mountain Inc.\n417    PNW                   Pinnacle West Capital Corporation\n418    WRK                                    WestRock Company\n419  DISCK                              Discovery Inc. Class C\n420    BEN                             Franklin Resources Inc.\n421    TIF                                       Tiffany & Co.\n422    FRT                     Federal Realty Investment Trust\n423     NI                                        NiSource Inc\n424   JBHT                   J.B. Hunt Transport Services Inc.\n425   ZION                           Zions Bancorporation N.A.\n426     CF                         CF Industries Holdings Inc.\n427   XRAY                                DENTSPLY SIRONA Inc.\n428   HSIC                                   Henry Schein Inc.\n429    HII                  Huntington Ingalls Industries Inc.\n430   JNPR                               Juniper Networks Inc.\n431    HFC                           HollyFrontier Corporation\n432   NLSN                                Nielsen Holdings Plc\n433    PKG                    Packaging Corporation of America\n434    AVY                          Avery Dennison Corporation\n435    IPG                 Interpublic Group of Companies Inc.\n436    SNA                                Snap-on Incorporated\n437    WHR                               Whirlpool Corporation\n438     RE                               Everest Re Group Ltd.\n439    ALB                               Albemarle Corporation\n440    MHK                              Mohawk Industries Inc.\n441    BWA                                     BorgWarner Inc.\n442   ALLE                                        Allegion PLC\n443   GRMN                                         Garmin Ltd.\n444    PVH                                           PVH Corp.\n445    TMK                               Torchmark Corporation\n446    LKQ                                     LKQ Corporation\n447    ADS                   Alliance Data Systems Corporation\n448   BF.B                    Brown-Forman Corporation Class B\n449    RHI                      Robert Half International Inc.\n450    JEC                       Jacobs Engineering Group Inc.\n451    ALK                               Alaska Air Group Inc.\n452   QRVO                                          Qorvo Inc.\n453     WU                               Western Union Company\n454    UNM                                          Unum Group\n455    SLG                               SL Green Realty Corp.\n456    AIV Apartment Investment and Management Company Class A\n457    IVZ                                        Invesco Ltd.\n458      M                                          Macy's Inc\n459   ARNC                                        Arconic Inc.\n460    KIM                            Kimco Realty Corporation\n461    DVA                                         DaVita Inc.\n462    NWL                                   Newell Brands Inc\n463    AOS                             A. O. Smith Corporation\n464    XEC                                  Cimarex Energy Co.\n465   NKTR                                 Nektar Therapeutics\n466   FLIR                                   FLIR Systems Inc.\n467    PHM                                     PulteGroup Inc.\n468     RL                    Ralph Lauren Corporation Class A\n469   DISH                    DISH Network Corporation Class A\n470    PNR                                         Pentair plc\n471     FL                                    Foot Locker Inc.\n472    HBI                                    Hanesbrands Inc.\n473    XRX                                   Xerox Corporation\n474   FBHS                 Fortune Brands Home & Security Inc.\n475    SEE                              Sealed Air Corporation\n476   CPRI                              Capri Holdings Limited\n477    CPB                               Campbell Soup Company\n478   PBCT                      People's United Financial Inc.\n479     LB                                       L Brands Inc.\n480    FLS                               Flowserve Corporation\n481     HP                              Helmerich & Payne Inc.\n482    HOG                                Harley-Davidson Inc.\n483   PRGO                                     Perrigo Co. Plc\n484    JEF                      Jefferies Financial Group Inc.\n485    ROL                                        Rollins Inc.\n486    LEG                        Leggett & Platt Incorporated\n487    AMG                      Affiliated Managers Group Inc.\n488   TRIP                                    TripAdvisor Inc.\n489   IPGP                           IPG Photonics Corporation\n490    GPS                                            Gap Inc.\n491    PWR                                Quanta Services Inc.\n492    AIZ                                       Assurant Inc.\n493    JWN                                      Nordstrom Inc.\n494    FLR                                   Fluor Corporation\n495    BHF                          Brighthouse Financial Inc.\n496   COTY                                   Coty Inc. Class A\n497    HRB                                      H&R Block Inc.\n498   NWSA                            News Corporation Class A\n499    MAT                                         Mattel Inc.\n500    MAC                                    Macerich Company\n501  DISCA                              Discovery Inc. Class A\n502     GT                      Goodyear Tire & Rubber Company\n503    UAA                           Under Armour Inc. Class A\n504     UA                           Under Armour Inc. Class C\n505    NWS                            News Corporation Class B\n506 ECA-CA                                  Encana Corporation\n                    sector value           V1           V2\n1   Information Technology     9  0.260716116  3.167688761\n2   Information Technology     9  0.013019718  3.087163882\n3   Consumer Discretionary     9  0.460764224  3.414474621\n4               Financials    NA           NA           NA\n5   Communication Services     9  0.262769444  3.318719821\n6              Health Care     7 -0.648425906 -0.109705952\n7               Financials     8 -1.973083168 -1.885560562\n8   Communication Services     9  0.338977763  3.245992796\n9   Communication Services     9  0.211700494  3.386919837\n10                  Energy     1  4.426345202  2.122714313\n11              Financials     8 -2.035066651 -2.051645670\n12             Health Care     7  0.134997412  0.271085482\n13  Information Technology     9  0.152990911  2.889022928\n14        Consumer Staples     4  1.612086339 -2.070474400\n15             Health Care     7 -0.817806322 -0.070099053\n16  Information Technology     9 -1.013674771  3.152859940\n17                  Energy     1  4.489362784  1.968473742\n18  Communication Services     4  0.905830858 -1.615640606\n19  Information Technology     9 -0.200322237  2.844653883\n20  Communication Services     5  0.370517971 -1.478170524\n21             Industrials     2 -1.316563611  1.655709539\n22  Consumer Discretionary     2  0.868526276  0.311004065\n23              Financials     8 -1.783400183 -2.216529171\n24             Health Care     7 -0.756695456 -0.431425018\n25  Information Technology     9  0.604526735  3.110396307\n26        Consumer Staples     4  1.104510716 -1.590511219\n27  Communication Services     5 -0.598031592 -1.035641700\n28  Communication Services     5 -0.359426761 -1.120442092\n29        Consumer Staples     4  1.473395222 -1.938486405\n30              Financials     8 -2.005877628 -1.884302851\n31  Communication Services     9  0.513065126  3.591720807\n32        Consumer Staples     5  0.771180291 -0.698652533\n33  Consumer Discretionary     7  0.153968931 -0.340488893\n34             Health Care     7 -0.261747910  1.348139109\n35  Information Technology     7 -1.183039306  1.088808877\n36        Consumer Staples     5  1.362908248 -2.002610841\n37  Information Technology     9  0.570259402  3.431888821\n38  Information Technology     7 -0.388009409  0.616610077\n39             Industrials     2 -1.964921167  0.561281219\n40               Materials     2 -2.385325224  2.088240293\n41             Health Care     7 -0.332982157  1.180081822\n42             Health Care     7 -0.965193504 -0.019313988\n43             Industrials     2 -2.513285255  1.350138634\n44  Information Technology     9  0.746370181  3.396749116\n45             Health Care     5 -0.596967637 -0.039941876\n46  Information Technology     9 -0.976900231  1.939406482\n47             Health Care     7 -0.878268341 -0.245995008\n48             Industrials     7 -1.250984493  0.988721598\n49  Information Technology     9  0.384368968  3.108680147\n50  Consumer Discretionary     7 -0.641148591  1.237317684\n51             Industrials     2 -2.330720959  0.836135520\n52  Information Technology     9 -1.123766564  3.277368403\n53             Health Care     7 -0.855490928  1.751303845\n54  Information Technology     7  0.059800141  1.630353706\n55  Information Technology     9  0.819065792  3.523857158\n56        Consumer Staples     7  0.642728414 -0.422430092\n57               Materials     7 -1.003341835  0.209137909\n58        Consumer Staples     5  1.382569351 -1.897533205\n59             Health Care     5 -0.343455359 -0.528378459\n60  Consumer Discretionary     7  0.001225988  2.219279668\n61               Utilities     4  2.921042026 -3.299034764\n62             Industrials     5 -1.698118450 -0.916447108\n63  Consumer Discretionary     7 -0.654096185  0.470789394\n64             Health Care     5 -0.558474490 -0.301503522\n65             Health Care     7 -0.781895777  0.323526355\n66  Consumer Discretionary    10  0.859991887  0.750313841\n67                  Energy     1  4.724834378  2.088373787\n68             Health Care     7  0.185351196  0.290922037\n69             Industrials     2 -2.606834781  1.787195931\n70             Real Estate     4  3.043037413 -6.242286385\n71              Financials     8 -1.342077219 -1.585615335\n72             Industrials     2 -1.517632147  0.170258431\n73             Industrials     7 -3.377515969  1.400602012\n74              Financials     8 -1.619240648 -1.827869403\n75             Health Care     7  0.088050850  0.173376795\n76        Consumer Staples     5  1.314649700 -1.768836443\n77              Financials     8 -2.049889584 -1.863748423\n78             Health Care     7 -0.609311573  1.228986682\n79             Health Care     5 -0.700309360 -0.074762732\n80             Health Care     7 -0.417071000  1.277290529\n81  Information Technology     7  0.472963478  1.982851119\n82             Health Care     5 -0.403804456 -0.446515120\n83  Information Technology     2 -1.355406990  1.566924418\n84              Financials     7 -1.040317160 -0.945632296\n85  Consumer Discretionary    10  1.103110608  0.111045042\n86             Health Care     9  0.599510179  3.138640833\n87               Utilities     4  3.228701507 -2.846020996\n88  Communication Services     5 -0.557349964 -0.866029671\n89                  Energy     1  4.611487579  2.135032908\n90              Financials     7 -1.254248938 -0.878108644\n91  Information Technology     9  0.810551165  3.126093869\n92        Consumer Staples     5  0.271408454 -0.578991383\n93             Industrials     2 -1.912967496  0.646034710\n94                  Energy     1  4.926824476  2.067834887\n95             Health Care     7 -0.394118564  1.154971143\n96              Financials     8 -1.837607927 -2.496788803\n97        Consumer Staples     4  1.634566895 -2.114694490\n98             Real Estate     4  3.229959578 -6.870658030\n99              Financials     8 -2.079748036 -2.234214092\n100            Health Care     7 -0.499415751  1.439419212\n101              Utilities     4  3.273865805 -3.007834849\n102             Financials     8 -2.047536169 -2.063809476\n103 Communication Services     5 -0.113511493 -0.978101469\n104             Financials     8 -2.174226327 -2.148238237\n105            Industrials     7 -3.344754837  1.365802433\n106                 Energy     1  4.488350602  1.924728489\n107 Consumer Discretionary     2 -1.897605868 -1.151163823\n108            Industrials     2 -2.569375646  1.753377003\n109              Utilities     4  3.217563524 -2.950188181\n110            Industrials     2 -1.849765533  0.656042703\n111            Industrials     7 -3.344923575  1.373865919\n112             Financials     7  0.422594661  2.192877931\n113            Real Estate     4  3.044829942 -6.105020946\n114            Industrials     7 -3.280984152  1.369038928\n115             Financials     8 -2.202829135 -2.255043043\n116            Health Care     9 -0.099506171  2.913853108\n117 Information Technology     9 -1.486535979  3.540096490\n118              Utilities     4  2.888808738 -3.187490837\n119             Financials     7 -1.085615826 -0.596996531\n120            Health Care     7 -0.524674783  1.395801665\n121                 Energy     1  4.020006898  1.873623371\n122            Real Estate     4  2.999581100 -6.506396504\n123             Financials     8 -2.388172503 -1.762520180\n124            Industrials     2 -2.549171970  1.363478911\n125            Health Care     5 -1.403048175 -1.278850548\n126            Health Care     9  0.363306142  3.016128773\n127            Industrials     2 -1.746340470  0.297981193\n128             Financials     7 -1.115379306 -1.016651872\n129            Industrials     2 -2.283670121  1.429349995\n130            Health Care     7  0.161559524  0.226507640\n131 Information Technology     7  0.141324190  1.855912947\n132             Financials     7 -1.194885755 -0.535598653\n133              Materials     7 -0.371247322  0.500175341\n134             Financials     7 -1.333713705 -0.584287052\n135       Consumer Staples     4  2.151387645 -2.431752266\n136                 Energy     1  4.137920685  1.910898026\n137             Financials     8 -2.381672038 -1.727246393\n138 Information Technology     9 -1.173994861  3.227446115\n139             Financials     8 -1.832363314 -2.607162023\n140              Utilities     4  3.180439107 -2.900004363\n141             Financials     8 -1.851745060 -1.895898850\n142            Industrials     7 -0.191712816 -0.376444672\n143            Health Care     7 -0.251343477 -0.035711579\n144 Information Technology     9 -1.333985555  3.433646842\n145 Consumer Discretionary    10  1.247923586 -0.096789874\n146              Materials     2 -1.440327394  1.295433076\n147             Financials     7 -1.328328082 -0.924760080\n148             Financials     8 -1.691014492 -1.159020929\n149            Health Care     9  0.289622649  2.733548576\n150 Information Technology     2 -0.918958869  2.821011802\n151            Health Care     7 -0.182204830  1.118384201\n152              Materials     2 -1.354746039  0.906175531\n153                 Energy     1  3.958392630  1.884429365\n154 Information Technology     7  0.187377800  1.369585631\n155                 Energy     1  4.345715995  1.776654213\n156 Consumer Discretionary    10  1.205875948  0.021639285\n157 Information Technology     9  0.613375746  3.405376667\n158 Consumer Discretionary     7 -0.501354306  2.058943109\n159       Consumer Staples     7 -0.078919420  1.071045845\n160 Information Technology     7  0.301878975  1.186993287\n161             Financials     7 -1.371860642 -0.827333699\n162            Industrials     2 -2.218126333  1.572503162\n163            Real Estate     4  2.911251637 -6.445178270\n164 Communication Services     9  0.237635466  3.160881047\n165 Consumer Discretionary     2 -1.797744654 -0.963155514\n166 Consumer Discretionary     7 -1.520318117  1.113618856\n167                 Energy     1  4.480435524  1.774042441\n168            Health Care     5 -0.423463567  0.965507435\n169 Communication Services     9  0.623096093  3.381358885\n170             Financials     7 -1.429917576 -0.699140821\n171            Industrials     2 -1.799804019  0.379991585\n172       Consumer Staples     7  0.109394983 -0.576653755\n173            Industrials     7 -2.418225963  1.374198177\n174            Industrials     2 -2.833692098  0.382449816\n175 Information Technology    10  0.197619812  0.650237871\n176 Consumer Discretionary    10  1.121168098 -0.101779502\n177              Utilities     4  3.007629422 -3.343697480\n178 Consumer Discretionary    10  0.781893760  0.061717717\n179            Real Estate     4  3.117777771 -6.763143460\n180 Information Technology     9 -1.178608865  3.347567899\n181             Financials     8 -1.878569973 -2.879758647\n182 Consumer Discretionary     7  0.117720995  0.620430772\n183            Industrials     2 -2.795356544  0.387218342\n184       Consumer Staples     5  1.696836753 -1.925120458\n185            Real Estate     4  3.326229495 -7.080550458\n186       Consumer Staples     7 -0.178048953  0.507475588\n187            Health Care     9 -0.042989804  2.959843720\n188 Information Technology     2 -1.711730772  2.363493914\n189 Information Technology     9 -1.422805067  3.470834999\n190              Utilities     4  3.087217469 -3.082424766\n191 Consumer Discretionary    10 -0.042047993  1.077692529\n192             Financials     7  0.349620313  2.175462336\n193                 Energy     1  4.682920544  2.200468667\n194              Materials     2 -2.378372871  2.359495806\n195 Information Technology     2 -1.902993327  1.773600188\n196                 Energy     1  4.549735981  1.942551887\n197 Information Technology     7 -1.166195006  1.834273781\n198              Utilities     4  2.954498122 -2.797910977\n199            Real Estate     4  3.046338154 -6.659368778\n200            Health Care     5 -0.434332509 -0.709724314\n201            Real Estate     4  2.923089403 -6.660341992\n202       Consumer Staples     4  1.894820856 -1.949303726\n203             Financials     8 -2.211369527 -2.147166224\n204            Health Care     7  0.348521295  0.329189185\n205              Materials     2 -1.623117345  1.434364699\n206            Industrials     2 -1.942734224  1.096033725\n207            Health Care     7 -0.230345046  1.152870777\n208            Health Care     7 -0.763967690  1.653807837\n209             Financials     8 -2.018231091 -2.670504163\n210                 Energy     1  4.926273705  2.071563157\n211                 Energy     1  4.886369129  1.995001010\n212             Financials     8 -1.631716796 -1.956851778\n213              Utilities     4  3.183319178 -3.046682472\n214 Consumer Discretionary     7 -0.387993386  1.966691979\n215 Communication Services     5 -0.127204353 -0.995352626\n216 Information Technology     7 -0.068618770  0.554966199\n217            Industrials     2 -1.873884274  1.388216598\n218            Industrials     2 -2.586337452  1.559908919\n219            Real Estate     4  2.982020148 -6.606738192\n220             Financials     8 -2.149214579 -2.000695633\n221       Consumer Staples     5  0.236964255 -0.855263365\n222       Consumer Staples    10  0.816459285 -0.643142077\n223            Industrials     2 -2.560927111  1.615208671\n224 Consumer Discretionary    10  0.722236608 -0.291416162\n225 Consumer Discretionary    10  0.758564889 -0.130277574\n226              Utilities     4  2.861396428 -3.146764261\n227       Consumer Staples     7 -0.028390349  0.781949135\n228                 Energy     1  5.024808064  2.090990196\n229 Consumer Discretionary    NA           NA           NA\n230            Real Estate     4  3.254732354 -7.026957460\n231 Information Technology     9 -0.943460973  2.606919001\n232            Industrials     2 -2.514091783  1.711281951\n233            Health Care     7 -0.565486843  1.880716342\n234 Information Technology     7  0.506248455  1.579093455\n235 Communication Services     9  0.283155915  3.324320140\n236             Financials     7 -1.200944331 -0.474153537\n237              Utilities     4  3.072189663 -2.754475001\n238              Utilities     4  3.254154727 -2.840144535\n239            Industrials     2 -2.275157072  1.562460556\n240              Utilities     4  3.192071962 -2.949711136\n241             Financials     8 -1.586338544 -2.251089465\n242 Consumer Discretionary     2 -2.038163613  2.016695536\n243 Information Technology     9 -1.004266156  3.251099894\n244            Industrials     2 -1.736397774  1.585466320\n245            Real Estate     4  3.027895517 -6.061797451\n246            Industrials     2 -2.352701364  1.178599719\n247 Information Technology     9  0.756062222  3.503804574\n248             Financials     8 -2.121135846 -2.046270221\n249            Real Estate     4  3.209801465 -6.625701190\n250            Industrials     7  0.066064748  0.947533166\n251            Real Estate     4  2.982975181 -6.798027768\n252            Industrials     2 -2.814213910  0.272525863\n253 Consumer Discretionary     2 -0.522855609  2.135227011\n254       Consumer Staples     4  2.028915373 -2.322446256\n255 Information Technology     7  0.420381299  2.345080377\n256              Utilities     4  3.362669109 -2.971425515\n257 Information Technology     9  0.570494958  2.892378808\n258            Industrials     7 -3.189687911  1.475786784\n259              Materials     2 -2.513561169  1.136212864\n260              Utilities     4  3.017953345 -2.840788612\n261            Real Estate     5  2.776425245 -6.850187881\n262            Industrials     7  0.090842574  1.515054227\n263            Health Care     5 -0.177096077  0.999328602\n264 Information Technology     7  0.615322629  2.753586542\n265              Materials     2 -1.798909884  1.151731889\n266              Materials     7 -0.822504143  0.630548180\n267            Health Care     9  0.687374873  3.357910034\n268       Consumer Staples     4  1.620196092 -2.140140525\n269             Financials     8 -2.342550046 -1.741947927\n270             Financials     8 -1.901564088 -2.913446688\n271 Information Technology     7  0.329599347  1.536997724\n272            Real Estate     4  2.940762120 -6.588761501\n273            Health Care     9  0.162133529  3.106159984\n274            Industrials     2 -2.140777062  1.579891429\n275             Financials     8 -1.928064776 -2.845947341\n276            Health Care     7 -0.895836522  1.725946918\n277            Industrials     7 -0.897545953  0.712088979\n278              Materials     1 -2.576215185  2.042725431\n279              Utilities     4  2.852219749 -3.125138718\n280              Materials     7  0.013380558  0.007635552\n281            Industrials     7 -0.047464231  1.295827267\n282             Financials     8 -1.819917620 -2.888234798\n283 Consumer Discretionary    10  0.137217571  0.763530890\n284             Financials     7 -1.500313820 -0.903006246\n285             Financials     8 -1.734480785 -2.575634862\n286 Communication Services     5 -0.525565970 -1.289867681\n287            Industrials     7 -0.062384547 -0.341517590\n288 Information Technology     9 -1.398844477  3.477178818\n289              Utilities     4  2.967209164 -3.116074349\n290            Health Care     7 -0.837821841  1.776717894\n291 Communication Services     5 -0.605936998 -1.076887686\n292            Health Care     5 -0.429603676 -0.683601947\n293             Financials     8 -1.881054003 -2.905133857\n294 Information Technology     9  0.157181973  2.821098854\n295            Industrials     7 -3.266936944  1.341155496\n296            Health Care     2 -1.826373277 -1.523834201\n297            Health Care     9  0.436162931  3.101311474\n298                 Energy     1  4.944103214  1.998427026\n299              Utilities     4  3.109321788 -3.029101348\n300              Utilities     4  3.179722836 -3.159665379\n301            Real Estate     2 -1.527849472  1.871235557\n302 Information Technology     9 -1.092948409  3.325992255\n303       Consumer Staples     4  2.167493693 -2.443785924\n304 Consumer Discretionary     7  0.576104742 -0.293756764\n305       Consumer Staples     4  1.860950681 -1.992582771\n306 Information Technology     7  0.304749643  2.625510507\n307             Financials     7  0.477427392  2.264056147\n308            Health Care     5 -0.211815405 -0.293357329\n309       Consumer Staples     4  2.088787595 -2.129412829\n310              Utilities     4  2.939739525 -2.989842162\n311 Consumer Discretionary     7  0.043604874  1.582919401\n312 Information Technology     9  0.245921836  2.143791172\n313             Financials     8 -1.829627949 -2.714215467\n314 Information Technology     9  0.720262601  3.111887119\n315              Utilities     4  3.065215878 -2.939364556\n316 Consumer Discretionary    10  0.497370367  0.371130372\n317 Information Technology     9 -1.042689318  3.379078742\n318              Materials     2 -0.719290096  0.776476977\n319 Information Technology     7 -0.949296410  1.204022551\n320            Real Estate     4  3.218036182 -7.008022207\n321 Information Technology     9  0.521366605  3.173530493\n322            Health Care     9 -0.285301065  2.735908580\n323 Information Technology     9  0.590847429  3.202590370\n324                 Energy     1  5.018361866  2.162239433\n325                 Energy     1  4.894706833  1.917035080\n326             Financials     7 -1.046876355 -0.428675982\n327 Consumer Discretionary     2 -1.953551877  1.713565689\n328            Industrials     7 -1.084885392  0.762613683\n329       Consumer Staples     4  1.961794765 -2.011579679\n330            Industrials     2 -2.697539923  0.455160763\n331 Consumer Discretionary     2 -2.284159971  0.110195804\n332            Real Estate     4  2.824857484 -6.766293973\n333            Health Care     7 -0.494973055  1.443566842\n334 Consumer Discretionary    10  1.048860532  0.443322184\n335             Financials     8 -1.969114453 -2.718733777\n336            Health Care     7  0.252720438  0.309657184\n337 Consumer Discretionary     7 -0.445983139  0.011772810\n338            Health Care     5 -0.505640554 -0.659460966\n339 Information Technology     9 -1.351430646  2.964095907\n340            Real Estate     7  2.883934857 -6.800370654\n341 Consumer Discretionary     2 -2.264692687  0.084123013\n342 Information Technology     7  0.180229026  0.754974772\n343            Industrials     2 -2.210354503  1.581990532\n344 Information Technology     9  0.639220773  3.327946242\n345            Health Care     7 -0.529289702  1.384777289\n346            Industrials     2 -1.949543955  1.111489609\n347             Financials     8 -2.397100216 -1.746897951\n348            Health Care     7 -0.575749571  1.408918541\n349                 Energy     1  4.925279951  2.039342895\n350              Materials     7  0.155062493 -0.559641679\n351             Financials     8 -2.447894870 -1.748731328\n352            Industrials     2 -2.295643901  1.467907374\n353                 Energy     1  4.577305005  2.068951921\n354            Industrials     7 -0.446635571 -0.201165328\n355              Materials     2 -2.010851549  1.958548228\n356 Communication Services     5  0.503885366 -1.492801213\n357             Financials     7 -1.234160893 -1.177049738\n358             Financials     8 -2.064168181 -2.682854016\n359 Information Technology     7  0.535178571  1.222889727\n360             Financials     7 -1.256298565 -0.724240400\n361            Industrials     2 -1.605814583  0.988738709\n362            Industrials     7 -0.775640728  0.560789392\n363                 Energy     1  4.773463827  1.967013819\n364            Real Estate     4  3.115034430 -6.613795565\n365            Health Care     7 -0.485375444  1.250509138\n366 Consumer Discretionary    10  0.739034384 -0.031979809\n367              Utilities     7  2.728681779 -2.921476746\n368            Real Estate     4  2.941252283 -6.551597785\n369             Financials     8 -1.990819346 -2.362807413\n370            Health Care     7 -0.957262423  1.709098808\n371 Consumer Discretionary     2 -1.973568932  1.739378621\n372       Consumer Staples     4  1.555906578 -1.707383721\n373 Information Technology     9  0.696463795  2.963781546\n374 Information Technology     9 -1.296116174  2.807471003\n375            Health Care     7 -0.095396146 -0.155467042\n376              Materials     2 -0.594220480  0.820119296\n377 Consumer Discretionary    10  0.898545001  0.267917983\n378            Real Estate     4  2.854449316 -6.854256431\n379            Real Estate     4  2.973564532 -6.593559883\n380       Consumer Staples     4  1.773293609 -2.017794921\n381 Information Technology     7  0.276138526  1.522641097\n382       Consumer Staples     4  1.975906180 -2.003289560\n383              Materials     2 -2.150295963  2.128219656\n384            Health Care     5 -0.224041953 -0.409947273\n385 Consumer Discretionary     2 -0.534869205  2.053304941\n386            Industrials     2 -1.690308559  0.874260721\n387 Information Technology     9  0.420808496  2.232363883\n388              Utilities     4  2.751497128 -2.890271529\n389       Consumer Staples     5  1.233743047 -1.565415549\n390              Materials     2 -2.328432823  2.268830200\n391              Materials     2 -2.315044829  2.099702426\n392                 Energy     1  4.727440129  2.171658110\n393            Real Estate     4  3.202222946 -6.893049295\n394            Industrials     2 -2.415342221  1.860902783\n395                 Energy     5  4.241418174  1.757744091\n396              Utilities     4  3.056360836 -3.196733948\n397 Consumer Discretionary    10  1.293044845 -0.119159893\n398 Consumer Discretionary     2  0.585093024  0.015514705\n399            Industrials     2 -1.781318071  0.518172170\n400            Industrials     7  0.012437799  1.932307265\n401                 Energy     1  5.127774192  2.096879168\n402             Financials     8 -1.984813655 -2.197495996\n403 Communication Services     9  0.486374408  3.402826872\n404            Real Estate     4  2.973325423 -6.378937063\n405              Utilities     4  2.955646443 -2.925386749\n406             Financials     7 -1.094446954 -1.044948739\n407 Information Technology     9  0.361996073  1.985805493\n408 Information Technology     7  0.414278703  1.457288421\n409       Consumer Staples     7  0.183601917 -0.308971526\n410            Health Care     7 -0.804176315  1.854638352\n411 Consumer Discretionary    10 -0.296064497  1.863608344\n412 Communication Services     5 -0.513786792 -1.368708651\n413                 Energy     1  4.682964373  2.152065409\n414 Consumer Discretionary     7 -0.383943703  1.528884721\n415             Financials     7 -1.122708864 -1.201049952\n416            Real Estate     4  3.113656193 -6.595682257\n417              Utilities     4  2.920084337 -3.029226311\n418              Materials     2 -2.497219157  1.117567240\n419 Communication Services     5 -0.495815709 -1.261736207\n420             Financials     8 -1.841701302 -2.018507553\n421 Consumer Discretionary    10 -1.161066873  2.219975935\n422            Real Estate     4  3.089034521 -6.822432648\n423              Utilities     4  3.194351027 -2.871942762\n424            Industrials     2 -1.506250801  0.513886362\n425             Financials     8 -1.898967369 -2.837895029\n426              Materials     2 -2.121871153  2.334640406\n427            Health Care     5 -0.557788963  0.749694383\n428            Health Care     5 -0.663335510  0.774608558\n429            Industrials     7 -3.306330519  1.250838294\n430 Information Technology     7 -0.179195920  1.948395744\n431                 Energy     1  4.020165442  1.876037662\n432            Industrials     5 -1.337678159 -1.695877102\n433              Materials     2 -2.507483441  1.171483161\n434              Materials     2 -1.845147210  1.167861131\n435 Communication Services     5 -0.678634782 -1.047904555\n436            Industrials     2 -1.342164877  1.165116823\n437 Consumer Discretionary     2 -1.484756899  0.582591472\n438             Financials     7 -1.316530962 -0.897558998\n439              Materials     2 -2.345959496  1.853096456\n440 Consumer Discretionary     2 -1.626586797  0.761403250\n441 Consumer Discretionary     2 -2.299458127  2.019106362\n442            Industrials     2 -2.060945800  0.858504223\n443 Consumer Discretionary     7 -0.188280562  0.695314345\n444 Consumer Discretionary    10 -1.455182777  2.045010407\n445             Financials     8 -1.665368996 -1.262709583\n446 Consumer Discretionary     2 -2.331395655  0.994904620\n447 Information Technology     2 -1.056284516  0.923359008\n448       Consumer Staples    NA           NA           NA\n449            Industrials     2  0.390887895  2.521613959\n450            Industrials     2 -1.889625938  1.414742903\n451            Industrials     2 -2.778028281  0.396301737\n452 Information Technology     9 -1.080261571  3.351043256\n453 Information Technology     7  0.022849472  0.670098942\n454             Financials     8 -2.431834891 -1.727869219\n455            Real Estate     4  2.824873150 -6.752579019\n456            Real Estate     4  3.022944826 -6.586059996\n457             Financials     8 -1.874904255 -1.955835196\n458 Consumer Discretionary    10  1.290385055 -0.040123912\n459            Industrials     2 -2.301233556  0.841953923\n460            Real Estate     4  3.188250184 -6.919701105\n461            Health Care     5 -0.132653538  0.052854686\n462 Consumer Discretionary     2 -1.901868405  0.358255129\n463            Industrials     2 -1.991668468  1.392254228\n464                 Energy     1  4.920799879  2.001695206\n465            Health Care     3 -0.519281513  1.716820018\n466 Information Technology     7 -0.306820044  2.514297910\n467 Consumer Discretionary     2 -2.328930520  0.047934615\n468 Consumer Discretionary    10 -1.286832569  2.240678120\n469 Communication Services     5 -0.669112346 -1.291759415\n470            Industrials     2 -2.363789208  1.407295359\n471 Consumer Discretionary    10  0.844495983  0.477626536\n472 Consumer Discretionary    10 -1.929305208 -2.832201771\n473 Information Technology     2 -0.973114347  0.741919669\n474            Industrials     2 -1.624879571  0.789747282\n475              Materials     2 -0.832247866 -0.146513260\n476 Consumer Discretionary    10 -1.437608997  2.012856848\n477       Consumer Staples     4  2.060378700 -2.043506933\n478             Financials     8 -1.539664682 -2.507223859\n479 Consumer Discretionary    10  1.188459607 -0.150346301\n480            Industrials     2 -2.331970743  1.525199494\n481                 Energy     1  4.758667029  2.001989344\n482 Consumer Discretionary     2 -2.323576642 -1.621659083\n483            Health Care     5 -1.267464900 -1.494524307\n484             Financials     8 -1.699796895 -1.683864839\n485            Industrials     7  0.192204094  0.992569061\n486 Consumer Discretionary     2 -1.572159469  0.835437894\n487             Financials     8 -1.908899440 -2.046106577\n488 Communication Services     9  0.337681280  2.750033263\n489 Information Technology     9 -1.588168614  2.458877173\n490 Consumer Discretionary    10  1.262026877 -0.053703745\n491            Industrials     2 -2.137950607  1.593139686\n492             Financials     7 -1.507842739 -0.912193600\n493 Consumer Discretionary    10  1.280423169 -0.122796257\n494            Industrials     2 -1.916419988  1.730939912\n495             Financials     8 -2.346584472 -1.784762599\n496       Consumer Staples     6  0.581277004  1.566461724\n497 Consumer Discretionary     7 -0.437590322  0.432311672\n498 Communication Services     7 -0.932605919  1.173438041\n499 Consumer Discretionary     6  0.526190605  2.007827757\n500            Real Estate     4  3.189281676 -6.796635394\n501 Communication Services     5 -0.503471690 -1.269616717\n502 Consumer Discretionary     2 -2.252811098  2.128081191\n503 Consumer Discretionary     6  0.007891104  1.805829809\n504 Consumer Discretionary     6  0.045872782  1.754849556\n505 Communication Services     7 -0.840719068  1.062459745\n506                 Energy    NA           NA           NA\n\n\nPlot the K-Means and UMAP results.\n\nBegin with the umap_kmeans_results_tbl\nUse ggplot() mapping V1, V2 and color = .cluster\nAdd the geom_point() geometry with alpha = 0.5\nApply colors as you desire (e.g. scale_color_manual(values = palette_light() %&gt;% rep(3)))\n\n\n# Visualize the combined K-Means and UMAP results\nggplot(umap_kmeans_results_tbl, aes(x = V1, y = V2, color = value)) +\n  geom_point(alpha = 0.5)\n\n\n\n\n\n\n\n\nCongratulations! You are done with the 1st challenge!"
  },
  {
    "objectID": "Chapter_2_Challenge.html",
    "href": "Chapter_2_Challenge.html",
    "title": "MyLabJournal",
    "section": "",
    "text": "# Standard\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Modeling\nlibrary(parsnip)\n\n# Preprocessing & Sampling\nlibrary(recipes)\n\n\nAttache Paket: 'recipes'\n\nDas folgende Objekt ist maskiert 'package:stringr':\n\n    fixed\n\nDas folgende Objekt ist maskiert 'package:stats':\n\n    step\n\nlibrary(rsample)\nlibrary(workflows)\n\n# Modeling Error Metrics\nlibrary(yardstick)\n\n\nAttache Paket: 'yardstick'\n\nDas folgende Objekt ist maskiert 'package:readr':\n\n    spec\n\n# Plotting Decision Trees\nlibrary(rpart.plot)\n\nLade nötiges Paket: rpart\n\nbike_orderlines_tbl &lt;- readRDS(\".\\\\..\\\\Business Decisions with Machine Learning\\\\bike_orderlines.rds\")\nbike_orderlines_tbl &lt;- bike_orderlines_tbl %&gt;% select(!c(total_price, quantity, order_date, order_id, order_line))\n\nsplit &lt;- initial_split(bike_orderlines_tbl, prop = 0.7)\ntrain_data &lt;- training(split)\ntest_data &lt;- testing(split)\n\ndata_recipe &lt;- recipe(price ~ ., data = train_data)\ndata_recipe &lt;- data_recipe %&gt;% step_scale(all_numeric_predictors())\n\nmodel_linear &lt;- linear_reg(mode = \"regression\") %&gt;% \n  set_engine(\"lm\")\n\nworkflow &lt;- workflow() %&gt;%\n  add_recipe(data_recipe) %&gt;%\n  add_model(model_linear)\nworkflow_fit &lt;- workflow %&gt;% fit(data = train_data)\n\nto_predict &lt;- \"price\"\nprediction &lt;- predict(workflow_fit, new_data = test_data)\ntruth &lt;- test_data[[to_predict]]\n\nrmse_value &lt;- rmse_vec(truth, prediction$.pred)\nprint(rmse_value)\n\n[1] 1.721215e-07"
  },
  {
    "objectID": "index.html#challenge-2",
    "href": "index.html#challenge-2",
    "title": "My Lab Journal",
    "section": "Challenge 2",
    "text": "Challenge 2\nCheck https://tuhhstartupengineers-classroom.github.io/ss23-bdml-Graypaw/Chapter_2_Challenge.html"
  },
  {
    "objectID": "index.html#challenge-3",
    "href": "index.html#challenge-3",
    "title": "My Lab Journal",
    "section": "Challenge 3",
    "text": "Challenge 3"
  },
  {
    "objectID": "Chapter_3_Challenge.html",
    "href": "Chapter_3_Challenge.html",
    "title": "MyLabJournal",
    "section": "",
    "text": "data &lt;- read.csv(\"datasets-1067-1925-WA_Fn-UseC_-HR-Employee-Attrition.csv\")\nhead(data)\n\n  Age Attrition    BusinessTravel DailyRate             Department\n1  41       Yes     Travel_Rarely      1102                  Sales\n2  49        No Travel_Frequently       279 Research & Development\n3  37       Yes     Travel_Rarely      1373 Research & Development\n4  33        No Travel_Frequently      1392 Research & Development\n5  27        No     Travel_Rarely       591 Research & Development\n6  32        No Travel_Frequently      1005 Research & Development\n  DistanceFromHome Education EducationField EmployeeCount EmployeeNumber\n1                1         2  Life Sciences             1              1\n2                8         1  Life Sciences             1              2\n3                2         2          Other             1              4\n4                3         4  Life Sciences             1              5\n5                2         1        Medical             1              7\n6                2         2  Life Sciences             1              8\n  EnvironmentSatisfaction Gender HourlyRate JobInvolvement JobLevel\n1                       2 Female         94              3        2\n2                       3   Male         61              2        2\n3                       4   Male         92              2        1\n4                       4 Female         56              3        1\n5                       1   Male         40              3        1\n6                       4   Male         79              3        1\n                JobRole JobSatisfaction MaritalStatus MonthlyIncome MonthlyRate\n1       Sales Executive               4        Single          5993       19479\n2    Research Scientist               2       Married          5130       24907\n3 Laboratory Technician               3        Single          2090        2396\n4    Research Scientist               3       Married          2909       23159\n5 Laboratory Technician               2       Married          3468       16632\n6 Laboratory Technician               4        Single          3068       11864\n  NumCompaniesWorked Over18 OverTime PercentSalaryHike PerformanceRating\n1                  8      Y      Yes                11                 3\n2                  1      Y       No                23                 4\n3                  6      Y      Yes                15                 3\n4                  1      Y      Yes                11                 3\n5                  9      Y       No                12                 3\n6                  0      Y       No                13                 3\n  RelationshipSatisfaction StandardHours StockOptionLevel TotalWorkingYears\n1                        1            80                0                 8\n2                        4            80                1                10\n3                        2            80                0                 7\n4                        3            80                0                 8\n5                        4            80                1                 6\n6                        3            80                0                 8\n  TrainingTimesLastYear WorkLifeBalance YearsAtCompany YearsInCurrentRole\n1                     0               1              6                  4\n2                     3               3             10                  7\n3                     3               3              0                  0\n4                     3               3              8                  7\n5                     3               3              2                  2\n6                     2               2              7                  7\n  YearsSinceLastPromotion YearsWithCurrManager\n1                       0                    5\n2                       1                    7\n3                       0                    0\n4                       3                    0\n5                       2                    2\n6                       3                    6\n\n\n\nboxplot(MonthlyIncome ~ Attrition, data = data, ylab = \"Monthly Income\", xlab = \"Attrition\")\n\n\n\n\n\n\n\n\nClearly the employees with attrition have a much lower monthly income than those without.\n\nboxplot(PercentSalaryHike ~ Attrition, data = data, ylab = \"Percent Salary Hike\", xlab = \"Attrition\")\n\n\n\n\n\n\n\nt.test(PercentSalaryHike ~ Attrition, data = data)\n\n\n    Welch Two Sample t-test\n\ndata:  PercentSalaryHike by Attrition\nt = 0.50424, df = 326.11, p-value = 0.6144\nalternative hypothesis: true difference in means between group No and group Yes is not equal to 0\n95 percent confidence interval:\n -0.3890709  0.6572652\nsample estimates:\n mean in group No mean in group Yes \n         15.23114          15.09705 \n\n\nBoth the boxplot and the t.test point to no significant relation between Percent Salary Hike and Attrition, thus it is difficult to deduce anything.\n\nattrition_yes &lt;- subset(data, Attrition == \"Yes\")\nattrition_no &lt;- subset(data, Attrition == \"No\")\n\n# Count the occurrences of each StockOptionLevel for employees with attrition\nattrition_yes_counts &lt;- table(attrition_yes$StockOptionLevel)\n\n# Count the occurrences of each StockOptionLevel for employees without attrition\nattrition_no_counts &lt;- table(attrition_no$StockOptionLevel)\n\n# Combine the counts into a data frame\nplot_data &lt;- data.frame(\n  StockOptionLevel = factor(1:4),\n  Attrition = \"Yes\",\n  Count = attrition_yes_counts,\n  stringsAsFactors = FALSE\n)\nplot_data &lt;- rbind(\n  plot_data,\n  data.frame(\n    StockOptionLevel = factor(1:4),\n    Attrition = \"No\",\n    Count = attrition_no_counts,\n    stringsAsFactors = FALSE\n  )\n)\n\n# Create the stacked bar plot\nlibrary(ggplot2)\nggplot(plot_data, aes(x = StockOptionLevel, y = Count.Freq, fill = Attrition)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  labs(x = \"Stock Option Level\", y = \"Count\", fill = \"Attrition\")\n\n\n\n\n\n\n\n\nThe employees leaving the company appear to have a higher stock option level than those that are staying. However an overwhelming amount of data is pointing towards a lower stock option level in general.\n\n# Count the occurrences of each Environment Satisfaction level for employees with attrition\nattrition_yes_counts &lt;- table(attrition_yes$EnvironmentSatisfaction)\n\n# Count the occurrences of each Environment Satisfaction level for employees without attrition\nattrition_no_counts &lt;- table(attrition_no$EnvironmentSatisfaction)\n\n# Combine the counts into a data frame\nplot_data &lt;- data.frame(\n  EnvironmentSatisfaction = factor(1:4),\n  Attrition = \"Yes\",\n  Count = attrition_yes_counts,\n  stringsAsFactors = FALSE\n)\nplot_data &lt;- rbind(\n  plot_data,\n  data.frame(\n    EnvironmentSatisfaction = factor(1:4),\n    Attrition = \"No\",\n    Count = attrition_no_counts,\n    stringsAsFactors = FALSE\n  )\n)\n\n# Create the stacked bar plot\nlibrary(ggplot2)\nggplot(plot_data, aes(x = EnvironmentSatisfaction, y = Count.Freq, fill = Attrition)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  labs(x = \"Environment Satisfaction\", y = \"Count\", fill = \"Attrition\")\n\n\n\n\n\n\n\n\nIt is difficult to determine anything about the interaction between Environment Satisfaction and Attrition based on this visualization.\n\n# Count the occurrences of each WorkLifeBalance level for employees with attrition\nattrition_yes_counts &lt;- table(attrition_yes$WorkLifeBalance)\n\n# Count the occurrences of each WorkLifeBalance level for employees without attrition\nattrition_no_counts &lt;- table(attrition_no$WorkLifeBalance)\n\n# Combine the counts into a data frame\nplot_data &lt;- data.frame(\n  WorkLifeBalance = factor(1:4),\n  Attrition = \"Yes\",\n  Count = attrition_yes_counts,\n  stringsAsFactors = FALSE\n)\nplot_data &lt;- rbind(\n  plot_data,\n  data.frame(\n    WorkLifeBalance = factor(1:4),\n    Attrition = \"No\",\n    Count = attrition_no_counts,\n    stringsAsFactors = FALSE\n  )\n)\n\n# Create the stacked bar plot\nlibrary(ggplot2)\nggplot(plot_data, aes(x = WorkLifeBalance, y = Count.Freq, fill = Attrition)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  labs(x = \"Work-Life Balance\", y = \"Count\", fill = \"Attrition\")\n\n\n\n\n\n\n\n\nWhile it is also here a bit difficult to determine anything it seems like employees without attrition are slightly more present in the higher levels of work-life balance compared to employees with attrition.\n\n# Count the occurrences of each JobInvolvement level for employees with attrition\nattrition_yes_counts &lt;- table(attrition_yes$JobInvolvement)\n\n# Count the occurrences of each JobInvolvement level for employees without attrition\nattrition_no_counts &lt;- table(attrition_no$JobInvolvement)\n\n# Combine the counts into a data frame\nplot_data &lt;- data.frame(\n  JobInvolvement = factor(1:4),\n  Attrition = \"Yes\",\n  Count = attrition_yes_counts,\n  stringsAsFactors = FALSE\n)\nplot_data &lt;- rbind(\n  plot_data,\n  data.frame(\n    JobInvolvement = factor(1:4),\n    Attrition = \"No\",\n    Count = attrition_no_counts,\n    stringsAsFactors = FALSE\n  )\n)\n\n# Create the stacked bar plot\nlibrary(ggplot2)\nggplot(plot_data, aes(x = JobInvolvement, y = Count.Freq, fill = Attrition)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  labs(x = \"Job Involvement\", y = \"Count\", fill = \"Attrition\")\n\n\n\n\n\n\n\n\nThe plot for Job Involvement seems to be almost the same as for Work-Life Balance, just that the people without attrition are even more predominant in the higher levels now compared to the people with attrition.\n\n# Count the occurrences of OverTime for employees with attrition\nattrition_yes_counts &lt;- table(attrition_yes$OverTime)\n\n# Count the occurrences of OverTime for employees without attrition\nattrition_no_counts &lt;- table(attrition_no$OverTime)\n\n# Combine the counts into a data frame\nplot_data &lt;- data.frame(\n  OverTime = factor(c(\"No\", \"Yes\")),\n  Attrition = \"Yes\",\n  Count = attrition_yes_counts,\n  stringsAsFactors = FALSE\n)\nplot_data &lt;- rbind(\n  plot_data,\n  data.frame(\n    OverTime = factor(c(\"No\", \"Yes\")),\n    Attrition = \"No\",\n    Count = attrition_no_counts,\n    stringsAsFactors = FALSE\n  )\n)\n\n# Create the stacked bar plot\nlibrary(ggplot2)\nggplot(plot_data, aes(x = OverTime, y = Count.Freq, fill = Attrition)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  labs(x = \"OverTime\", y = \"Count\", fill = \"Attrition\")\n\n\n\n\n\n\n\n\nVery clearly the people without attrition are working much less overtime than the people with attrition. Reduce the overtime for sure.\n\nggplot(data, aes(x = Attrition, y = TrainingTimesLastYear)) +\n  geom_boxplot() +\n  labs(x = \"Attrition\", y = \"Training Times Last Year\")\n\n\n\n\n\n\n\n\nIt is very difficult to deduce anything based on this visualization…\n\n# Create the box plot\nlibrary(ggplot2)\nggplot(data, aes(x = Attrition, y = YearsAtCompany)) +\n  geom_boxplot() +\n  labs(x = \"Attrition\", y = \"Years at Company\")\n\n\n\n\n\n\n\n\nGenerally the people without attrition are at the company for longer already than the ones with attrition.\n\n# Create the box plot\nlibrary(ggplot2)\nggplot(data, aes(x = Attrition, y = YearsSinceLastPromotion)) +\n  geom_boxplot() +\n  labs(x = \"Attrition\", y = \"Years Since Last Promotion\")\n\n\n\n\n\n\n\nresult &lt;- t.test(YearsSinceLastPromotion ~ Attrition, data = data)\nresult\n\n\n    Welch Two Sample t-test\n\ndata:  YearsSinceLastPromotion by Attrition\nt = 1.2879, df = 338.49, p-value = 0.1987\nalternative hypothesis: true difference in means between group No and group Yes is not equal to 0\n95 percent confidence interval:\n -0.1525043  0.7309843\nsample estimates:\n mean in group No mean in group Yes \n         2.234388          1.945148 \n\n\nNo significant deduction is possible from this visualization even though by the t.test the mean for employees without attrition is higher. This probably means that the years since last promotion hold less significance for attrition than other factors."
  },
  {
    "objectID": "Chapter_5_Challenge.html",
    "href": "Chapter_5_Challenge.html",
    "title": "MyLabJournal",
    "section": "",
    "text": "Load dataset\n\ndataset &lt;- read.csv(\"product_backorders.csv\")\n\nPreprocessing\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(recipes)\n\n\nAttache Paket: 'recipes'\n\nDas folgende Objekt ist maskiert 'package:stringr':\n\n    fixed\n\nDas folgende Objekt ist maskiert 'package:stats':\n\n    step\n\ndata_recipe &lt;- recipe(went_on_backorder ~ ., data = dataset) %&gt;%\n  step_dummy(all_nominal(), -all_outcomes()) %&gt;%\n  step_zv(all_predictors()) %&gt;%\n  step_normalize(all_predictors()) %&gt;%\n  prep()\n\nprepared_data &lt;- bake(data_recipe, new_data = dataset)\n\nSplitting into training and testing\n\nlibrary(rsample)\nlibrary(h2o)\n\n\n----------------------------------------------------------------------\n\nYour next step is to start H2O:\n    &gt; h2o.init()\n\nFor H2O package documentation, ask for help:\n    &gt; ??h2o\n\nAfter starting H2O, you can use the Web UI at http://localhost:54321\nFor more information visit https://docs.h2o.ai\n\n----------------------------------------------------------------------\n\n\n\nAttache Paket: 'h2o'\n\n\nDie folgenden Objekte sind maskiert von 'package:lubridate':\n\n    day, hour, month, week, year\n\n\nDie folgenden Objekte sind maskiert von 'package:stats':\n\n    cor, sd, var\n\n\nDie folgenden Objekte sind maskiert von 'package:base':\n\n    %*%, %in%, &&, ||, apply, as.factor, as.numeric, colnames,\n    colnames&lt;-, ifelse, is.character, is.factor, is.numeric, log,\n    log10, log1p, log2, round, signif, trunc\n\nh2o.init()\n\n\nH2O is not running yet, starting it now...\n\nNote:  In case of errors look at the following log files:\n    C:\\Users\\jakbo\\AppData\\Local\\Temp\\RtmpiW5lX5\\file2f645491559f/h2o_jakbo_started_from_r.out\n    C:\\Users\\jakbo\\AppData\\Local\\Temp\\RtmpiW5lX5\\file2f6444b28f5/h2o_jakbo_started_from_r.err\n\n\nStarting H2O JVM and connecting:  Connection successful!\n\nR is connected to the H2O cluster: \n    H2O cluster uptime:         3 seconds 496 milliseconds \n    H2O cluster timezone:       Europe/Berlin \n    H2O data parsing timezone:  UTC \n    H2O cluster version:        3.40.0.4 \n    H2O cluster version age:    1 month and 17 days \n    H2O cluster name:           H2O_started_from_R_jakbo_sss762 \n    H2O cluster total nodes:    1 \n    H2O cluster total memory:   3.53 GB \n    H2O cluster total cores:    8 \n    H2O cluster allowed cores:  8 \n    H2O cluster healthy:        TRUE \n    H2O Connection ip:          localhost \n    H2O Connection port:        54321 \n    H2O Connection proxy:       NA \n    H2O Internal Security:      FALSE \n    R Version:                  R version 4.3.0 (2023-04-21 ucrt) \n\nsplit_h2o &lt;- h2o.splitFrame(as.h2o(prepared_data), ratios = c(0.85))\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n\ntrain_h2o &lt;- split_h2o[[1]]\nvalid_h2o &lt;- split_h2o[[2]]\n\nSpecifying variables\n\n# Set the target and predictors\ny &lt;- \"went_on_backorder\"\nx &lt;- setdiff(names(train_h2o), y)\n\nGet h2o and start auto-ML-ing\n\nautoml &lt;- h2o.automl(\n  x = x,\n  y = y,\n  training_frame = train_h2o,\n  validation_frame = valid_h2o,\n  max_runtime_secs = 60,\n  nfolds = 5\n)\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=                                                                     |   2%\n02:09:00.878: User specified a validation frame with cross-validation still enabled. Please note that the models will still be validated using cross-validation only, the validation frame will be used to provide purely informative validation metrics on the trained models.\n02:09:00.893: AutoML: XGBoost is not available; skipping it.\n  |                                                                            \n  |====                                                                  |   5%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |=====================                                                 |  31%\n  |                                                                            \n  |========================                                              |  34%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |==================================                                    |  48%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |======================================                                |  55%\n  |                                                                            \n  |=========================================                             |  58%\n  |                                                                            \n  |===========================================                           |  62%\n  |                                                                            \n  |==============================================                        |  65%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |===================================================                   |  72%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |========================================================              |  79%\n  |                                                                            \n  |==========================================================            |  83%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |====================================================================  |  97%\n  |                                                                            \n  |======================================================================| 100%\n\n\nGet some info about the results\n\nleaderboard &lt;- automl@leaderboard\nleaderboard\n\n                                                model_id       auc   logloss\n1    StackedEnsemble_AllModels_2_AutoML_1_20230615_20900 0.9558697 0.1642291\n2 StackedEnsemble_BestOfFamily_3_AutoML_1_20230615_20900 0.9554637 0.1655136\n3    StackedEnsemble_AllModels_1_AutoML_1_20230615_20900 0.9551328 0.1651169\n4 StackedEnsemble_BestOfFamily_2_AutoML_1_20230615_20900 0.9548012 0.1665928\n5                          GBM_4_AutoML_1_20230615_20900 0.9526630 0.1715915\n6                          GBM_3_AutoML_1_20230615_20900 0.9508368 0.1731715\n      aucpr mean_per_class_error      rmse        mse\n1 0.7598670            0.1445852 0.2216930 0.04914778\n2 0.7543325            0.1358076 0.2223946 0.04945934\n3 0.7584030            0.1630633 0.2224688 0.04949236\n4 0.7522492            0.1450006 0.2233598 0.04988962\n5 0.7397641            0.1519742 0.2266921 0.05138933\n6 0.7378238            0.1638846 0.2270788 0.05156477\n\n[15 rows x 7 columns] \n\n\n\ndata_transformed_tbl &lt;- leaderboard %&gt;%\n        as_tibble() %&gt;%\n        select(-c(aucpr, mean_per_class_error, rmse, mse)) %&gt;% \n        mutate(model_type = str_extract(model_id, \"[^_]+\")) %&gt;%\n        slice(1:15) %&gt;% \n        rownames_to_column(var = \"rowname\") %&gt;%\n        # Visually this step will not change anything\n        # It reorders the factors under the hood\n        mutate(\n          model_id   = as_factor(model_id) %&gt;% reorder(auc),\n          model_type = as.factor(model_type)\n          ) %&gt;% \n          pivot_longer(cols = -c(model_id, model_type, rowname), \n                       names_to = \"key\", \n                       values_to = \"value\", \n                       names_transform = list(key = forcats::fct_inorder)\n                       ) %&gt;% \n        mutate(model_id = paste0(rowname, \". \", model_id) %&gt;% as_factor() %&gt;% fct_rev())\n\ndata_transformed_tbl %&gt;%\n        ggplot(aes(value, model_id, color = model_type)) +\n        geom_point(size = 3) +\n        geom_label(aes(label = round(value, 2), hjust = \"inward\")) +\n        \n        # Facet to break out logloss and auc\n        facet_wrap(~ key, scales = \"free_x\") +\n        labs(title = \"Leaderboard Metrics\",\n             subtitle = paste0(\"Ordered by: \", \"auc\"),\n             y = \"Model Postion, Model ID\", x = \"\") + \n        theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\ngrid_01 &lt;- h2o.grid(\n\n    # See help page for available algos\n    algorithm = \"deeplearning\",\n    \n    # I just use the same as the object\n    grid_id = \"grid_01\",\n    \n    # The following is for ?h2o.deeplearning()\n    # predictor and response variables\n    x = x,\n    y = y,\n    \n    # training and validation frame and crossfold validation\n    training_frame   = train_h2o,\n    validation_frame = valid_h2o,\n    nfolds = 5,\n    \n    # Hyperparamters: Use deeplearning_h2o@allparameters to see all\n    hyper_params = list(\n        # Use some combinations (the first one was the original)\n        hidden = list(c(10, 10, 10), c(50, 20, 10), c(20, 20, 20)),\n        epochs = c(10, 50, 100)\n    )\n)\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n\n\nOutput results\n\ngrid_01\n\nH2O Grid Details\n================\n\nGrid ID: grid_01 \nUsed hyper parameters: \n  -  epochs \n  -  hidden \nNumber of models: 9 \nNumber of failed models: 0 \n\nHyper-Parameter Search Summary: ordered by increasing logloss\n     epochs       hidden       model_ids logloss\n1  10.39664 [50, 20, 10] grid_01_model_4 0.55442\n2  10.40684 [10, 10, 10] grid_01_model_1 0.83789\n3  52.01498 [20, 20, 20] grid_01_model_8 0.88825\n4 104.81117 [20, 20, 20] grid_01_model_9 1.04452\n5  10.39846 [20, 20, 20] grid_01_model_7 1.20611\n6  52.00752 [50, 20, 10] grid_01_model_5 1.23357\n7 104.78753 [10, 10, 10] grid_01_model_3 1.57944\n8 104.80448 [50, 20, 10] grid_01_model_6 2.21182\n9  51.99366 [10, 10, 10] grid_01_model_2 2.21955\n\n\nLoad model\n\nmodel &lt;- h2o.loadModel(\"leadermodel_h2o\\\\StackedEnsemble_AllModels_4_AutoML_11_20230615_00001\")\nperformance_h2o &lt;- h2o.performance(model, newdata = as.h2o(valid_h2o))\nperformance_tbl &lt;- performance_h2o %&gt;%\n    h2o.metric() %&gt;%\n    as_tibble() \n\nLook at precision vs recall visualization\n\nperformance_tbl %&gt;%\n    filter(f1 == max(f1))\n\n# A tibble: 1 × 20\n  threshold    f1    f2 f0point5 accuracy precision recall specificity\n      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;       &lt;dbl&gt;\n1     0.303 0.935 0.927    0.943    0.984     0.949  0.922       0.993\n# ℹ 12 more variables: absolute_mcc &lt;dbl&gt;, min_per_class_accuracy &lt;dbl&gt;,\n#   mean_per_class_accuracy &lt;dbl&gt;, tns &lt;dbl&gt;, fns &lt;dbl&gt;, fps &lt;dbl&gt;, tps &lt;dbl&gt;,\n#   tnr &lt;dbl&gt;, fnr &lt;dbl&gt;, fpr &lt;dbl&gt;, tpr &lt;dbl&gt;, idx &lt;int&gt;\n\nperformance_tbl %&gt;%\n    ggplot(aes(x = threshold)) +\n    geom_line(aes(y = precision), color = \"blue\", size = 1) +\n    geom_line(aes(y = recall), color = \"red\", size = 1) +\n    \n    # Insert line where precision and recall are harmonically optimized\n    geom_vline(xintercept = h2o.find_threshold_by_max_metric(performance_h2o, \"f1\")) +\n    labs(title = \"Precision vs Recall\", y = \"value\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nROC plot\n\npath &lt;- \"leadermodel_h2o\\\\StackedEnsemble_AllModels_4_AutoML_11_20230615_00001\"\n\nload_model_performance_metrics &lt;- function(path, valid_h2o) {\n    \n    model_h2o &lt;- h2o.loadModel(path)\n    perf_h2o  &lt;- h2o.performance(model_h2o, newdata = as.h2o(valid_h2o)) \n    \n    perf_h2o %&gt;%\n        h2o.metric() %&gt;%\n        as_tibble() %&gt;%\n        mutate(auc = h2o.auc(perf_h2o)) %&gt;%\n        select(tpr, fpr, auc)\n    \n}\n\nmodel_metrics_tbl &lt;- fs::dir_info(path = \"leadermodel_h2o\\\\\") %&gt;%\n    select(path) %&gt;%\n    mutate(metrics = map(path, load_model_performance_metrics, valid_h2o)) %&gt;%\n    unnest(cols = metrics)\n\nmodel_metrics_tbl %&gt;%\n    mutate(\n        # Extract the model names\n        path = str_split(path, pattern = \"/\", simplify = T)[,1] %&gt;% as_factor(),\n        auc  = auc %&gt;% round(3) %&gt;% as.character() %&gt;% as_factor()\n        ) %&gt;%\n    ggplot(aes(fpr, tpr, color = path, linetype = auc)) +\n    geom_line(size = 1) +\n    \n    # just for demonstration purposes\n    geom_abline(color = \"red\", linetype = \"dotted\") +\n    \n    labs(\n        title = \"ROC Plot\",\n        subtitle = \"Performance of Top Performing Model\"\n    )\n\n\n\n\n\n\n\n\n\n# Precision vs Recall\n\nload_model_performance_metrics &lt;- function(path, test_tbl) {\n    \n    model_h2o &lt;- h2o.loadModel(path)\n    perf_h2o  &lt;- h2o.performance(model_h2o, newdata = as.h2o(test_tbl)) \n    \n    perf_h2o %&gt;%\n        h2o.metric() %&gt;%\n        as_tibble() %&gt;%\n        mutate(auc = h2o.auc(perf_h2o)) %&gt;%\n        select(tpr, fpr, auc, precision, recall)\n    \n}\n\nmodel_metrics_tbl &lt;- fs::dir_info(path = \"leadermodel_h2o\\\\\") %&gt;%\n    select(path) %&gt;%\n    mutate(metrics = map(path, load_model_performance_metrics, valid_h2o)) %&gt;%\n    unnest(cols = metrics)\n\nmodel_metrics_tbl %&gt;%\n    mutate(\n        path = str_split(path, pattern = \"/\", simplify = T)[,1] %&gt;% as_factor(),\n        auc  = auc %&gt;% round(3) %&gt;% as.character() %&gt;% as_factor()\n    ) %&gt;%\n    ggplot(aes(recall, precision, color = path, linetype = auc)) +\n    geom_line(size = 1) +\n    labs(\n        title = \"Precision vs Recall Plot\",\n        subtitle = \"Performance of Top Performing Model\"\n    )\n\n\n\n\n\n\n\n\nGain\n\ngain_lift_tbl &lt;- performance_h2o %&gt;%\n    h2o.gainsLift() %&gt;%\n    as.tibble()\n\nWarning: `as.tibble()` was deprecated in tibble 2.0.0.\nℹ Please use `as_tibble()` instead.\nℹ The signature and semantics have changed, see `?as_tibble`.\n\n## Gain Chart\n\ngain_transformed_tbl &lt;- gain_lift_tbl %&gt;% \n    select(group, cumulative_data_fraction, cumulative_capture_rate, cumulative_lift) %&gt;%\n    select(-contains(\"lift\")) %&gt;%\n    mutate(baseline = cumulative_data_fraction) %&gt;%\n    rename(gain     = cumulative_capture_rate) %&gt;%\n    # prepare the data for the plotting (for the color and group aesthetics)\n    pivot_longer(cols = c(gain, baseline), values_to = \"value\", names_to = \"key\")\n\ngain_transformed_tbl %&gt;%\n    ggplot(aes(x = cumulative_data_fraction, y = value, color = key)) +\n    geom_line(size = 1.5) +\n    labs(\n        title = \"Gain Chart\",\n        x = \"Cumulative Data Fraction\",\n        y = \"Gain\"\n    )\n\n\n\n\n\n\n\n\nLift\n\n## Lift Plot\n\nlift_transformed_tbl &lt;- gain_lift_tbl %&gt;% \n    select(group, cumulative_data_fraction, cumulative_capture_rate, cumulative_lift) %&gt;%\n    select(-contains(\"capture\")) %&gt;%\n    mutate(baseline = 1) %&gt;%\n    rename(lift = cumulative_lift) %&gt;%\n    pivot_longer(cols = c(lift, baseline), values_to = \"value\", names_to = \"key\")\n\nlift_transformed_tbl %&gt;%\n    ggplot(aes(x = cumulative_data_fraction, y = value, color = key)) +\n    geom_line(size = 1.5) +\n    labs(\n        title = \"Lift Chart\",\n        x = \"Cumulative Data Fraction\",\n        y = \"Lift\"\n    )"
  },
  {
    "objectID": "Chapter_6_Challenge.html",
    "href": "Chapter_6_Challenge.html",
    "title": "MyLabJournal",
    "section": "",
    "text": "Libraries\n\nlibrary(h2o)\n\n\n----------------------------------------------------------------------\n\nYour next step is to start H2O:\n    &gt; h2o.init()\n\nFor H2O package documentation, ask for help:\n    &gt; ??h2o\n\nAfter starting H2O, you can use the Web UI at http://localhost:54321\nFor more information visit https://docs.h2o.ai\n\n----------------------------------------------------------------------\n\n\n\nAttache Paket: 'h2o'\n\n\nDie folgenden Objekte sind maskiert von 'package:stats':\n\n    cor, sd, var\n\n\nDie folgenden Objekte sind maskiert von 'package:base':\n\n    %*%, %in%, &&, ||, apply, as.factor, as.numeric, colnames,\n    colnames&lt;-, ifelse, is.character, is.factor, is.numeric, log,\n    log10, log1p, log2, round, signif, trunc\n\nlibrary(recipes)\n\nLade nötiges Paket: dplyr\n\n\n\nAttache Paket: 'dplyr'\n\n\nDie folgenden Objekte sind maskiert von 'package:stats':\n\n    filter, lag\n\n\nDie folgenden Objekte sind maskiert von 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\nAttache Paket: 'recipes'\n\n\nDas folgende Objekt ist maskiert 'package:stats':\n\n    step\n\nlibrary(readxl)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.4\n✔ ggplot2   3.4.2     ✔ stringr   1.5.0\n✔ lubridate 1.9.2     ✔ tibble    3.2.1\n✔ purrr     1.0.1     ✔ tidyr     1.3.0\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ lubridate::day()   masks h2o::day()\n✖ dplyr::filter()    masks stats::filter()\n✖ stringr::fixed()   masks recipes::fixed()\n✖ lubridate::hour()  masks h2o::hour()\n✖ dplyr::lag()       masks stats::lag()\n✖ lubridate::month() masks h2o::month()\n✖ lubridate::week()  masks h2o::week()\n✖ lubridate::year()  masks h2o::year()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tidyquant)\n\nLade nötiges Paket: PerformanceAnalytics\nLade nötiges Paket: xts\nLade nötiges Paket: zoo\n\nAttache Paket: 'zoo'\n\nDie folgenden Objekte sind maskiert von 'package:base':\n\n    as.Date, as.Date.numeric\n\n\n######################### Warning from 'xts' package ##########################\n#                                                                             #\n# The dplyr lag() function breaks how base R's lag() function is supposed to  #\n# work, which breaks lag(my_xts). Calls to lag(my_xts) that you type or       #\n# source() into this session won't work correctly.                            #\n#                                                                             #\n# Use stats::lag() to make sure you're not using dplyr::lag(), or you can add #\n# conflictRules('dplyr', exclude = 'lag') to your .Rprofile to stop           #\n# dplyr from breaking base R's lag() function.                                #\n#                                                                             #\n# Code in packages is not affected. It's protected by R's namespace mechanism #\n# Set `options(xts.warn_dplyr_breaks_lag = FALSE)` to suppress this warning.  #\n#                                                                             #\n###############################################################################\n\nAttache Paket: 'xts'\n\nDie folgenden Objekte sind maskiert von 'package:dplyr':\n\n    first, last\n\n\nAttache Paket: 'PerformanceAnalytics'\n\nDas folgende Objekt ist maskiert 'package:graphics':\n\n    legend\n\nLade nötiges Paket: quantmod\nLade nötiges Paket: TTR\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\nlibrary(lime)\n\n\nAttache Paket: 'lime'\n\nDas folgende Objekt ist maskiert 'package:dplyr':\n\n    explain\n\n\nPlot_Features function\n\nplot_features &lt;- function(data) {\n  numeric_cols &lt;- sapply(data, is.numeric)\n  \n  # Compute the mean importance across rows\n  mean_importance &lt;- colMeans(data[, numeric_cols, drop = FALSE])\n\n  # Create a data frame for plotting\n  plot_data &lt;- data.frame(\n    Feature = colnames(data)[numeric_cols],\n    Importance = mean_importance\n  )\n\n  # Sort the features by importance\n  plot_data &lt;- plot_data[order(plot_data$Importance, decreasing = TRUE), ]\n\n  # Plot the feature importance using ggplot\n  ggplot(data = plot_data, aes(x = reorder(Feature, Importance), y = Importance)) +\n    geom_bar(stat = \"identity\", fill = \"steelblue\") +\n    xlab(\"Feature\") +\n    ylab(\"Importance\") +\n    ggtitle(\"Feature Importance\") +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n}\n\n\ndataset &lt;- read.csv(\"product_backorders.csv\")\n\ndata_recipe &lt;- recipe(went_on_backorder ~ ., data = dataset) %&gt;%\n  step_dummy(all_nominal(), -all_outcomes()) %&gt;%\n  step_zv(all_predictors()) %&gt;%\n  step_normalize(all_predictors()) %&gt;%\n  prep()\n\nprepared_data &lt;- bake(data_recipe, new_data = dataset)\n\nh2o.init()\n\n Connection successful!\n\nR is connected to the H2O cluster: \n    H2O cluster uptime:         18 minutes 4 seconds \n    H2O cluster timezone:       Europe/Berlin \n    H2O data parsing timezone:  UTC \n    H2O cluster version:        3.40.0.4 \n    H2O cluster version age:    1 month and 17 days \n    H2O cluster name:           H2O_started_from_R_jakbo_whs664 \n    H2O cluster total nodes:    1 \n    H2O cluster total memory:   3.15 GB \n    H2O cluster total cores:    8 \n    H2O cluster allowed cores:  8 \n    H2O cluster healthy:        TRUE \n    H2O Connection ip:          localhost \n    H2O Connection port:        54321 \n    H2O Connection proxy:       NA \n    H2O Internal Security:      FALSE \n    R Version:                  R version 4.3.0 (2023-04-21 ucrt) \n\nsplit_h2o &lt;- h2o.splitFrame(as.h2o(prepared_data), ratios = c(0.85))\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n\ntrain_h2o &lt;- split_h2o[[1]]\nvalid_h2o &lt;- split_h2o[[2]]\n\nautoml_leader &lt;- h2o.loadModel(\"leadermodel_h2o\\\\StackedEnsemble_AllModels_4_AutoML_11_20230615_00001\")\n\nexplainer &lt;- as_tibble(train_h2o) %&gt;%\n    select(-went_on_backorder) %&gt;%\n    lime(\n        model           = automl_leader,\n        bin_continuous  = TRUE,\n        n_bins          = 4,\n        quantile_bins   = TRUE\n    )\n\nWarning: in_transit_qty does not contain enough variance to use quantile\nbinning. Using standard binning instead.\n\n\nWarning: pieces_past_due does not contain enough variance to use quantile\nbinning. Using standard binning instead.\n\n\nWarning: local_bo_qty does not contain enough variance to use quantile binning.\nUsing standard binning instead.\n\n\nWarning: potential_issue_Yes does not contain enough variance to use quantile\nbinning. Using standard binning instead.\n\n\nWarning: deck_risk_Yes does not contain enough variance to use quantile\nbinning. Using standard binning instead.\n\n\nWarning: oe_constraint_Yes does not contain enough variance to use quantile\nbinning. Using standard binning instead.\n\n\nWarning: ppap_risk_Yes does not contain enough variance to use quantile\nbinning. Using standard binning instead.\n\n\nWarning: stop_auto_buy_Yes does not contain enough variance to use quantile\nbinning. Using standard binning instead.\n\n\nWarning: rev_stop_Yes does not contain enough variance to use quantile binning.\nUsing standard binning instead.\n\n\n\nexplanation &lt;- as_tibble(valid_h2o) %&gt;%\n    slice(1) %&gt;%\n    select(-went_on_backorder) %&gt;%\n    lime::explain(\n    \n        # Pass our explainer object\n        explainer = explainer,\n        # Because it is a binary classification model: 1\n        n_labels   = 1,\n        # number of features to be returned\n        n_features = 8,\n        # number of localized linear models\n        n_permutations = 5000,\n        # Let's start with 1\n        kernel_width   = 1\n    )\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n\n\n\nexplanation %&gt;% \n  as.tibble()\n\nWarning: `as.tibble()` was deprecated in tibble 2.0.0.\nℹ Please use `as_tibble()` instead.\nℹ The signature and semantics have changed, see `?as_tibble`.\n\n\n# A tibble: 8 × 13\n  model_type    case  label label_prob model_r2 model_intercept model_prediction\n  &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;      &lt;dbl&gt;    &lt;dbl&gt;           &lt;dbl&gt;            &lt;dbl&gt;\n1 classificati… 1     No         0.650    0.339           0.805            0.651\n2 classificati… 1     No         0.650    0.339           0.805            0.651\n3 classificati… 1     No         0.650    0.339           0.805            0.651\n4 classificati… 1     No         0.650    0.339           0.805            0.651\n5 classificati… 1     No         0.650    0.339           0.805            0.651\n6 classificati… 1     No         0.650    0.339           0.805            0.651\n7 classificati… 1     No         0.650    0.339           0.805            0.651\n8 classificati… 1     No         0.650    0.339           0.805            0.651\n# ℹ 6 more variables: feature &lt;chr&gt;, feature_value &lt;dbl&gt;, feature_weight &lt;dbl&gt;,\n#   feature_desc &lt;chr&gt;, data &lt;list&gt;, prediction &lt;list&gt;\n\ncase_1 &lt;- explanation %&gt;%\n    filter(case == 1)\n\ncase_1 %&gt;%\n    plot_features()\n\n\n\n\n\n\n\n\nOther function\n\nplot_explanations &lt;- function(data) {\n  # Convert non-numeric columns to factors\n  non_numeric_cols &lt;- sapply(data, function(x) !is.numeric(x))\n  data[, non_numeric_cols] &lt;- lapply(data[, non_numeric_cols], as.factor)\n\n  # Convert data to long format\n  data_long &lt;- tidyr::gather(data, key = \"Feature\", value = \"Importance\")\n\n  # Plot the explanations using ggplot\n  ggplot(data = data_long, aes(x = Feature, y = as.numeric(factor(1)), fill = Importance)) +\n    geom_tile() +\n    xlab(\"Feature\") +\n    ylab(\"\") +\n    ggtitle(\"Feature Importances\") +\n    scale_fill_gradient(low = \"white\", high = \"steelblue\") +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1),\n          panel.grid.major = element_blank(),\n          panel.grid.minor = element_blank()) +\n    facet_wrap(~ Feature, scales = \"free\", ncol = 2)\n}"
  },
  {
    "objectID": "Chapter_4_Challenge.html",
    "href": "Chapter_4_Challenge.html",
    "title": "MyLabJournal",
    "section": "",
    "text": "Load dataset\n\ndataset &lt;- read.csv(\"product_backorders.csv\")\n\nPreprocessing\n\nlibrary(tidyverse)\nlibrary(recipes)\n\ndata_recipe &lt;- recipe(went_on_backorder ~ ., data = dataset) %&gt;%\n  step_dummy(all_nominal(), -all_outcomes()) %&gt;%\n  step_zv(all_predictors()) %&gt;%\n  step_normalize(all_predictors()) %&gt;%\n  prep()\n\nprepared_data &lt;- bake(data_recipe, new_data = dataset)\n\nSplitting into training and testing\n\nlibrary(rsample)\nlibrary(h2o)\n\nh2o.init()\n\n Connection successful!\n\nR is connected to the H2O cluster: \n    H2O cluster uptime:         18 minutes 54 seconds \n    H2O cluster timezone:       Europe/Berlin \n    H2O data parsing timezone:  UTC \n    H2O cluster version:        3.40.0.4 \n    H2O cluster version age:    1 month and 17 days \n    H2O cluster name:           H2O_started_from_R_jakbo_whs664 \n    H2O cluster total nodes:    1 \n    H2O cluster total memory:   3.15 GB \n    H2O cluster total cores:    8 \n    H2O cluster allowed cores:  8 \n    H2O cluster healthy:        TRUE \n    H2O Connection ip:          localhost \n    H2O Connection port:        54321 \n    H2O Connection proxy:       NA \n    H2O Internal Security:      FALSE \n    R Version:                  R version 4.3.0 (2023-04-21 ucrt) \n\nsplit_h2o &lt;- h2o.splitFrame(as.h2o(prepared_data), ratios = c(0.85))\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n\ntrain_h2o &lt;- split_h2o[[1]]\nvalid_h2o &lt;- split_h2o[[2]]\n\nSpecifying variables\n\n# Set the target and predictors\ny &lt;- \"went_on_backorder\"\nx &lt;- setdiff(names(train_h2o), y)\n\nGet h2o and start auto-ML-ing\n\nautoml &lt;- h2o.automl(\n  x = x,\n  y = y,\n  training_frame = train_h2o,\n  validation_frame = valid_h2o,\n  max_runtime_secs = 300,\n  nfolds = 5\n)\n\n\n  |                                                                            \n  |                                                                      |   0%\n02:34:03.803: User specified a validation frame with cross-validation still enabled. Please note that the models will still be validated using cross-validation only, the validation frame will be used to provide purely informative validation metrics on the trained models.\n02:34:03.817: AutoML: XGBoost is not available; skipping it.\n  |                                                                            \n  |==                                                                    |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |===                                                                   |   5%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |=====                                                                 |   8%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |========                                                              |  12%\n  |                                                                            \n  |=========                                                             |  12%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |==========                                                            |  15%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |==============                                                        |  19%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |===============                                                       |  21%\n  |                                                                            \n  |===============                                                       |  22%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |====================                                                  |  28%\n  |                                                                            \n  |====================                                                  |  29%\n  |                                                                            \n  |=====================                                                 |  29%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |=====================                                                 |  31%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |======================                                                |  32%\n  |                                                                            \n  |=======================                                               |  32%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |========================                                              |  34%\n  |                                                                            \n  |=========================                                             |  35%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |==========================                                            |  36%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |===========================                                           |  39%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |============================                                          |  41%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |=============================                                         |  42%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |===============================                                       |  45%\n  |                                                                            \n  |================================                                      |  45%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |=================================                                     |  47%\n  |                                                                            \n  |=================================                                     |  48%\n  |                                                                            \n  |==================================                                    |  48%\n  |                                                                            \n  |==================================                                    |  49%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=====================================                                 |  52%\n  |                                                                            \n  |=====================================                                 |  53%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |======================================                                |  55%\n  |                                                                            \n  |=======================================                               |  55%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |=========================================                             |  58%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |==========================================                            |  59%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |===========================================                           |  61%\n  |                                                                            \n  |============================================                          |  62%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |============================================                          |  64%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |=============================================                         |  65%\n  |                                                                            \n  |==============================================                        |  66%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |===============================================                       |  68%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |=================================================                     |  69%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |==================================================                    |  72%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |=====================================================                 |  75%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |======================================================                |  77%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |=======================================================               |  79%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |========================================================              |  81%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |==========================================================            |  82%\n  |                                                                            \n  |==========================================================            |  83%\n  |                                                                            \n  |===========================================================           |  84%\n  |                                                                            \n  |===========================================================           |  85%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |============================================================          |  86%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |=============================================================         |  88%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |===============================================================       |  89%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |================================================================      |  91%\n  |                                                                            \n  |================================================================      |  92%\n  |                                                                            \n  |=================================================================     |  92%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |==================================================================    |  94%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |====================================================================  |  96%\n  |                                                                            \n  |===================================================================== |  98%\n  |                                                                            \n  |======================================================================| 100%\n\n\nGet some info about the results\n\nleaderboard &lt;- automl@leaderboard\nleaderboard\n\n                                                model_id       auc   logloss\n1    StackedEnsemble_AllModels_3_AutoML_1_20230615_23403 0.9589026 0.1587188\n2    StackedEnsemble_AllModels_2_AutoML_1_20230615_23403 0.9581103 0.1600754\n3 StackedEnsemble_BestOfFamily_3_AutoML_1_20230615_23403 0.9574718 0.1612398\n4 StackedEnsemble_BestOfFamily_4_AutoML_1_20230615_23403 0.9571658 0.1614802\n5    StackedEnsemble_AllModels_1_AutoML_1_20230615_23403 0.9569760 0.1618418\n6 StackedEnsemble_BestOfFamily_2_AutoML_1_20230615_23403 0.9558707 0.1635940\n      aucpr mean_per_class_error      rmse        mse\n1 0.7748415            0.1370284 0.2171936 0.04717304\n2 0.7697244            0.1431218 0.2183639 0.04768280\n3 0.7660405            0.1624225 0.2190286 0.04797351\n4 0.7654360            0.1609661 0.2189755 0.04795026\n5 0.7663680            0.1604287 0.2194169 0.04814379\n6 0.7606197            0.1386774 0.2203622 0.04855950\n\n[43 rows x 7 columns] \n\n\nGet the best model by metrics and make predictions using it\n\ntest_h2o &lt;- h2o.splitFrame(as.h2o(prepared_data), ratios = c(0.85))[[2]]\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n\nbest_model &lt;- automl@leader\npredictions &lt;- h2o.predict(best_model, newdata = test_h2o)\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n\npredictions\n\n  predict         No       Yes\n1     Yes 0.05700387 0.9429961\n2     Yes 0.23104370 0.7689563\n3     Yes 0.08389635 0.9161037\n4     Yes 0.50629080 0.4937092\n5     Yes 0.05008582 0.9499142\n6     Yes 0.12552236 0.8744776\n\n[2892 rows x 3 columns] \n\n\nSaving the best model\n\nh2o.saveModel(best_model, path = \".\\\\leadermodel_h2o\")\n\n[1] \"C:\\\\Users\\\\jakbo\\\\OneDrive\\\\Documents\\\\Studium\\\\MS1\\\\R_Stuff\\\\ss23-bdml-Graypaw\\\\leadermodel_h2o\\\\StackedEnsemble_AllModels_3_AutoML_1_20230615_23403\""
  }
]